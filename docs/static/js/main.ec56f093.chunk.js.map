{"version":3,"sources":["serviceWorker.js","actions/index.js","reducers/session.js","reducers/user.js","reducers/index.js","services/request.js","components/Logo.js","components/LoginForm.js","components/SignupForm.js","pages/Login.js","pages/NotFound.js","pages/base.js","components/ProfilePicture.js","components/ThemeSwitch.js","components/Notification.js","components/Topbar.js","components/Tag.js","components/Comment.js","helpers/stringSanitizer.js","components/CommentForm.js","components/Post.js","components/PostForm.js","components/FollowingFeed.js","pages/Feed.js","components/UserProfileData.js","pages/Profile.js","pages/Post.js","pages/Notifications.js","pages/Follows.js","pages/index.js","index.js"],"names":["Boolean","window","location","hostname","match","types","SET_USER_NICKNAME","SET_USER_EMAIL","SET_USER_PROFILE_PICTURE","SET_USER_FOLLOWING","SET_USER_FOLLOWEDBY","UNSET_USER","SET_SESSION_TOKEN","SET_SESSION_USERID","SET_SESSION_ACTIVE","SET_DARK_THEME","initialState","active","token","userId","nickname","profilePicture","email","following","followedBy","mydriaApp","combineReducers","session","state","action","type","actionTypes","darkTheme","user","baseUrl","validateSession","a","response","axios","url","method","headers","res","userData","data","login","password","success","loginForm","message","signup","signupForm","loadSomePosts","Cookies","get","sort","b","dateA","Date","date","getTime","publishPost","post","hasPicture","formData","FormData","imageFile","document","getElementById","append","files","_boundary","error","img","id","likePost","postId","unlikePost","updatePost","updatedPost","_id","deletePost","getUserData","getUserPosts","posts","followUser","unfollowUser","updateUserData","uploadProfilePicture","resolveImageUrl","imageId","setTmpImage","getTmpImageUrl","name","ext","getPostComments","publishComment","comment","deleteComment","commentId","updateComment","updatedComment","sharePost","text","tags","getNotifications","loadPostData","search","query","props","className","LoginForm","handleLogin","bind","handleKeyPress","e","charCode","this","value","doLogin","Form","Group","controlId","Control","placeholder","onKeyPress","Button","variant","onClick","block","Component","SignupForm","passwordAgain","handleChange","handleSignup","target","setState","doSignup","onChange","Text","Check","label","LoginPage","sessionActive","messageType","showSignupForm","renderMessage","renderFormFooter","showLogin","showSignup","renderForm","requestService","set","length","Alert","actionButton","Row","Col","sm","to","Fragment","Container","md","lg","xl","Logo","NotFound","mapStateToProps","mapDispatchToProps","dispatch","setDarkTheme","setSessionActive","setSessionUserId","setSessionToken","setUserEmail","setUserNickname","setUserFollowing","setUserFollowedBy","setUserProfilePicture","profilePic","unsetUser","MydriaPage","logout","sessionInit","toggleDarkTheme","getPageClasses","request","loadPageData","remove","sessionExpired","ProfilePicture","getHref","handleClick","classes","noMargin","size","mobileOnly","tabletDesktopOnly","pictureId","preventDefault","getClasses","square","style","backgroundImage","pictureUrl","href","ThemeSwitch","renderMobileIcon","icon","faMoon","faSun","checked","React","connect","Notification","getLabel","months","from","now","event","getDate","getMonth","getFullYear","mins","Math","floor","day","month","hours","getHours","getMinutes","NavDropdown","Item","getDateLabel","Topbar","userPictureUrl","showMobileSearch","notifications","notificationsLoaded","toggleMobileSearch","renderMobileSearchReturnButton","loadNotifications","renderNotifications","req","faArrowLeft","forEach","notification","push","key","Spinner","animation","role","Navbar","bg","expand","fixed","Brand","inline","onKeyDown","handleKeyDown","faSearch","Nav","Link","alignRight","title","faBell","Divider","Tag","handleCloseClick","removeTag","Badge","faTimesCircle","PostComment","editing","getProfilePageUrl","isAuthor","editComment","uneditComment","saveChanges","renderEditForm","getId","commentData","author","toDateString","Dropdown","faEdit","faTrashAlt","faMinusSquare","commentText","setTimeout","updatedText","console","log","as","rows","Media","Body","renderCommentDate","xs","Toggle","faEllipsisH","Menu","renderActions","indexOf","replace","substring","CommentForm","hideComments","Post","tempLike","tempUnlike","showComments","showShareModal","showConfirmModal","confirmModalData","editTags","postComments","renderPostDate","liked","unliked","likeClick","unlikeClick","renderLikesQty","renderUnlikesQty","clickCallback","renderPostTags","renderError","userIsAuthor","hidePost","editPost","uneditPost","removeEditTag","renderEditTags","onTagPush","renderPostPhoto","toggleComments","renderComments","renderMiniPost","toggleShareModal","renderShareModal","closeConfirmModal","renderConfirmModal","renderLikeds","renderUnlikeds","postData","likedBy","filter","userLiked","unlikedBy","userUnliked","postTags","postText","sharedFrom","shareText","shareTags","appendPost","tagContent","tagIndex","splice","tag","tagInput","sanitize","tagExists","updatedTags","commentFormId","c","next","share","buttonsRow","onclick","Image","src","fluid","comments","miniPostData","funct","likes","likesQty","i","Tooltip","unlikes","unlikesQty","Modal","show","onHide","Header","closeButton","Title","Footer","OverlayTrigger","placement","delay","hide","overlay","faThumbsUp","faThumbsDown","faComment","commentsTotal","faShare","PostForm","posting","warning","showPhotoForm","hasPhoto","photoSrc","renderErrorMessage","renderWarningMessage","renderTags","handlePhotoPut","removePhoto","togglePhotoForm","renderPhotoButton","buildPost","imgData","imgSrc","faTimes","File","feedbackTooltip","faImage","onSubmit","renderPhotoForm","FollowingFeed","renderFollowedUsers","followedUser","ListGroup","nickName","FeedPage","searchString","searchResult","loadingPosts","renderPosts","getDarkTheme","searchQuery","params","URL","searchParams","searchText","unshift","callback","p","UserProfileData","showEditForm","showProfilePictureForm","showErrorMessage","showProfilePictureModal","renderBio","renderLocation","renderFollowButton","ownProfile","toggleEditForm","buildUserData","saveProfileData","toggleProfilePictureForm","openProfilePictureModal","closeProfilePictureModal","renderProfilePictureModal","bio","country","city","Card","faMapMarkerAlt","unfollowClick","followClick","reload","Label","faUsers","renderProfilePictureForm","faCamera","renderInfo","ProfilePage","loadPostsError","notFound","loadingUserData","isFollowing","profileId","userReq","postsReq","profileIndex","userIndex","loading","renderPostForm","PostPage","loadingPost","NotificationPage","loadingNotifs","n","FollowsPage","showingFollowed","showingFollowing","getFollowedQty","getFollowingQty","toggleShowFollowed","toggleShowFollowing","renderFollowedList","renderFollowingList","faCaretUp","faCaretDown","followed","followingUser","Accordion","eventKey","getFollowedCaretIcon","Collapse","getFollowingCaretIcon","Login","Follows","Feed","Profile","Notifications","store","createStore","ReactDOM","render","exact","path","component","pages","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"wNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0CClBAC,EAAQ,CACVC,kBAAmB,oBACnBC,eAAgB,iBAChBC,yBAA0B,2BAC1BC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,WAAY,aACZC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,eAAgB,kBAwELV,QChFTW,EAAe,CACnBC,QAAQ,EACRC,MAAO,KACPC,OAAQ,MCHJH,EAAe,CACnBI,SAAU,KACVC,eAAgB,KAChBC,MAAO,KACPC,UAAW,GACXC,WAAY,ICGCC,EALGC,YAAgB,CAChCC,QFEa,WAAwC,IAA/BC,EAA8B,uDAAtBZ,EAAca,EAAQ,uCACpD,OAAOA,EAAOC,MACZ,KAAKC,EAAYnB,kBACf,OAAO,2BACFgB,GADL,IAEEV,MAAOW,EAAOX,QAElB,KAAKa,EAAYlB,mBACf,OAAO,2BACFe,GADL,IAEET,OAAQU,EAAOV,SAEnB,KAAKY,EAAYjB,mBACf,OAAGe,EAAOZ,OACD,2BACFW,GADL,IAEEX,QAAQ,IAIHD,EAEX,KAAKe,EAAYhB,eACf,OAAO,2BACFa,GADL,IAEEI,UAAWH,EAAOZ,SAEtB,QACE,OAAOW,IE7BXK,KDGa,WAAwC,IAA/BL,EAA8B,uDAAtBZ,EAAca,EAAQ,uCACpD,OAAOA,EAAOC,MACZ,KAAKC,EAAYxB,eACf,OAAO,2BACFqB,GADL,IAEEN,MAAOO,EAAOP,QAElB,KAAKS,EAAYzB,kBACf,OAAO,2BACFsB,GADL,IAEER,SAAUS,EAAOT,WAErB,KAAKW,EAAYvB,yBACf,OAAO,2BACFoB,GADL,IAEEP,eAAgBQ,EAAOR,iBAE3B,KAAKU,EAAYtB,mBACf,OAAO,2BACFmB,GADL,IAEEL,UAAWM,EAAON,YAEtB,KAAKQ,EAAYrB,oBACf,OAAO,2BACFkB,GADL,IAEEJ,WAAYK,EAAOL,aAEvB,KAAKO,EAAYpB,WACf,OAAOK,EACT,QACE,OAAOY,M,gHErCPM,EAAU,mCA6pBD,GACbC,gBAvpBmB,uCAAG,WAAgBjB,GAAhB,iBAAAkB,EAAA,yDACjBlB,EADiB,yCAEb,CACLD,QAAQ,IAHU,cAMlBoB,EAAW,GANO,kBAQFC,IAAM,CACtBC,IAAKL,EAAU,WACfM,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,KAZF,OAQdwB,EARc,OAepBL,EAAW,CACTpB,QAAQ,EACR0B,SAAUD,EAAIE,MAjBI,kDAqBpBP,EAAW,CACTpB,QAAQ,GAtBU,iCAyBfoB,GAzBe,0DAAH,sDAwpBnBQ,MAtnBS,uCAAG,WAAgBvB,EAAOwB,GAAvB,mBAAAV,EAAA,yDACPd,GAAUwB,EADH,yCAEH,CAAEC,SAAS,IAFR,cAIRC,EAAY,CAAE1B,QAAOwB,YACrBT,EAAW,GALH,kBAOQC,IAAM,CACtBE,OAAQ,OACRD,IAAKL,EAAU,SACfU,KAAMI,IAVE,OAOJN,EAPI,OAYVL,EAAW,CACTU,SAAS,EACT7B,MAAOwB,EAAIE,KAAK1B,MAChBC,OAAQuB,EAAIE,KAAKzB,QAfT,kDAmBVkB,EAAW,CACTU,SAAS,EACTE,QAAS,KAAEZ,SAAW,KAAEA,SAASO,KAC/B,oEAtBM,iCAyBLP,GAzBK,0DAAH,wDAunBTa,OA3lBU,uCAAG,WAAgBC,GAAhB,eAAAf,EAAA,6DACTC,EAAW,GADF,kBAGOC,IAAM,CACtBE,OAAQ,OACRD,IAAKL,EAAU,SACfU,KAAMO,IANG,cAQXd,EAAW,CACTU,SAAS,GATA,gDAaXV,EAAW,CACTU,SAAS,EACTE,QAAS,KAAEZ,SAASO,MAfX,iCAkBNP,GAlBM,yDAAH,sDA4lBVe,cAvkBiB,uCAAG,gCAAAhB,EAAA,6DAChBC,EAAW,GADK,SAGZnB,EAAQmC,IAAQC,IAAI,SAHR,SAIAhB,IAAM,CACtBE,OAAQ,MACRD,IAAKL,EAAU,eACfO,QAAS,CACP,iBAAkBvB,KARJ,OAIZwB,EAJY,QAWlBL,EAAWK,EAAIE,MACNW,MAAK,SAACnB,EAAGoB,GAChB,IAAIC,EAAQ,IAAIC,KAAKtB,EAAEuB,MAEvB,OADY,IAAID,KAAKF,EAAEG,MACVC,UAAYH,EAAMG,aAff,kDAmBlBvB,EAAW,CACTU,SAAS,EACTE,QAAS,KAAEZ,SAASO,MArBJ,iCAwBbP,GAxBa,0DAAH,qDAwkBjBwB,YA7iBe,uCAAG,WAAgBC,EAAMC,GAAtB,2BAAA3B,EAAA,yDACdC,EAAW,GADG,SAGVnB,EAAQmC,IAAQC,IAAI,SACtBb,EAAU,CACZ,iBAAkBvB,IAEjB6C,EAPa,wBASVC,EAAW,IAAIC,SACfC,EAAYC,SAASC,eAAe,aACxCJ,EAASK,OAAO,OAAQH,EAAUI,MAAM,IAX1B,mBAcMhC,IAAM,CACtBC,IAAKL,EAAO,UACZM,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,EAClB,eAAe,wBAAf,OAAwC8C,EAASO,YAEnD3B,KAAMoB,IArBI,QAcNtB,EAdM,OAuBZL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAzBA,kDA6BZP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UA/BC,QAmCdyB,EAAKW,IAAMpC,EAASO,KAAK8B,GAnCX,yBAsCEpC,IAAM,CACtBC,IAAKL,EAAU,SACfM,OAAQ,OACRC,UACAG,KAAMkB,IA1CQ,QAsCVpB,EAtCU,OA4ChBL,EAAW,CACTU,SAAS,EACTe,KAAMpB,EAAIE,MA9CI,kDAkDhBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UApDK,iCAuDXA,GAvDW,iEAAH,wDA8iBfsC,SApfY,uCAAG,WAAgBC,GAAhB,mBAAAxC,EAAA,6DACXC,EAAW,GADA,SAGPnB,EAAQmC,IAAQC,IAAI,SAHb,SAIKhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,EAAZ,SACZpC,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,KART,OAIPwB,EAJO,OAWbL,EAAW,CACTU,SAAS,EACTe,KAAMpB,EAAIE,MAbC,gDAiBbP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBE,iCAsBRA,GAtBQ,yDAAH,sDAqfZwC,WA5dc,uCAAG,WAAgBD,GAAhB,mBAAAxC,EAAA,6DACbC,EAAW,GADE,SAGTnB,EAAQmC,IAAQC,IAAI,SAHX,SAIGhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,EAAZ,WACZpC,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,KARP,OAITwB,EAJS,OAWfL,EAAW,CACTU,SAAS,EACTe,KAAMpB,EAAIE,MAbG,gDAiBfP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBI,iCAsBVA,GAtBU,yDAAH,sDA6ddyC,WApcc,uCAAG,WAAgBC,GAAhB,mBAAA3C,EAAA,6DACbC,EAAW,GADE,SAGTnB,EAAQmC,IAAQC,IAAI,SAHX,SAIGhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY6C,EAAYC,KACpCxC,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,GAEpB0B,KAAMmC,IAVO,OAITrC,EAJS,OAYfL,EAAW,CACTU,SAAS,EACTe,KAAMpB,EAAIE,MAdG,gDAkBfP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UApBI,iCAuBVA,GAvBU,yDAAH,sDAqcd4C,WA3ac,uCAAG,WAAgBL,GAAhB,mBAAAxC,EAAA,6DACbC,EAAW,GADE,SAGTnB,EAAQmC,IAAQC,IAAI,SAHX,SAIGhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,GACxBpC,OAAQ,SACRC,QAAS,CACP,iBAAkBvB,KARP,OAITwB,EAJS,OAWfL,EAAW,CACTU,SAAS,EACTe,KAAMpB,EAAIE,MAbG,gDAiBfP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBI,iCAsBVA,GAtBU,yDAAH,sDA4ad6C,YAnZe,uCAAG,WAAgB9D,GAAhB,mBAAAgB,EAAA,6DACdC,EAAW,GADG,SAGVnB,EAAQmC,IAAQC,IAAI,SAHV,SAIEhB,IAAM,CACtBC,IAAKL,EAAO,gBAAYd,GACxBoB,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,KARN,OAIVwB,EAJU,OAWhBL,EAAW,CACTU,SAAS,EACTJ,SAAUD,EAAIE,MAbA,gDAiBhBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBK,iCAsBXA,GAtBW,yDAAH,sDAoZf8C,aA3XgB,uCAAG,WAAgBhE,GAAhB,iBAAAiB,EAAA,6DACfC,EAAW,GADI,kBAGCC,IAAM,CACtBC,IAAKL,EAAO,iBAAaf,GACzBqB,OAAQ,QALO,OAGXE,EAHW,OAOjBL,EAAW,CACTU,SAAS,EACTqC,MAAO1C,EAAIE,MATI,gDAajBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAfM,iCAkBZA,GAlBY,yDAAH,sDA4XhBgD,WAvWc,uCAAG,WAAgBlE,GAAhB,iBAAAiB,EAAA,6DACbC,EAAW,GADE,SAGTnB,EAAQmC,IAAQC,IAAI,SAHX,SAIGhB,IAAM,CACtBC,IAAKL,EAAO,kBAAcf,GAC1BqB,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,KARP,cAWfmB,EAAW,CACTU,SAAS,GAZI,gDAgBfV,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAlBI,iCAqBVA,GArBU,yDAAH,sDAwWdiD,aAhVgB,uCAAG,WAAgBnE,GAAhB,iBAAAiB,EAAA,6DACfC,EAAW,GADI,SAGXnB,EAAQmC,IAAQC,IAAI,SAHT,SAIChB,IAAM,CACtBC,IAAKL,EAAO,kBAAcf,GAC1BqB,OAAQ,SACRC,QAAS,CACP,iBAAkBvB,KARL,cAWjBmB,EAAW,CACTU,SAAS,GAZM,gDAgBjBV,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAlBM,iCAqBZA,GArBY,yDAAH,sDAiVhBkD,eAzTkB,uCAAG,WAAgBnE,EAAUuB,GAA1B,mBAAAP,EAAA,6DACjBC,EAAW,GADM,SAGbnB,EAAQmC,IAAQC,IAAI,SAHP,SAIDhB,IAAM,CACtBC,IAAKL,EAAO,gBAAYd,GACxBoB,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,GAEpB0B,KAAMD,IAVW,OAIbD,EAJa,OAYnBL,EAAW,CACTU,SAAS,EACTJ,SAAUD,EAAIE,MAdG,gDAkBnBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UApBQ,iCAuBdA,GAvBc,yDAAH,wDA0TlBmD,qBAhSwB,uCAAG,kCAAApD,EAAA,6DACvBC,EAAW,GACX2B,EAAW,IAAIC,SACfC,EAAYC,SAASC,eAAe,QACxCJ,EAASK,OAAO,OAAQH,EAAUI,MAAM,IAJb,SAMnBpD,EAAQmC,IAAQC,IAAI,SAND,SAOPhB,IAAM,CACtBC,IAAKL,EAAO,eACZM,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,EAClB,eAAe,wBAAf,OAAwC8C,EAASO,YAEnD3B,KAAMoB,IAdiB,cAgBzB3B,EAAW,CACTU,SAAS,GAjBc,kDAqBzBV,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAvBc,iCA0BpBA,GA1BoB,0DAAH,qDAiSxBoD,gBAxBsB,SAASC,GAC/B,OAAOA,EAAUxD,EAAO,iBAAawD,GAAY,oBAwBjDC,YArQe,uCAAG,oCAAAvD,EAAA,6DACdC,EAAW,IACX2B,EAAW,IAAIC,UACVI,OAAO,OAAO,GACnBH,EAAYC,SAASC,eAAe,aACxCJ,EAASK,OAAO,OAAQH,EAAUI,MAAM,IALtB,SAOVpD,EAAQmC,IAAQC,IAAI,SAPV,SAQEhB,IAAM,CACtBC,IAAKL,EAAO,OACZM,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,EAClB,eAAe,wBAAf,OAAwC8C,EAASO,YAEnD3B,KAAMoB,IAfQ,OAQVtB,EARU,OAiBhBL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAnBI,kDAuBhBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAzBK,iCA4BXA,GA5BW,0DAAH,qDAsQfuD,eAtBqB,SAASC,EAAMC,GACpC,OAAO5D,EAAO,eAAW2D,EAAX,gBAAuBC,IAsBrCC,gBAxOmB,uCAAG,WAAenB,GAAf,mBAAAxC,EAAA,6DAClBC,EAAW,GADO,SAGdnB,EAAQmC,IAAQC,IAAI,SAHN,SAIFhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,EAAZ,aACZpC,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,KARF,OAIdwB,EAJc,OAWpBL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAbQ,gDAiBpBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBS,iCAsBfA,GAtBe,yDAAH,sDAyOnB2D,eAhNkB,uCAAG,WAAeC,EAASrB,GAAxB,mBAAAxC,EAAA,6DACjBC,EAAW,GADM,SAGbnB,EAAQmC,IAAQC,IAAI,SAHP,SAIDhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,EAAZ,aACZpC,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,GAEpB0B,KAAMqD,IAVW,OAIbvD,EAJa,OAYnBL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAdO,gDAkBnBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UApBQ,iCAuBdA,GAvBc,yDAAH,wDAiNlB6D,cAvLiB,uCAAG,WAAeC,GAAf,iBAAA/D,EAAA,6DAChBC,EAAW,GADK,SAGZnB,EAAQmC,IAAQC,IAAI,SAHR,SAIAhB,IAAM,CACtBC,IAAKL,EAAO,mBAAeiE,GAC3B3D,OAAQ,SACRC,QAAS,CACP,iBAAkBvB,KARJ,cAWlBmB,EAAW,CACTU,SAAS,GAZO,gDAgBlBV,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAlBO,iCAqBbA,GArBa,yDAAH,sDAwLjB+D,cAhKiB,uCAAG,WAAeC,GAAf,mBAAAjE,EAAA,6DAChBC,EAAW,GADK,SAGZnB,EAAQmC,IAAQC,IAAI,SAHR,SAIAhB,IAAM,CACtBC,IAAKL,EAAO,mBAAemE,EAAerB,KAC1CxC,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,GAEpB0B,KAAMyD,IAVU,OAIZ3D,EAJY,OAYlBL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAdM,gDAkBlBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UApBO,iCAuBbA,GAvBa,yDAAH,sDAiKjBiE,UAvIa,uCAAG,WAAe1B,GAAf,mCAAAxC,EAAA,6DAAuBmE,EAAvB,+BAA8B,GAAIC,EAAlC,+BAAyC,GACrDnE,EAAW,GADC,SAGRnB,EAAQmC,IAAQC,IAAI,SAHZ,SAIIhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,EAAZ,UACZpC,OAAQ,OACRC,QAAS,CACP,iBAAkBvB,GAEpB0B,KAAM,CACJ2D,OACAC,UAZU,OAIR9D,EAJQ,OAedL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAjBE,kDAqBdP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAvBG,iCA0BTA,GA1BS,0DAAH,sDAwIboE,iBA3GoB,uCAAG,gCAAArE,EAAA,6DACnBC,EAAW,GADQ,SAGfnB,EAAQmC,IAAQC,IAAI,SAHL,SAIHhB,IAAM,CACtBC,IAAKL,EAAO,iBACZM,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,KARD,OAIfwB,EAJe,OAWrBL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAbS,gDAiBrBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBU,iCAsBhBA,GAtBgB,yDAAH,qDA4GpBqE,aAnFgB,uCAAG,WAAe9B,GAAf,mBAAAxC,EAAA,6DACfC,EAAW,GADI,SAGXnB,EAAQmC,IAAQC,IAAI,SAHT,SAIChB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0C,GACxBpC,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,KARL,OAIXwB,EAJW,OAWjBL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAbK,gDAiBjBP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBM,iCAsBZA,GAtBY,yDAAH,sDAoFhBsE,OA3DU,uCAAG,WAAeC,GAAf,mBAAAxE,EAAA,6DACTC,EAAW,GADF,SAGLnB,EAAQmC,IAAQC,IAAI,SAHf,SAIOhB,IAAM,CACtBC,IAAKL,EAAO,gBAAY0E,GACxBpE,OAAQ,MACRC,QAAS,CACP,iBAAkBvB,KARX,OAILwB,EAJK,OAWXL,EAAW,CACTU,SAAS,EACTH,KAAMF,EAAIE,MAbD,gDAiBXP,EAAW,CACTU,SAAS,EACTyB,MAAO,KAAEnC,UAnBA,iCAsBNA,GAtBM,yDAAH,uDC7nBG,WAASwE,GACtB,OAAO,wBAAIC,UAAU,WAAd,W,gBCEYC,E,kDACnB,WAAYF,GAAO,IAAD,8BAChB,cAAMA,IACDG,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAHN,E,2DAMHE,GACK,KAAfA,EAAEC,UACHC,KAAKL,gB,oCAKP,IAAM1F,EAAQ6C,SAASC,eAAe,eAAekD,MAC/CxE,EAAWqB,SAASC,eAAe,kBAAkBkD,MAC3DD,KAAKR,MAAMU,QAAQ,CAAEjG,QAAOwB,e,+BAI5B,OACE,kBAAC0E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,eACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc7F,KAAK,QACnB+D,KAAK,QACL+B,YAAY,SACZC,WAAYR,KAAKH,kBAInB,kBAACM,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc7F,KAAK,WACnB+D,KAAK,WACL+B,YAAY,WACZC,WAAYR,KAAKH,kBAGnB,kBAACY,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASX,KAAKL,YAAaiB,OAAK,GAAvD,c,GArC+BC,a,QCAlBC,E,kDACnB,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXN,MAAO,GACPF,SAAU,GACV0B,SAAU,GACVsF,cAAe,IAEjB,EAAKC,aAAe,EAAKA,aAAapB,KAAlB,gBACpB,EAAKqB,aAAe,EAAKA,aAAarB,KAAlB,gBATJ,E,yDAYLE,GACX,IAAMtB,EAAOsB,EAAEoB,OAAO1C,KAChByB,EAAQH,EAAEoB,OAAOjB,MACvBD,KAAKmB,SAAL,eACG3C,EAAOyB,M,qCAQVD,KAAKR,MAAM4B,SAASpB,KAAKzF,S,+BAIzB,OACE,kBAAC4F,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc7F,KAAK,QACjB+D,KAAK,QACL+B,YAAY,SACZN,MAAOD,KAAKzF,MAAMN,MAClBoH,SAAUrB,KAAKgB,aAAapB,KAAKI,QAEnC,kBAACG,EAAA,EAAKmB,KAAN,CAAW7B,UAAU,cAArB,mDAKF,kBAACU,EAAA,EAAKC,MAAN,CAAYC,UAAU,sBACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc7F,KAAK,OACjB+D,KAAK,WACL+B,YAAY,WACZN,MAAOD,KAAKzF,MAAMR,SAClBsH,SAAUrB,KAAKgB,aAAapB,KAAKI,SAIrC,kBAACG,EAAA,EAAKC,MAAN,CAAYC,UAAU,sBACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc7F,KAAK,WACjB+D,KAAK,WACL+B,YAAY,WACZN,MAAOD,KAAKzF,MAAMkB,SAClB4F,SAAUrB,KAAKgB,aAAapB,KAAKI,SAIrC,kBAACG,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc7F,KAAK,WACjB+D,KAAK,gBACL+B,YAAY,iBACZN,MAAOD,KAAKzF,MAAMwG,cAClBM,SAAUrB,KAAKgB,aAAapB,KAAKI,QAEnC,kBAACG,EAAA,EAAKmB,KAAN,CAAW7B,UAAU,cAArB,8HAMF,kBAACU,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,EAAA,EAAKoB,MAAN,CAAY9G,KAAK,WAAW+G,MAAM,6CAGpC,kBAACf,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASX,KAAKiB,aAAcL,OAAK,GAA3D,gB,GA9EgCC,a,gCCUnBY,E,kDACnB,WAAYjC,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CAEXmH,eAAe,EAEf9F,QAAS,GAET+F,YAAa,GAEbC,gBAAgB,GAGlB,EAAK1B,QAAU,EAAKA,QAAQN,KAAb,gBACf,EAAKwB,SAAW,EAAKA,SAASxB,KAAd,gBAChB,EAAKiC,cAAgB,EAAKA,cAAcjC,KAAnB,gBACrB,EAAKkC,iBAAmB,EAAKA,iBAAiBlC,KAAtB,gBACxB,EAAKmC,UAAY,EAAKA,UAAUnC,KAAf,gBACjB,EAAKoC,WAAa,EAAKA,WAAWpC,KAAhB,gBAClB,EAAKqC,WAAa,EAAKA,WAAWrC,KAAhB,gBAnBF,E,uLA0BZ/F,EAAQmC,IAAQC,IAAI,S,SACFiG,EAAepH,gBAAgBjB,G,cAC1CD,QAEToG,KAAKmB,SAAS,CAAEO,eAAe,I,6KAQrB/F,G,uFACQuG,EAAe1G,MAAMG,EAAU1B,MAAO0B,EAAUF,U,QAA9DD,E,QACGE,SACPM,IAAQmG,IAAI,QAAS3G,EAAM3B,OAC3BmC,IAAQmG,IAAI,SAAU3G,EAAM1B,QAE5BkG,KAAKmB,SAAS,CAAEO,eAAe,KAI/B1B,KAAKmB,SAAS,CAAEvF,QAASJ,EAAMI,QAAS+F,YAAa,Y,+KAa1C7F,G,uFACQoG,EAAerG,OAAOC,G,QAArCD,E,QACIH,SACRsE,KAAK+B,YAEL/B,KAAKmB,SAAS,CACZvF,QAAS,kDACT+F,YAAa,aAKf3B,KAAKmB,SAAS,CAAEvF,QAASC,EAAOD,QAAS+F,YAAa,Y,6IASxD,OAAG3B,KAAKzF,MAAMqB,QAAQwG,OAElB,kBAACC,EAAA,EAAD,CAAO3B,QAASV,KAAKzF,MAAMoH,YAAalC,UAAU,QAC/CO,KAAKzF,MAAMqB,SAKT,kBAACyG,EAAA,EAAD,CAAO3B,QAAQ,OAAOjB,UAAU,0BAAhC,O,mCAQTO,KAAKmB,SAAS,CAAES,gBAAgB,EAAMhG,QAAS,O,kCAO/CoE,KAAKmB,SAAS,CAAES,gBAAgB,EAAOhG,QAAS,O,mCAIhD,OAAOoE,KAAKzF,MAAMqH,eAChB,kBAAC,EAAD,CAAYR,SAAUpB,KAAKoB,WAE3B,kBAAC,EAAD,CAAWlB,QAASF,KAAKE,Y,yCAQ3B,IAAMoC,EAAetC,KAAKzF,MAAMqH,eAC9B,kBAACnB,EAAA,EAAD,CAAQC,QAAQ,OAAOE,OAAK,EAACD,QAASX,KAAK+B,WAA3C,SAIA,kBAACtB,EAAA,EAAD,CAAQC,QAAQ,OAAOE,OAAK,EAACD,QAASX,KAAKgC,YAA3C,WAIF,OACE,kBAACO,EAAA,EAAD,CAAK9C,UAAU,8BACb,kBAAC+C,EAAA,EAAD,CAAKC,GAAG,OAAOhD,UAAU,0BACvB,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,OAAOE,OAAK,GAA5B,mBAEF,kBAAC4B,EAAA,EAAD,CAAKC,GAAG,OAAOhD,UAAU,0BACrB6C,M,+BAOR,OAAOtC,KAAKzF,MAAMmH,cAChB,kBAAC,IAAD,CAAUgB,GAAG,UAEb,kBAAC,IAAMC,SAAP,KACE,yBAAKlD,UAAU,wBACf,kBAACmD,EAAA,EAAD,CAAWnD,UAAU,sBACjB,kBAAC8C,EAAA,EAAD,CAAK9C,UAAU,qCACf,kBAAC+C,EAAA,EAAD,CAAKK,GAAG,IAAIC,GAAG,IAAIrD,UAAU,qCAA7B,iFAGA,kBAAC+C,EAAA,EAAD,CAAKK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAItD,UAAU,0BAClC,kBAACuD,EAAD,MACEhD,KAAKiC,aACLjC,KAAK8B,mBACL9B,KAAK6B,wB,GA7JkBhB,aCXlBoC,E,uKAEjB,OAAO,yBAAKxD,UAAU,yCACpB,kBAACuD,EAAD,MACA,mG,GAJgCnC,a,QCa/B,SAASqC,EAAgB3I,GAC9B,OAAO,eAAIA,GAGN,SAAS4I,EAAmBC,GACjC,MAAO,CACLC,aAAc,SAAAzJ,GAAM,OAAIwJ,EVoDrB,WAAuC,IAAjBxJ,EAAgB,wDACzC,MAAO,CACHa,KAAMzB,EAAMU,eACZE,UUvD6ByJ,CAAazJ,KAC9C0J,iBAAkB,SAAA1J,GAAM,OAAIwJ,EV4CzB,WAA2C,IAAjBxJ,EAAgB,wDAC7C,MAAO,CACHa,KAAMzB,EAAMS,mBACZG,UU/CiC0J,CAAiB1J,KACtD2J,iBAAkB,SAAAzJ,GAAM,OAAIsJ,EVoCzB,SAA0BtJ,GAC7B,MAAO,CACHW,KAAMzB,EAAMQ,mBACZM,UUvCiCyJ,CAAiBzJ,KACtD0J,gBAAiB,SAAA3J,GAAK,OAAIuJ,EV4BvB,SAAyBvJ,GAC5B,MAAO,CACHY,KAAMzB,EAAMO,kBACZM,SU/B+B2J,CAAgB3J,KACnD4J,aAAc,SAAAxJ,GAAK,OAAImJ,EVdpB,SAAsBnJ,GACzB,MAAO,CACHQ,KAAMzB,EAAME,eACZe,SUW4BwJ,CAAaxJ,KAC7CyJ,gBAAiB,SAAA3J,GAAQ,OAAIqJ,EVR1B,SAAyBrJ,GAC5B,MAAO,CACHU,KAAMzB,EAAMC,kBACZc,YUKkC2J,CAAgB3J,KACtD4J,iBAAkB,SAAAzJ,GAAS,OAAIkJ,EVK5B,SAA0BlJ,GAC7B,MAAO,CACHO,KAAMzB,EAAMI,mBACZc,aURoCyJ,CAAiBzJ,KACzD0J,kBAAmB,SAAAzJ,GAAU,OAAIiJ,EVW9B,SAA2BjJ,GAC9B,MAAO,CACHM,KAAMzB,EAAMK,oBACZc,cUdsCyJ,CAAkBzJ,KAC5D0J,sBAAuB,SAAAC,GAAU,OAAIV,EVH9B,CACH3I,KAAMzB,EAAMG,yBACZa,eUCgE8J,KACpEC,UAAW,kBAAMX,EViBV,CACH3I,KAAMzB,EAAMM,eUdb,IAAM0K,EAAb,kDAEE,WAAYxE,GAAO,IAAD,8BAChB,cAAMA,IACDyE,OAAS,EAAKA,OAAOrE,KAAZ,gBACd,EAAKsE,YAAc,EAAKA,YAAYtE,KAAjB,gBACnB,EAAKuE,gBAAkB,EAAKA,gBAAgBvE,KAArB,gBACvB,EAAKwE,eAAiB,EAAKA,eAAexE,KAApB,gBALN,EAFpB,yMAeQ/F,EAAQmC,IAAQC,IAAI,SAf5B,SAgB0BoI,EAAQvJ,gBAAgBjB,GAhBlD,QAgBUS,EAhBV,QAkBeV,QAEHC,EAAQmC,IAAQC,IAAI,SACpBhC,EAAQK,EAAQgB,SAASrB,MACzBF,EAAWO,EAAQgB,SAASvB,SAC5BC,EAAiBM,EAAQgB,SAAStB,eAClCE,EAAYI,EAAQgB,SAASpB,UAC7BC,EAAaG,EAAQgB,SAASnB,WAC9BL,EAASQ,EAAQgB,SAASqC,IAC1BhD,EAAyC,SAA7BqB,IAAQC,IAAI,aAC9B+D,KAAKkE,YAAYrK,EAAOC,EAAQG,EAAOF,EACrCG,EAAWC,EAAYH,EAAgBW,GACzCqF,KAAKsE,gBAILtE,KAAKiE,SAlCX,wIA4CcpK,EAAOC,EAAQG,EAAOF,EAAUG,EAAWC,EAAYH,EAAgBW,GACjFqF,KAAKR,MAAM8D,kBAAiB,GAC5BtD,KAAKR,MAAM+D,iBAAiBzJ,GAC5BkG,KAAKR,MAAMgE,gBAAgB3J,GAC3BmG,KAAKR,MAAMiE,aAAaxJ,GACxB+F,KAAKR,MAAMkE,gBAAgB3J,GAC3BiG,KAAKR,MAAMmE,iBAAiBzJ,GAC5B8F,KAAKR,MAAMoE,kBAAkBzJ,GAC7B6F,KAAKR,MAAMqE,sBAAsB7J,GACjCgG,KAAKR,MAAM6D,aAAa1I,KArD5B,+BA4DIqB,IAAQuI,OAAO,SACfvI,IAAQuI,OAAO,UACfvE,KAAKR,MAAM8D,kBAAiB,GAC5BtD,KAAKR,MAAMuE,YACX/D,KAAKmB,SAAS,CAAEqD,gBAAgB,MAhEpC,qCAoEI,OAAOxE,KAAKR,MAAMlF,QAAQK,UAAY,iBAAmB,KApE7D,uCAwEI,MAAO,qBAAuBqF,KAAKR,MAAMlF,QAAQK,UAAY,cAAgB,MAxEjF,wCA4EI,IAAIA,EAAYqF,KAAKR,MAAMlF,QAAQK,UACnCqB,IAAQmG,IAAI,aAAcxH,GAC1BqF,KAAKR,MAAM6D,cAAc1I,GACzBqF,KAAKmB,SAAS,QA/ElB,GAAgCN,a,iCCzBX4D,E,kDAanB,WAAYjF,GAAO,IAAD,8BAChB,cAAMA,IACDkF,QAAU,EAAKA,QAAQ9E,KAAb,gBACf,EAAK+E,YAAc,EAAKA,YAAY/E,KAAjB,gBAHH,E,yDAOhB,IAAIgF,EAAU,6BAYd,OAXAA,GAAW5E,KAAKR,MAAMqF,SAAW,GAAK,QACtCD,GAAO,WAAQ5E,KAAKR,MAAMsF,MACvB9E,KAAKR,MAAMuF,WACZH,GAAW,4BAEL5E,KAAKR,MAAMwF,oBACjBJ,GAAW,6BAEV5E,KAAKR,MAAMoB,QACZgE,GAAW,UAENA,I,mCAIP,OAAOP,EAAQjG,gBAAgB4B,KAAKR,MAAMyF,a,gCAI1C,MAA2B,QAApBjF,KAAKR,MAAMsF,KAAiB,IAAM,YAAc9E,KAAKR,MAAMzF,W,kCAGxD+F,GACVA,EAAEoF,iBACmC,oBAA3BlF,KAAKR,MAAMmF,aACnB3E,KAAKR,MAAMmF,gB,+BAIN,IAAD,OACN,OAAO,yBAAKlF,UAAWO,KAAKmF,cAEJ,QAApBnF,KAAKR,MAAMsF,KACX,uBAAGrF,UAAW,sBAAwBO,KAAKR,MAAM4F,OAAS,UAAY,IACtEC,MAAO,CAACC,gBAAgB,OAAD,OAAStF,KAAKuF,aAAd,MACvBC,KAAK,GAAG7E,QAAS,SAAAb,GAAC,OAAI,EAAK6E,YAAY7E,MAGvC,uBAAGL,UAAW,sBAAwBO,KAAKR,MAAM4F,OAAS,UAAY,IACtEI,KAAMxF,KAAK0E,UAAWW,MAAO,CAACC,gBAAgB,OAAD,OAAStF,KAAKuF,aAAd,a,GA5DT1E,a,gBCAtC4E,G,kDAEJ,WAAYjG,GAAO,IAAD,8BAChB,cAAMA,IACD2E,gBAAkB,EAAKA,gBAAgBvE,KAArB,gBACvB,EAAK8F,iBAAmB,EAAKA,iBAAiB9F,KAAtB,gBAHR,E,0DAOhB,OAAOI,KAAKhE,QAAQC,IAAI,e,wCAIxB+D,KAAKR,MAAM2E,oB,yCAIX,OAAO,yBAAK1E,UAAU,uCAAuCkB,QAASX,KAAKmE,iBAEvEnE,KAAKR,MAAMlF,QAAQK,UACnB,kBAAC,IAAD,CAAiBgL,KAAMC,IAAQnG,UAAU,iBAEzC,kBAAC,IAAD,CAAiBkG,KAAME,IAAOpG,UAAU,mB,+BAM5C,OAAO,kBAAC,IAAMkD,SAAP,KACL,yBAAKlD,UAAU,qEACb,kBAAC,IAAD,CAAiBkG,KAAME,IAAOpG,UAAU,gBACxC,kBAACU,EAAA,EAAKoB,MAAN,CACE9G,KAAK,SACL4C,GAAG,0BACHmE,MAAM,GACN/B,UAAU,YACVqG,QAAS9F,KAAKR,MAAMlF,QAAQK,UAC5B0G,SAAUrB,KAAKmE,kBAEjB,kBAAC,IAAD,CAAiBwB,KAAMC,IAAQnG,UAAU,kBAE3C,yBAAKA,UAAU,iEACXO,KAAK0F,yB,GA1CWK,IAAMlF,WAgDjBmF,eAAQ9C,EAAR8C,CAAyBP,IClDlCQ,G,kDAEJ,WAAYzG,GAAO,IAAD,8BAChB,cAAMA,IACD0G,SAAW,EAAKA,SAAStG,KAAd,gBAChB,EAAKrF,MAAQ,CACX4L,OAAQ,CACN,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QALjE,E,uDAWhB,IAAI3E,EAAQ,eACZ,OAAOxB,KAAKR,MAAMjE,KAAKd,MACrB,IAAK,aACH+G,EAAQ,oBACR,MACF,IAAK,eACHA,EAAQ,sBACR,MACF,IAAK,iBACHA,EAAQ,2BACR,MACF,IAAK,cACHA,EAAQ,qBACR,MACF,IAAK,SACHA,EAAQ,0BAGZ,OAAO,kBAAC,IAAMmB,SAAP,KACL,gCAAS3C,KAAKR,MAAMjE,KAAK6K,KAAKrM,UAC5ByH,K,qCAKJ,IAAI6E,EAAM,IAAIhK,KACViK,EAAQ,IAAIjK,KAAK2D,KAAKR,MAAMjE,KAAKe,MAErC,GAAG+J,EAAIE,YAAcD,EAAMC,WAAaF,EAAIG,aAAeF,EAAME,YACjEH,EAAII,gBAAkBH,EAAMG,cAAc,CACxC,IAAIC,GAAQL,EAAI9J,UAAY+J,EAAM/J,WAAa,IAAO,GAEtD,OADAmK,EAAOC,KAAKC,MAAMF,IACJ,OAGd,IAAIG,EAAMP,EAAMC,UACZO,EAAQ9G,KAAKzF,MAAM4L,OAAOG,EAAME,YAChCO,EAAQT,EAAMU,WACdN,EAAOJ,EAAMW,aACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBD,EAAnB,cAA4BE,EAAQ,EAAIA,EAAQ,IAAIA,EAApD,YAA6DL,EAAO,EAAIA,EAAO,IAAIA,K,gCAKrF,MAAgC,WAAzB1G,KAAKR,MAAMjE,KAAKd,KAAhB,mBACKuF,KAAKR,MAAMjE,KAAK6K,KAAKrM,UAD1B,gBAEIiG,KAAKR,MAAMjE,KAAKkB,KAAKkB,O,+BAIhC,OAAO,kBAACuJ,EAAA,EAAYC,KAAb,CAAkB3B,KAAMxF,KAAK0E,UACpCjF,UAAU,6CACR,kBAAC,EAAD,CACE1F,SAAUiG,KAAKR,MAAMjE,KAAK6K,KAAKrM,SAC/BkL,UAAWjF,KAAKR,MAAMjE,KAAK6K,KAAKpM,eAChC8K,KAAK,SAEP,yBAAKrF,UAAU,sBACb,yBAAKA,UAAU,yBAA0BO,KAAKkG,YAC9C,yBAAKzG,UAAU,wBAAyBO,KAAKoH,sB,GAxE1BrB,IAAMlF,WA8ElBmF,eAAQ9C,EAAR8C,CAAyBC,IC/DlCoB,G,kDACJ,WAAY7H,GAAQ,IAAD,8BACjB,cAAMA,IACDyE,OAAS,EAAKA,OAAOrE,KAAZ,gBACd,EAAKrF,MAAQ,CACX+M,eAAgBjD,EAAQjG,gBAAgBoB,EAAM5E,KAAKZ,gBACnDuN,kBAAkB,EAClBC,cAAe,GACfC,qBAAqB,GAEvB,EAAKC,mBAAqB,EAAKA,mBAAmB9H,KAAxB,gBAC1B,EAAK+H,+BAAiC,EAAKA,+BAA+B/H,KAApC,gBACtC,EAAKuE,gBAAkB,EAAKA,gBAAgBvE,KAArB,gBACvB,EAAKgI,kBAAoB,EAAKA,kBAAkBhI,KAAvB,gBACzB,EAAKiI,oBAAsB,EAAKA,oBAAoBjI,KAAzB,gBAbV,E,qDAiBjBI,KAAKR,MAAMyE,W,2CAIXjE,KAAKmB,SAAS,CAAEoG,kBAAmBvH,KAAKzF,MAAMgN,qB,wCAI9CvH,KAAKR,MAAM2E,oB,+JAIPnE,KAAKzF,MAAMkN,oB,gCACKpD,EAAQjF,mB,OAApB0I,E,OACFN,EAAgB,GACjBM,EAAIpM,UACL8L,EAAgBM,EAAIvM,KACpByE,KAAKmB,SAAS,CACZqG,gBACAC,qBAAqB,K,6JAU3B,OAAOzH,KAAKzF,MAAMgN,iBAChB,kBAACpH,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAAkBZ,UAAU,oBAChD,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASX,KAAK0H,oBACnC,kBAAC,IAAD,CAAiB/B,KAAMoC,IAAatI,UAAU,2BAGhD,O,4CAIJ,GAAGO,KAAKzF,MAAMkN,oBAAoB,CAChC,GAAGzH,KAAKzF,MAAMiN,cAAcpF,OAAO,CACjC,IAAIoF,EAAgB,GAYpB,OAXAxH,KAAKzF,MAAMiN,cAAcQ,SAAQ,SAAAC,GAC/BT,EAAcU,KACZ,kBAAC,GAAD,CAAc3M,KAAM0M,EAAcE,IAAKF,EAAatK,UAGxD6J,EAAcU,KACZ,kBAAChB,EAAA,EAAYC,KAAb,CAAkB3B,KAAK,iBACvB/F,UAAU,qDACR,2CAGG+H,EAGP,OAAO,uBAAG/H,UAAU,0CAAb,6BAMT,OAAO,yBAAKA,UAAU,oEACpB,kBAAC2I,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,WACjC,0BAAM7I,UAAU,QAAhB,iB,+BAMJ,OACE,kBAAC8I,EAAA,EAAD,CAAQC,GAAG,OAAO9H,QAAQ,OAAO+H,OAAO,KAAKC,MAAM,MAAMjJ,UAAU,uBACjE,kBAACmD,EAAA,EAAD,KAEI5C,KAAKzF,MAAMgN,iBAAmB,KAC5B,kBAACgB,EAAA,EAAOI,MAAR,CAAcnD,KAAK,SAAnB,UAEJ,kBAACrF,EAAA,EAAD,CAAMyI,QAAM,EAACnJ,UAAWO,KAAKzF,MAAMgN,iBACjC,mBAAqB,mBAAoB/M,OAAO,SAC/CwF,KAAK2H,iCACN,kBAACxH,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAiBZ,UAAU,mBAC/C,kBAACU,EAAA,EAAKG,QAAN,CAAc7F,KAAK,OACjB+D,KAAK,SACL+B,YAAY,SACZsI,UAAW7I,KAAK8I,iBAGpB,kBAAC3I,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAAkBZ,UAAU,sBAChD,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,OAAOjG,KAAK,UAC1B,kBAAC,IAAD,CAAiBkL,KAAMoD,IAAUtJ,UAAU,4BAIjD,kBAACuJ,EAAA,EAAD,CAAKvJ,UACHO,KAAKzF,MAAMgN,iBAAmB,SAAW,8BAEzC,kBAACyB,EAAA,EAAIC,KAAL,CAAUzD,KAAK,GAAG7E,QAASX,KAAK0H,mBAChCjI,UAAU,0BACR,kBAAC,IAAD,CAAiBkG,KAAMoD,IAAUtJ,UAAU,0BAE7C,kBAAC,GAAD,CAAa0E,gBAAiBnE,KAAKmE,kBACnC,kBAAC+C,EAAA,EAAD,CAAazH,UAAU,4DAA4DyJ,YAAU,EAC7FC,MAAQ,kBAAC,IAAD,CAAiBxD,KAAMyD,MAAazI,QAASX,KAAK4H,mBACtD5H,KAAK6H,uBAET,kBAAC,EAAD,CAAgB9N,SAAUiG,KAAKR,MAAM5E,KAAKb,SAAU8K,UAAQ,EAC1DI,UAAWjF,KAAKR,MAAM5E,KAAKZ,eAAgB8K,KAAK,OAAOE,mBAAiB,IAC1E,kBAACkC,EAAA,EAAD,CAAaiC,MAAOnJ,KAAKR,MAAM5E,KAAKb,SAClCmP,YAAU,EAAC7L,GAAG,sBACd,kBAAC6J,EAAA,EAAYC,KAAb,CAAkB3B,KAAK,iBAAiB/F,UAAU,aAAlD,iBACA,kBAACyH,EAAA,EAAYC,KAAb,CAAkB3B,KAAK,YAAvB,qBACA,kBAAC0B,EAAA,EAAYC,KAAb,CAAkB3B,KAAM,YAAcxF,KAAKR,MAAM5E,KAAKb,UAAtD,WACA,kBAACmN,EAAA,EAAYC,KAAb,CAAkB3B,KAAK,eAAvB,YACA,kBAAC0B,EAAA,EAAYmC,QAAb,MACA,kBAACnC,EAAA,EAAYC,KAAb,CAAkBxG,QAASX,KAAKiE,QAAhC,kB,GApIO8B,IAAMlF,WA6IZmF,eAAQ9C,EAAiBC,EAAzB6C,CAA6CqB,I,iEC/JvCiC,G,kDAEnB,WAAY9J,GAAO,IAAD,8BAChB,cAAMA,IACD+J,iBAAmB,EAAKA,iBAAiB3J,KAAtB,gBAFR,E,6DAKDE,GACfA,EAAEoF,iBACFlF,KAAKR,MAAMgK,UAAUxJ,KAAKR,MAAMN,Q,+BAIhC,OAAO,kBAACuK,GAAA,EAAD,CAAO/I,QAAUV,KAAKR,MAAMkB,QAAUjB,UAAU,UACnD,IAAMO,KAAKR,MAAMN,KAAO,IAC1B,uBAAGsG,KAAK,GACR7E,QAASX,KAAKuJ,kBACZ,kBAAC,IAAD,CAAiB5D,KAAM+D,Y,GAjBE7I,aCY3B8I,G,kDAEJ,WAAYnK,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXqP,SAAS,GAEX,EAAKC,kBAAoB,EAAKA,kBAAkBjK,KAAvB,gBACzB,EAAKkK,SAAW,EAAKA,SAASlK,KAAd,gBAChB,EAAKmK,YAAc,EAAKA,YAAYnK,KAAjB,gBACnB,EAAKoK,cAAgB,EAAKA,cAAcpK,KAAnB,gBACrB,EAAKqK,YAAc,EAAKA,YAAYrK,KAAjB,gBACnB,EAAKsK,eAAiB,EAAKA,eAAetK,KAApB,gBACtB,EAAKuK,MAAQ,EAAKA,MAAMvK,KAAX,gBAXG,E,gEAgBhB,MAAO,YAAcI,KAAKR,MAAM4K,YAAYC,OAAOtQ,W,0CAKnD,OADW,IAAIsC,KAAK2D,KAAKR,MAAM4K,YAAY9N,MAC/BgO,iB,sCAIZ,OAAOtK,KAAK8J,WACZ,kBAAC,IAAMnH,SAAP,KACE,kBAAC4H,GAAA,EAASpD,KAAV,CAAe3B,KAAK,IAAI7E,QAAUX,KAAK+J,aACrC,kBAAC,IAAD,CAAiBpE,KAAM6E,MADzB,SAGA,kBAACD,GAAA,EAASpD,KAAV,CAAe3B,KAAK,IAAI7E,QAAUX,KAAKR,MAAMX,eAC3C,kBAAC,IAAD,CAAiB8G,KAAM8E,MADzB,YAKF,kBAACF,GAAA,EAASpD,KAAV,CAAe3B,KAAK,KAClB,kBAAC,IAAD,CAAiBG,KAAM+E,MADzB,gB,oCAKY,IAAD,OACPC,EAAc3K,KAAKR,MAAM4K,YAAYlL,KACzCc,KAAKmB,SAAS,CACZyI,SAAS,IAEXgB,YAAW,WACa9N,SAASC,eAAe,qBAAuB,EAAKoN,SAC1DlK,MAAQ0K,IACvB,M,sCAIH3K,KAAKmB,SAAS,CACZyI,SAAS,M,sKAKP5K,E,eAAqBgB,KAAKR,MAAM4K,aAC9BS,EAAc/N,SAASC,eAAe,qBAAuBiD,KAAKmK,SAASlK,MACjFjB,EAAeE,KAAO2L,E,SACNxG,EAAQtF,cAAcC,G,QAAlC3D,E,QACGK,QACLsE,KAAKR,MAAMT,cAAc1D,EAAIE,MAAM,WACjC,EAAKyO,mBAIPc,QAAQC,IAAI1P,EAAI8B,O,oIAMlB,OAAO6C,KAAKR,MAAM4K,YAAYzM,M,uCAI9B,OAAO,kBAACwC,EAAA,EAAD,KACL,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKG,QAAN,CAAc0K,GAAG,WAAWC,KAAK,IAAI5N,GAAI,qBAAqB2C,KAAKmK,QACnE5J,YAAY,qBAEd,kBAACgC,EAAA,EAAD,CAAK9C,UAAU,4BACb,kBAAC+C,EAAA,EAAD,CAAKC,GAAG,QACN,kBAAChC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASX,KAAKgK,eAA1C,UAGC,IACD,kBAACvJ,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASX,KAAKiK,aAArC,a,iCASN,OAAOjK,KAAKR,MAAM4K,YAAYC,OAAO1M,MAAQqC,KAAKR,MAAMlF,QAAQR,S,+BAIhE,OAAOkG,KAAKzF,MAAMqP,QAChB5J,KAAKkK,iBAEL,kBAACgB,GAAA,EAAD,KACE,kBAAC,EAAD,CAAgBnR,SAAUiG,KAAKR,MAAM4K,YAAYC,OAAOtQ,SACtDkL,UAAWjF,KAAKR,MAAM4K,YAAYC,OAAOrQ,eACzC8K,KAAK,UACP,kBAACoG,GAAA,EAAMC,KAAP,KACE,kBAAC5I,EAAA,EAAD,CAAK9C,UAAU,4BACb,kBAAC+C,EAAA,EAAD,KACE,6BACE,uBAAGgD,KAAOxF,KAAK6J,oBAAsBpK,UAAU,uBAC7C,gCAAUO,KAAKR,MAAM4K,YAAYC,OAAOtQ,WAE1C,yBAAK0F,UAAU,gBACXO,KAAKoL,uBAIb,kBAAC5I,EAAA,EAAD,CAAK6I,GAAG,QACN,kBAACd,GAAA,EAAD,CAAU9K,UAAU,kBAAkByJ,YAAU,GAC7C,IACD,kBAACqB,GAAA,EAASe,OAAV,CAAiB5K,QAAQ,eACzBjB,UAAU,yBACVpC,GAAI,0BAA4B2C,KAAKR,MAAM4K,YAAYzM,KACrD,kBAAC,IAAD,CAAiBgI,KAAM4F,OAEzB,kBAAChB,GAAA,EAASiB,KAAV,KACIxL,KAAKyL,oBAKf,kBAAClJ,EAAA,EAAD,CAAK9C,UAAU,mBACb,kBAAC+C,EAAA,EAAD,KACE,uBAAG/C,UAAU,gBACTO,KAAKR,MAAM4K,YAAYlL,c,GA5If2B,aAqJXmF,gBAzJS,SAAAzL,GAAK,sBACxBA,KAwJUyL,CAAyB2D,ICvKzB,YAASzK,GACtB,GAAmB,kBAATA,EAAkB,CAC1B,KAAMA,EAAKwM,QAAQ,OAAS,GAC1BxM,EAAOA,EAAKyM,QAAQ,KAAM,KAEA,MAAzBzM,EAAK0M,UAAU,EAAG,KACnB1M,EAAOA,EAAK0M,UAAU,EAAG1M,EAAKkD,SAEO,MAApClD,EAAK0M,UAAU1M,EAAKkD,OAAS,KAC9BlD,EAAOA,EAAK0M,UAAU,EAAG1M,EAAKkD,OAAS,IAG3C,OAAOlD,EAAO,ICGV2M,G,kDAEJ,WAAYrM,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXgD,OAAQiC,EAAMjC,QAHA,E,oDAQhB,MAAO,gBAAkByC,KAAKzF,MAAMgD,S,+BAIpC,OAAO,kBAAC4C,EAAA,EAAD,KACL,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKG,QAAN,CAAc0K,GAAG,WAAWC,KAAK,IACjC1K,YAAY,kBAAkBlD,GAAI2C,KAAKmK,WAEzC,kBAAC5H,EAAA,EAAD,CAAK9C,UAAU,2BACb,kBAAC+C,EAAA,EAAD,CAAKK,GAAI,EAAGC,GAAI,GACd,kBAACrC,EAAA,EAAD,CAAQC,QAAQ,YAAYE,OAAK,EACjCD,QAASX,KAAKR,MAAMsM,aAAcrM,UAAU,QAD5C,WAGF,kBAAC+C,EAAA,EAAD,CAAKK,GAAI,EAAGC,GAAI,GACd,kBAACrC,EAAA,EAAD,CAAQC,QAAQ,OAAOE,OAAK,EAC5BD,QAASX,KAAKR,MAAMb,eAAgBc,UAAU,QAD9C,kB,GAzBgBoB,aAiCXmF,gBArCS,SAAAzL,GAAK,sBACxBA,KAoCUyL,CAAyB6F,ICXlCE,G,kDAEJ,WAAYvM,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXyR,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAkB,GAClBlP,OAAO,EACPyM,SAAS,EACT0C,SAAU,GACVC,aAAc,IAEhB,EAAKC,eAAiB,EAAKA,eAAe5M,KAApB,gBACtB,EAAK6M,MAAQ,EAAKA,MAAM7M,KAAX,gBACb,EAAK8M,QAAU,EAAKA,QAAQ9M,KAAb,gBACf,EAAK+M,UAAY,EAAKA,UAAU/M,KAAf,gBACjB,EAAKgN,YAAc,EAAKA,YAAYhN,KAAjB,gBACnB,EAAKiN,eAAiB,EAAKA,eAAejN,KAApB,gBACtB,EAAKkN,iBAAmB,EAAKA,iBAAiBlN,KAAtB,gBACxB,EAAKmN,cAAgB,EAAKA,cAAcnN,KAAnB,gBACrB,EAAKoN,eAAiB,EAAKA,eAAepN,KAApB,gBACtB,EAAK6L,cAAgB,EAAKA,cAAc7L,KAAnB,gBACrB,EAAKqN,YAAc,EAAKA,YAAYrN,KAAjB,gBACnB,EAAKsN,aAAe,EAAKA,aAAatN,KAAlB,gBACpB,EAAKuN,SAAW,EAAKA,SAASvN,KAAd,gBAChB,EAAKhC,WAAa,EAAKA,WAAWgC,KAAhB,gBAClB,EAAKwN,SAAW,EAAKA,SAASxN,KAAd,gBAChB,EAAKyN,WAAa,EAAKA,WAAWzN,KAAhB,gBAClB,EAAKsK,eAAiB,EAAKA,eAAetK,KAApB,gBACtB,EAAK0N,cAAgB,EAAKA,cAAc1N,KAAnB,gBACrB,EAAK2N,eAAiB,EAAKA,eAAe3N,KAApB,gBACtB,EAAK4N,UAAY,EAAKA,UAAU5N,KAAf,gBACjB,EAAKqK,YAAc,EAAKA,YAAYrK,KAAjB,gBACnB,EAAKiK,kBAAoB,EAAKA,kBAAkBjK,KAAvB,gBACzB,EAAK6N,gBAAkB,EAAKA,gBAAgB7N,KAArB,gBACvB,EAAK8N,eAAiB,EAAKA,eAAe9N,KAApB,gBACtB,EAAK+N,eAAiB,EAAKA,eAAe/N,KAApB,gBACtB,EAAKjB,eAAiB,EAAKA,eAAeiB,KAApB,gBACtB,EAAKf,cAAgB,EAAKA,cAAce,KAAnB,gBACrB,EAAKb,cAAgB,EAAKA,cAAca,KAAnB,gBACrB,EAAKX,UAAY,EAAKA,UAAUW,KAAf,gBACjB,EAAKgO,eAAiB,EAAKA,eAAehO,KAApB,gBACtB,EAAKiO,iBAAmB,EAAKA,iBAAiBjO,KAAtB,gBACxB,EAAKkO,iBAAmB,EAAKA,iBAAiBlO,KAAtB,gBACxB,EAAKmO,kBAAoB,EAAKA,kBAAkBnO,KAAvB,gBACzB,EAAKwM,iBAAmB,EAAKA,iBAAiBxM,KAAtB,gBACxB,EAAKoO,mBAAqB,EAAKA,mBAAmBpO,KAAxB,gBAC1B,EAAKqO,aAAe,EAAKA,aAAarO,KAAlB,gBACpB,EAAKsO,eAAiB,EAAKA,eAAetO,KAApB,gBAlDN,E,2DAwDhB,OAFeI,KAAKR,MAAMlF,QAAQR,SACjBkG,KAAKR,MAAM2O,SAAS9D,OAAO1M,M,uCAS5C,OADW,IAAItB,KAAK2D,KAAKR,MAAM2O,SAAS7R,MAC5BgO,iB,8BAMN,IAAD,OACL,OAAOtK,KAAKR,MAAM2O,SAASC,QAC1BC,QAAO,SAAAC,GAAS,OAAIA,EAAU3Q,MAAQ,EAAK6B,MAAMlF,QAAQR,UAAQsI,S,gCAM1D,IAAD,OACP,OAAOpC,KAAKR,MAAM2O,SAASI,UAC1BF,QAAO,SAAAG,GAAW,OAAIA,EAAY7Q,MAAQ,EAAK6B,MAAMlF,QAAQR,UAAQsI,S,yJAQtEpC,KAAKmB,SAAS,CACZ6K,UAAU,EACVC,YAAY,I,SAGE5H,EAAQ/G,SAAS0C,KAAKR,MAAM2O,SAASxQ,K,QAAjDmK,E,QACGpM,QACLsE,KAAKR,MAAM/B,WAAWqK,EAAIrL,KAAMuD,KAAK+M,eAGrC/M,KAAKmB,SAAS,CACZhE,MAAO2K,EAAI3K,Q,iQAUf6C,KAAKmB,SAAS,CACZ6K,UAAU,EACVC,YAAY,I,SAGE5H,EAAQ7G,WAAWwC,KAAKR,MAAM2O,SAASxQ,K,QAAnDmK,E,QACGpM,QACLsE,KAAKR,MAAM/B,WAAWqK,EAAIrL,KAAMuD,KAAK+M,eAGrC/M,KAAKmB,SAAS,CACZhE,MAAO2K,EAAI3K,Q,4IAWf6C,KAAKmB,SAAS,CACZ6K,UAAU,EACVC,YAAY,M,8LASR1O,EAASyC,KAAKR,MAAM2O,SAASxQ,I,SACnB0G,EAAQzG,WAAWL,G,cAC5B7B,SAELsE,KAAKmB,SAAS,CAAEiL,kBAAkB,IAClCpM,KAAKR,MAAM5B,WAAWL,IAGtByC,KAAKmB,SAAS,CACZhE,MAAO,gE,uIAKF,IAAD,OACJsR,EAAQ,YAAOzO,KAAKR,MAAM2O,SAAShP,MACnCuP,EAAW1O,KAAKR,MAAM2O,SAASjP,KACnCc,KAAKmB,SAAS,CACZyI,SAAS,EACT0C,SAAUmC,IAEZ7D,YAAW,WACU9N,SAASC,eAAe,kBAAoB,EAAKyC,MAAM2O,SAASxQ,KACtEsC,MAAQyO,IACpB,M,mCAIH1O,KAAKmB,SAAS,CACZyI,SAAS,M,+JAMPrM,EAASyC,KAAKR,MAAM2O,SAASQ,WAC/B3O,KAAKR,MAAM2O,SAASQ,WAAWhR,IAAMqC,KAAKR,MAAM2O,SAASxQ,IACvDiR,EAAY9R,SAASC,eAAe,kBAAoBiD,KAAKR,MAAM2O,SAASxQ,KAAKsC,MACjF4O,EAAY7O,KAAKzF,MAAM+R,S,SACXjI,EAAQpF,UAAU1B,EAAQqR,EAAWC,G,QAAjDxT,E,QACGK,QACLsE,KAAKR,MAAMsP,WAAWzT,EAAIE,MAG1BuP,QAAQC,IAAI1P,EAAI8B,OAGlB6C,KAAK6N,mB,6IAOL,IAAI7B,EAAWhM,KAAKzF,MAAMyR,SAAW,EAAI,EACzC,MAAO,KAAOhM,KAAKR,MAAM2O,SAASC,QAAQhM,OAAS4J,K,yCAOnD,IAAIC,EAAajM,KAAKzF,MAAM0R,WAAa,EAAI,EAC7C,MAAO,KAAOjM,KAAKR,MAAM2O,SAASI,UAAUnM,OAAS6J,K,qCAGxCwC,GACb,GAAGA,EAASrM,OAAO,CACjB,IAAIjD,EAAO,GAMX,OALAsP,EAASzG,SAAQ,SAAA+G,GACf5P,EAAK+I,KAAK,uBAAG1C,KAAM,gBAAkBuJ,EAAY5G,IAAK4G,GAA5C,IACLA,OAGA5P,EAGP,OAAO,O,oCAIG4P,GACZ,IAAIC,EAAWhP,KAAKzF,MAAM+R,SAASZ,QAAQqD,GACvCzC,EAAQ,YAAOtM,KAAKzF,MAAM+R,UAC9BA,EAAS2C,OAAOD,EAAU,GAC1BhP,KAAKmB,SAAS,CACZmL,e,uCAIa,IAAD,OACVnN,EAAO,GAIX,OAHAa,KAAKzF,MAAM+R,SAAStE,SAAQ,SAAAkH,GAC1B/P,EAAK+I,KAAK,kBAAC,GAAD,CAAKhJ,KAAMgQ,EAAK/G,IAAK+G,EAAKxO,QAAQ,OAAO8I,UAAY,EAAK8D,oBAE/DnO,EAAKiD,OACV,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACIrD,IAGJ,O,gCAGI+B,GACR,GAAuB,KAApBA,EAAOnB,SAAgB,CACxB,IAAIoP,EAAWrS,SACdC,eAAe,2BAA6BiD,KAAKR,MAAM2O,SAASxQ,KAC7DoR,EAAaI,EAASlP,MAC1B8O,EAAaK,GAASL,GACtB,IAAIM,EAAYrP,KAAKzF,MAAM+R,SAASZ,QAAQqD,IAAe,EAC3D,GAAGA,IAAeM,EAAU,CAC1B,IAAIlQ,EAAOa,KAAKzF,MAAM+R,SACtBnN,EAAK+I,KAAK6G,GACV/O,KAAKmB,SAAS,CACZmL,SAAUnN,IAEZgQ,EAASlP,MAAQ,O,wKAMjBvC,E,eAAkBsC,KAAKR,MAAM2O,UAC3BtD,EAAc/N,SAASC,eAAe,kBAAoBiD,KAAKR,MAAM2O,SAASxQ,KAAKsC,MACnFqP,EAActP,KAAKzF,MAAM+R,SAC/B5O,EAAYwB,KAAO2L,EACnBnN,EAAYyB,KAAOmQ,E,SACHjL,EAAQ5G,WAAWC,G,QAA/BrC,E,QACGK,QACLsE,KAAKR,MAAM/B,WAAWpC,EAAIoB,MAAM,WAC9B,EAAK0E,SAAS,CACZyI,SAAS,OAKb5J,KAAKmB,SAAS,CACZhE,MAAO9B,EAAI8B,Q,gRAMTI,EAASyC,KAAKR,MAAM2O,SAASxQ,IAC7B4R,EAAgB,gBAAkBhS,EAClCoN,EAAc7N,SAASC,eAAewS,GAAetP,MACvDrB,EAAU,CACZyL,OAAQrK,KAAKR,MAAMlF,QAAQR,OAC3BoF,KAAMyL,G,SAEQtG,EAAQ1F,eAAeC,EAASrB,G,QAA5CuK,E,QACGpM,UACDkD,EAAUkJ,EAAIvM,MACdgR,EAAevM,KAAKzF,MAAMgS,cACjBrE,KAAKtJ,GAClBoB,KAAKmB,SAAS,CACZoL,iBAEFzP,SAASC,eAAewS,GAAetP,MAAQ,I,mLAO/BnB,G,2FACFuF,EAAQxF,cAAcC,G,YAAlCzD,E,QACGK,Q,iBACD6Q,EAAevM,KAAKzF,MAAMgS,aACtBiD,EAAI,E,YAAGA,EAAIjD,EAAanK,Q,oBAC3BmK,EAAaiD,GAAG7R,MAAQmB,E,wBACzByN,EAAa0C,OAAOO,EAAG,G,6BAFaA,I,uBAMxCxP,KAAKmB,SAAS,CAAEoL,iB,wBAGhBzB,QAAQC,IAAI1P,EAAI8B,O,QAGlB6C,KAAKmB,SAAS,CAAEiL,kBAAkB,I,4IAGtBpN,EAAgByQ,GAE5B,IADA,IAAIlD,EAAevM,KAAKzF,MAAMgS,aACtBiD,EAAI,EAAGA,EAAIjD,EAAanK,OAAQoN,IACtC,GAAGjD,EAAaiD,GAAG7R,MAAQqB,EAAerB,IAAI,CAC5C4O,EAAa0C,OAAOO,EAAG,EAAGxQ,GAC1B,MAGJgB,KAAKmB,SAAS,CAAEoL,iBAChBkD,M,oCAIA,OAAOzP,KAAKzF,MAAM4C,MAClB,kBAACkF,EAAA,EAAD,CAAO3B,QAAQ,UAAf,IAA0BV,KAAKzF,MAAM4C,MAArC,KAEA,O,0CAIA,MAAO,YAAc6C,KAAKR,MAAM2O,SAAS9D,OAAOtQ,W,uCAGpB,IAAf2V,EAAc,wDACrBC,EAAa,kBAAC,IAAMhN,SAAP,KACjB,kBAACJ,EAAA,EAAD,CAAK9C,UAAU,uBACb,kBAAC+C,EAAA,EAAD,CAAK6I,GAAG,QACN,kBAAC5K,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAUX,KAAKqN,YAA3C,UACC,IACD,kBAAC5M,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAUX,KAAKiK,aAAtC,WAKN,OAAO,kBAAC,IAAMtH,SAAP,KACL,yCACE3C,KAAKuN,iBACP,kBAACpN,EAAA,EAAKG,QAAN,CAAc7F,KAAK,OAAO8F,YAAY,OACtCd,UAAU,OAAOe,WAAaR,KAAKwN,UACnCnQ,GAAK,2BAA6B2C,KAAKR,MAAM2O,SAASxQ,MACtD,kBAACwC,EAAA,EAAKG,QAAN,CAAc0K,GAAG,WAAWC,KAAMyE,EAAQ,IAAM,IAAKjQ,UAAU,OAC/DpC,GAAK,kBAAoB2C,KAAKR,MAAM2O,SAASxQ,IAC7C4C,YAAamP,EAAQ,yBAA2B,KAE9C1P,KAAK4N,eAAe5N,KAAKR,MAAM2O,SAASQ,WACxC3O,KAAKR,MAAM2O,SAASQ,WAAa3O,KAAKR,MAAM2O,UAE5CuB,EAAQ,KAAOC,K,sCAIL,IAAD,OACb,OAAO3P,KAAKkN,eACZ,kBAAC,IAAMvK,SAAP,KACE,kBAAC4H,GAAA,EAASpD,KAAV,CAAe3B,KAAK,IAAI7E,QAAUX,KAAKoN,UACrC,kBAAC,IAAD,CAAiBzH,KAAM6E,IAAQ/K,UAAU,SAD3C,SAGA,kBAAC8K,GAAA,EAASpD,KAAV,CAAe3B,KAAK,IAAI7E,QAAU,kBAAM,EAAKyL,iBAC3C,cACA,6CACA,SACA,EAAKxO,cAEL,kBAAC,IAAD,CAAiB+H,KAAM8E,IAAYhL,UAAU,SAN/C,YAUF,kBAAC8K,GAAA,EAASpD,KAAV,CAAe3B,KAAK,IAAIoK,QAAQ,yBAAyBjP,QAAUX,KAAKmN,UACtE,kBAAC,IAAD,CAAiBxH,KAAM+E,IAAejL,UAAU,SADlD,gB,sCAKcrC,GACd,OAAOA,EACP,kBAACyS,GAAA,EAAD,CAAOC,IAAKzL,EAAQjG,gBAAgBhB,GAAM2S,OAAK,IAC7C,O,uCAGa,IAAD,OACd,GAAG/P,KAAKzF,MAAM2R,aAAa,CACzB,IAAI8D,EAAW,GAaf,OAZAhQ,KAAKzF,MAAMgS,aAAavE,SAAQ,SAAApJ,GAC9BoR,EAAS9H,KACP,kBAAC,GAAD,CAAakC,YAAcxL,EAC3BC,cAAgB,kBAAM,EAAKuN,iBACzB,iBACA,gDACA,UACA,kBAAM,EAAKvN,cAAcD,EAAQjB,SAEnCoB,cAAe,EAAKA,oBAGjB,kBAAC,IAAM4D,SAAP,KACL,kBAACC,EAAA,EAAD,CAAWmN,OAAK,GACZC,EAAS5N,OAAS4N,EAAW,kBAAC3N,EAAA,EAAD,CAAO3B,QAAQ,aAAf,mBAC/B,kBAAC,GAAD,CAAanD,OAAQyC,KAAKR,MAAM2O,SAASxQ,IACzCgB,eAAgBqB,KAAKrB,eACrBmN,aAAc9L,KAAK0N,mBAKvB,OAAO,O,0JAKL1N,KAAKzF,MAAMgS,aAAanK,O,gCACViC,EAAQ3F,gBAAgBsB,KAAKR,MAAM2O,SAASxQ,K,QAAxDmK,E,QACGpM,QACLsE,KAAKmB,SAAS,CACZoL,aAAczE,EAAIvM,OAIpBuP,QAAQC,IAAIjD,EAAI3K,O,OAIpB6C,KAAKmB,SAAS,CACZ+K,cAAelM,KAAKzF,MAAM2R,e,+IAK5BlM,KAAKmB,SAAS,CACZgL,gBAAiBnM,KAAKzF,MAAM4R,mB,qCAIjB8D,GACb,OAAO,kBAAC/E,GAAA,EAAD,CAAOzL,UAAU,eACpB,kBAAC,EAAD,CAAgB1F,SAAUkW,EAAa5F,OAAOtQ,SAC5CkL,UAAWgL,EAAa5F,OAAOrQ,eAC/B8K,KAAK,UACP,kBAACoG,GAAA,EAAMC,KAAP,KACInL,KAAKgN,eAAeiD,EAAa9Q,MACnC,uBAAGM,UAAU,gBACTwQ,EAAa/Q,MAEfc,KAAKyN,gBAAgBwC,EAAa7S,S,0CAM1C4C,KAAKmB,SAAS,CACZiL,kBAAkB,M,uCAILjD,EAAOvN,EAASpB,EAAQ0V,GACvClQ,KAAKmB,SAAS,CACZiL,kBAAkB,EAClBC,iBAAkB,CAChBlD,QACAvN,UACApB,SACA0V,a,mCAKO1Q,GAGX,IAFA,IAAI2Q,EAAQ,GACNC,EAAWpQ,KAAKR,MAAM2O,SAASC,QAAQhM,OACrCiO,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACzB,IAAIzV,EAAOoF,KAAKR,MAAM2O,SAASC,QAAQiC,GACpCA,EAAID,GACLD,EAAMjI,KACJ,6BAAMtN,EAAKb,WAOjB,OAHGqW,EAAW,IACZD,EAAMjI,KAAK,8CAAgBkI,EAAS,GAAzB,WAEN,kBAACE,GAAA,EAAY9Q,EAChB2Q,K,qCAIS3Q,GAGb,IAFA,IAAI+Q,EAAU,GACRC,EAAaxQ,KAAKR,MAAM2O,SAASI,UAAUnM,OACzCiO,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACzB,IAAIzV,EAAOoF,KAAKR,MAAM2O,SAASI,UAAU8B,GACtCA,EAAIG,GACLD,EAAQrI,KACN,6BAAMtN,EAAKb,WAOjB,OAHGyW,EAAa,IACdD,EAAQrI,KAAK,8CAAgBsI,EAAW,GAA3B,WAER,kBAACF,GAAA,EAAY9Q,EAChB+Q,K,yCAIapH,EAAOvN,EAASpB,GAAwC,IAAhC0V,EAA+B,uDAAvBlQ,KAAK+N,kBACtD,OAAO,kBAAC,IAAMpL,SAAP,KACL,kBAAC8N,GAAA,EAAD,CAAOC,KAAM1Q,KAAKzF,MAAM6R,iBAAkBuE,OAAQ3Q,KAAK+N,mBACrD,kBAAC0C,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMK,MAAP,KAAc3H,IAEhB,kBAACsH,GAAA,EAAMtF,KAAP,KACIvP,GAEJ,kBAAC6U,GAAA,EAAMM,OAAP,KACE,kBAACxO,EAAA,EAAD,CAAK9C,UAAU,2BACb,kBAAC+C,EAAA,EAAD,CAAKK,GAAI,EAAGpD,UAAU,gBACpB,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASX,KAAK+N,kBAAmBnN,OAAK,GAAlE,WAIF,kBAAC4B,EAAA,EAAD,CAAKK,GAAI,EAAGpD,UAAU,WACpB,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASuP,EAAOtP,OAAK,GAC5CpG,U,yCAUb,OAAO,kBAAC,IAAMmI,SAAP,KACL,kBAAC8N,GAAA,EAAD,CAAOC,KAAM1Q,KAAKzF,MAAM4R,eAAgBwE,OAAQ3Q,KAAK6N,kBACnD,kBAAC4C,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMK,MAAP,oBAEF,kBAACL,GAAA,EAAMtF,KAAP,KACInL,KAAKkK,gBAAe,IAExB,kBAACuG,GAAA,EAAMM,OAAP,KACE,kBAACtQ,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASX,KAAK6N,kBAA1C,UAGA,kBAACpN,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASX,KAAKf,WAAxC,c,+BASN,OACE,kBAAC2D,EAAA,EAAD,CAAWmN,OAAK,EAACtQ,UAAU,eAAe0I,IAAKnI,KAAKR,MAAM2O,SAASxQ,KAC/DqC,KAAKiN,cACLjN,KAAKzF,MAAMqP,QACb5J,KAAKkK,iBAEL,kBAAC,IAAMvH,SAAP,KACE,kBAACuI,GAAA,EAAD,KACE,kBAAC,EAAD,CAAgBnR,SAAUiG,KAAKR,MAAM2O,SAAS9D,OAAOtQ,SACnDkL,UAAWjF,KAAKR,MAAM2O,SAAS9D,OAAOrQ,eAAgB8K,KAAK,SAASE,mBAAiB,IACvF,kBAACkG,GAAA,EAAMC,KAAP,KACE,kBAAC5I,EAAA,EAAD,CAAK9C,UAAU,4BACb,kBAAC+C,EAAA,EAAD,CAAK/C,UAAU,qCACb,kBAAC,EAAD,CAAgB1F,SAAUiG,KAAKR,MAAM2O,SAAS9D,OAAOtQ,SACnDkL,UAAWjF,KAAKR,MAAM2O,SAAS9D,OAAOrQ,eACtC8K,KAAK,SAASC,YAAU,IAC1B,6BACE,uBAAGS,KAAOxF,KAAK6J,oBAAsBpK,UAAU,uBAC7C,gCAAUO,KAAKR,MAAM2O,SAAS9D,OAAOtQ,WAGrCiG,KAAKR,MAAM2O,SAASQ,WACpB,kBAAC,IAAMhM,SAAP,KACG,IADH,cACmB,IACjB,uBAAG6C,KAAM,YAAcxF,KAAKR,MAAM2O,SAAS9D,OAAOtQ,SAClD0F,UAAU,uBACR,gCAAUO,KAAKR,MAAM2O,SAASQ,WAAWtE,OAAOtQ,YAGlD,KAEJ,yBAAK0F,UAAU,gBACXO,KAAKwM,oBAIb,kBAAChK,EAAA,EAAD,CAAK6I,GAAG,QACN,kBAACd,GAAA,EAAD,CAAU9K,UAAU,kBAAkByJ,YAAU,GAC7C,IACD,kBAACqB,GAAA,EAASe,OAAV,CAAiB5K,QAAQ,eACzBjB,UAAU,yBACVpC,GAAI,0BAA4B2C,KAAKR,MAAM2O,SAASxQ,KAClD,kBAAC,IAAD,CAAiBgI,KAAM4F,OAEzB,kBAAChB,GAAA,EAASiB,KAAV,KACIxL,KAAKyL,oBAKf,kBAAClJ,EAAA,EAAD,CAAK9C,UAAU,mBACf,kBAAC+C,EAAA,EAAD,KACIxC,KAAKgN,eAAehN,KAAKR,MAAM2O,SAAShP,MAC1C,uBAAGM,UAAU,gBACTO,KAAKR,MAAM2O,SAASjP,MAGtBc,KAAKR,MAAM2O,SAASQ,WACpB3O,KAAK4N,eAAe5N,KAAKR,MAAM2O,SAASQ,YACxC3O,KAAKyN,gBAAgBzN,KAAKR,MAAM2O,SAAS/Q,OAI3C4C,KAAK2N,mBAGX,kBAACpL,EAAA,EAAD,CAAK9C,UAAU,uCACb,kBAAC+C,EAAA,EAAD,CAAK6I,GAAG,QACN,kBAAC2F,GAAA,EAAD,CACAC,UAAU,QACVC,MAAO,CAAER,KAAM,IAAKS,KAAM,KAC1BC,QAASpR,KAAKiO,cACZ,kBAACxN,EAAA,EAAD,CAAQE,QAAUX,KAAK2M,UACvBjM,QAASV,KAAKyM,QAAU,OAAS,gBAC/B,kBAAC,IAAD,CAAiB9G,KAAM0L,MACrBrR,KAAK6M,mBAGV,IACD,kBAACmE,GAAA,EAAD,CACAC,UAAU,QACVC,MAAO,CAAER,KAAM,IAAKS,KAAM,KAC1BC,QAASpR,KAAKkO,gBACZ,kBAACzN,EAAA,EAAD,CAAQE,QAAUX,KAAK4M,YACvBlM,QAASV,KAAK0M,UAAY,OAAS,gBACjC,kBAAC,IAAD,CAAiB/G,KAAM2L,MACrBtR,KAAK8M,qBAGV,IACD,kBAACrM,EAAA,EAAD,CAAQC,QAAQ,eAAeC,QAAUX,KAAK0N,gBAC5C,kBAAC,IAAD,CAAiB/H,KAAM4L,MACnB,IAAMvR,KAAKR,MAAM2O,SAASqD,eACtB,IACV,kBAAC/Q,EAAA,EAAD,CAAQC,QAAQ,eAAeC,QAAUX,KAAK6N,kBAC5C,kBAAC,IAAD,CAAiBlI,KAAM8L,SAK3BzR,KAAK8N,mBAGL9N,KAAKgO,mBACHhO,KAAKzF,MAAM8R,iBAAiBlD,MAC5BnJ,KAAKzF,MAAM8R,iBAAiBzQ,QAC5BoE,KAAKzF,MAAM8R,iBAAiB7R,OAC5BwF,KAAKzF,MAAM8R,iBAAiB6D,a,GA/qBvBrP,aAyrBJmF,gBA7rBS,SAAAzL,GAAK,sBACxBA,KA4rBUyL,CAAyB+F,ICzsBlC2F,G,kDAEJ,WAAYlS,GAAQ,IAAD,8BACjB,cAAMA,IACDjF,MAAQ,CACXoX,SAAS,EACTxU,OAAO,EACPyU,SAAS,EACThW,SAAS,EACTiW,eAAe,EACfC,UAAU,EACVC,SAAU,KACV5S,KAAM,IAER,EAAK3C,YAAc,EAAKA,YAAYoD,KAAjB,gBACnB,EAAKoS,mBAAqB,EAAKA,mBAAmBpS,KAAxB,gBAC1B,EAAKqS,qBAAuB,EAAKA,qBAAqBrS,KAA1B,gBAC5B,EAAKiC,cAAgB,EAAKA,cAAcjC,KAAnB,gBACrB,EAAK4N,UAAY,EAAKA,UAAU5N,KAAf,gBACjB,EAAKsS,WAAa,EAAKA,WAAWtS,KAAhB,gBAClB,EAAK4J,UAAY,EAAKA,UAAU5J,KAAf,gBACjB,EAAKuS,eAAiB,EAAKA,eAAevS,KAApB,gBACtB,EAAKwS,YAAc,EAAKA,YAAYxS,KAAjB,gBACnB,EAAKyS,gBAAkB,EAAKA,gBAAgBzS,KAArB,gBACvB,EAAK0S,kBAAoB,EAAKA,kBAAkB1S,KAAvB,gBAtBR,E,mLA8BjBI,KAAKmB,SAAS,CACZwQ,SAAS,IAGPlV,EAAOuD,KAAKuS,Y,SAEAlO,EAAQ7H,YAAYC,EAAMuD,KAAKzF,MAAMuX,U,QAAjDhK,E,QACGpM,SACLsE,KAAKR,MAAMsP,WAAWhH,EAAIrL,MAC1BuD,KAAKmB,SAAS,CACZvF,QAAS,0CAERoE,KAAKzF,MAAMsX,eACZ7R,KAAKqS,kBAEPvV,SAASC,eAAe,YAAYkD,MAAQ,IAK5CD,KAAKmB,SAAS,CACZyQ,QAAS9J,EAAI3K,MAAM5B,O,wIAavB,MAAO,CACL2D,KAJWpC,SAASC,eAAe,YAAYkD,MAK/CoK,OAJarK,KAAKR,MAAMlF,QAAQR,OAKhCqF,KAJWa,KAAKzF,MAAM4E,Q,wCASrBa,KAAKzF,MAAMuX,UACZ9R,KAAKmB,SAAS,CACZ2Q,UAAU,IAGd9R,KAAKmB,SAAS,CACZ0Q,eAAgB7R,KAAKzF,MAAMsX,kB,2KAKbxN,EAAQ/F,c,QAApBwJ,E,QACGpM,SACD8W,EAAU1K,EAAIvM,KACdkX,EAASpO,EAAQ9F,eAAeiU,EAAQhU,KAAMgU,EAAQ/T,KAC1DuB,KAAKmB,SAAS,CACZ2Q,UAAU,EACVC,SAAUU,KAIZzS,KAAKmB,SAAS,CACZhE,MAAO2K,EAAI3K,Q,0IAMf6C,KAAKmB,SAAS,CACZ2Q,UAAU,IAEKhV,SAASC,eAAe,aAC9BkD,MAAQ,O,2CAOnB,OACED,KAAKzF,MAAM4C,MACX,kBAACkF,EAAA,EAAD,CAAO3B,QAAQ,SAASyH,IAAI,gBACzBnI,KAAKzF,MAAM4C,OAGd,O,6CAQF,OACE6C,KAAKzF,MAAMqX,QACX,kBAACvP,EAAA,EAAD,CAAO3B,QAAQ,UAAUyH,IAAI,kBAC1BnI,KAAKzF,MAAMqX,SAGd,O,sCAQF,OACE5R,KAAKzF,MAAMqB,QACX,kBAACyG,EAAA,EAAD,CAAO3B,QAAQ,UAAUyH,IAAI,WAC1BnI,KAAKzF,MAAMqB,SAGd,O,gCAIMsF,GACR,GAAuB,KAApBA,EAAOnB,SAAgB,CACxB,IAAIoP,EAAWrS,SAASC,eAAe,0BACnCgS,EAAaI,EAASlP,MAC1B8O,EAAaK,GAASL,GACtB,IAAIM,EAAYrP,KAAKzF,MAAM4E,KAAKuM,QAAQqD,IAAe,EACvD,GAAGA,IAAeM,EAAU,CAC1B,IAAIlQ,EAAOa,KAAKzF,MAAM4E,KACtBA,EAAK+I,KAAK6G,GACV/O,KAAKmB,SAAS,CAAEhC,SAChBgQ,EAASlP,MAAQ,O,gCAKb8O,GACR,IAAIC,EAAWhP,KAAKzF,MAAM4E,KAAKuM,QAAQqD,GACvC/O,KAAKzF,MAAM4E,KAAK8P,OAAOD,EAAU,K,mCAGtB,IAAD,OACN7P,EAAO,GAIX,OAHAa,KAAKzF,MAAM4E,KAAK6I,SAAQ,SAAAkH,GACtB/P,EAAK+I,KAAK,kBAAC,GAAD,CAAKhJ,KAAMgQ,EAAK/G,IAAK+G,EAAKxO,QAAQ,OAAO8I,UAAW,EAAKA,gBAE9DrK,EAAKiD,OACV,kBAACjC,EAAA,EAAKC,MAAN,CAAYX,UAAU,8BAClBN,GAEF,O,wCAIJ,OAAOa,KAAKzF,MAAMuX,SAClB,kBAAC,IAAMnP,SAAP,KACE,yBAAKlD,UAAU,sBACb,kBAACoQ,GAAA,EAAD,CAAOC,IAAK9P,KAAKzF,MAAMwX,SAAUhC,OAAK,IACtC,yBAAKtQ,UAAU,2BACb,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAASX,KAAKoS,YAAa3S,UAAU,aAC3D,kBAAC,IAAD,CAAiBkG,KAAM+M,UAK7B,O,wCAIF,OAAO1S,KAAKzF,MAAMsX,cAChB,kBAAC1R,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKwS,KAAN,CACElT,UAAU,oBACVjB,KAAK,OACL6C,SAAUrB,KAAKmS,eACf9U,GAAG,YACHuV,iBAAe,KAGjB,O,0CAIJ,OAAO5S,KAAKzF,MAAMsX,cAChB,kBAACpR,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASX,KAAKqS,gBAAiBzR,OAAK,GAAhE,UAIA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASX,KAAKqS,gBAAiBzR,OAAK,GAC5D,kBAAC,IAAD,CAAiB+E,KAAMkN,MAAY,IADrC,W,+BAOF,GAAG7S,KAAK2R,QACN,OACE,kBAACpP,EAAA,EAAD,CAAK9C,UAAU,0BACb,kBAAC+C,EAAA,EAAD,CAAK6I,GAAG,QACN,kBAACjD,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAM7I,UAAU,WAAhB,iBAOR,IAAM7D,EAAUoE,KAAK6B,gBACf1E,EAAQ6C,KAAKgS,qBACbJ,EAAU5R,KAAKiS,uBACrB,OAAO,kBAAC,IAAMtP,SAAP,KACJ/G,EACAuB,EACAyU,EACD,kBAACzR,EAAA,EAAD,CAAMV,UAAU,cAAcqT,SAAU,SAAChT,GAAD,OAAOA,EAAEoF,mBAC7ClF,KAAKkS,aACP,kBAAC/R,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CAAc0K,GAAG,WAAWC,KAAK,IACjC1K,YAAW,uCAAkCP,KAAKR,MAAM5E,KAAKb,SAAlD,QAEXiG,KAAKyN,kBACLzN,KAAK+S,kBACP,kBAAC5S,EAAA,EAAKC,MAAN,KACE,kBAACmC,EAAA,EAAD,CAAK9C,UAAU,uBACb,kBAAC+C,EAAA,EAAD,CAAKK,GAAI,EAAGC,GAAI,EAAGrD,UAAU,yBAC3B,kBAACU,EAAA,EAAKG,QAAN,CAAc7F,KAAK,OAAO8F,YAAY,OACtCC,WAAYR,KAAKwN,UAAWnQ,GAAG,4BAEjC,kBAACmF,EAAA,EAAD,CAAKK,GAAI,EAAGC,GAAI,GACV9C,KAAKsS,uBAIf,kBAACnS,EAAA,EAAKC,MAAN,KACE,kBAACK,EAAA,EAAD,CAAQC,QAAQ,OAAOE,OAAK,EAACD,QAASX,KAAKxD,aAA3C,kB,GAxQWqE,aAkRRmF,gBAtRS,SAAAzL,GAAK,sBACxBA,KAqRUyL,CAAyB0L,I,SC1RlCsB,G,kDAEJ,WAAYxT,GAAO,IAAD,8BAChB,cAAMA,IACDyT,oBAAsB,EAAKA,oBAAoBrT,KAAzB,gBAFX,E,kEAMhB,IAAI1F,EAAY,GAahB,OAZA8F,KAAKR,MAAM5E,KAAKV,UAAU8N,SAAQ,SAAAkL,GAChChZ,EAAUgO,KACR,kBAACiL,GAAA,EAAUhM,KAAX,CAAgBgB,IAAK+K,EAAaE,SAAU3T,UAAU,6BACpD,kBAAC,EAAD,CAAgB1F,SAAUmZ,EAAanZ,SACrCkL,UAAWiO,EAAalZ,eACxB8K,KAAK,UACP,uBAAGU,KAAM,YAAc0N,EAAanZ,SAAU0F,UAAU,uBACtD,gCAASyT,EAAanZ,gBAKvBG,I,+BAIP,OACE,yBAAKuF,UAAU,qBACb,uBAAGA,UAAU,oBACTO,KAAKR,MAAM5E,KAAKV,UAAUkI,OAC5B,qBAAuB,qCAEzB,kBAAC+Q,GAAA,EAAD,CAAWzS,QAAQ,SACfV,KAAKiT,uBAET,uBAAGzN,KAAK,WAAW/F,UAAU,kCAA7B,gB,GAlCoBoB,aAwCbmF,gBA5CS,SAAAzL,GAAK,sBACxBA,KA2CUyL,CAAyBgN,ICpClCK,G,kDACJ,WAAY7T,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXwD,MAAO,GACPuV,aAAc,GACdC,cAAc,EACd/O,gBAAgB,EAChBgP,cAAc,GAEhB,EAAKlP,aAAe,EAAKA,aAAa1E,KAAlB,gBACpB,EAAK6T,YAAc,EAAKA,YAAY7T,KAAjB,gBACnB,EAAKkP,WAAa,EAAKA,WAAWlP,KAAhB,gBAClB,EAAKnC,WAAa,EAAKA,WAAWmC,KAAhB,gBAClB,EAAKhC,WAAa,EAAKA,WAAWgC,KAAhB,gBAClB,EAAK8T,aAAe,EAAKA,aAAa9T,KAAlB,gBAdJ,E,wLAqBZ+T,EAAc3T,KAAKR,MAAM3G,SAASyG,Q,wBAEhCsU,EAAU,IAAIC,IAAI/W,SAASjE,UAAWib,aACtCC,EAAaH,EAAO3X,IAAI,U,SACZoI,EAAQ/E,OAAOqU,G,QAA3B7L,E,QACGpM,QACLsE,KAAKmB,SAAS,CACZmS,aAAcS,EACdR,cAAc,EACdC,cAAc,EACdzV,MAAO+J,EAAIvM,OAKbyE,KAAKmB,SAAS,CACZqS,cAAc,I,yCAMEnP,EAAQtI,gB,QAAtBgC,E,OACNiC,KAAKmB,SAAS,CACZqS,cAAc,EACdzV,U,wIAKKtB,GACT,IAAIsB,EAAQiC,KAAKzF,MAAMwD,MACvBA,EAAMiW,QAAQvX,GACduD,KAAKmB,SAAS,CACZpD,Y,iCAQOtB,EAAMwX,GAGf,IAFA,IAAIlW,EAAK,YAAOiC,KAAKzF,MAAMwD,OAEnBmW,EAAI,EAAGA,EAAInW,EAAMqE,OAAQ8R,IAAI,CAEnC,GADmBnW,EAAMmW,GACTvW,MAAQlB,EAAKkB,IAAI,CAC/BI,EAAMkR,OAAOiF,EAAG,EAAGzX,GACnB,OAIJuD,KAAKmB,SAAS,CAAEpD,UAChBkW,M,iCAGS1W,GAGT,IAFA,IAAIQ,EAAK,YAAOiC,KAAKzF,MAAMwD,OAEnBmW,EAAI,EAAGA,EAAInW,EAAMqE,OAAQ8R,IAAI,CAEnC,GADmBnW,EAAMmW,GACTvW,MAAQJ,EAAO,CAC7BQ,EAAMkR,OAAOiF,EAAG,GAChB,OAIJlU,KAAKmB,SAAS,CAAEpD,Y,oCAGJ,IAAD,OACPA,EAAQ,GAeZ,OAdGiC,KAAKzF,MAAMwD,MAAMqE,OAClBpC,KAAKzF,MAAMwD,MAAMiK,SAAQ,SAAAvL,GACvBsB,EAAMmK,KACN,kBAAC,GAAD,CAAMiG,SAAU1R,EAChBgB,WAAY,EAAKA,WACjBG,WAAY,EAAKA,WACjBkR,WAAY,EAAKA,WACjB3G,IAAK1L,EAAKkB,UAKZI,EAAQ,iDAEHA,I,+BAKP,OAAGiC,KAAKzF,MAAMiK,eACL,kBAAC,IAAD,CAAU9B,GAAG,MAGd1C,KAAKzF,MAAMiZ,aACV,+BAKL,kBAAC5Q,EAAA,EAAD,CAAWmN,OAAK,EAACtQ,UAAW,gBAAkBO,KAAK0T,gBACjD,kBAAC,GAAD,CAAQzP,OAAQjE,KAAKiE,OAAQE,gBAAiBnE,KAAKmE,kBACnD,kBAACvB,EAAA,EAAD,CAAWnD,UAAWO,KAAKoE,kBACzB,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKM,GAAI,EAAGrD,UAAU,8BACpB,yBAAKA,UAAU,eAAf,QAEF,kBAAC+C,EAAA,EAAD,CAAK6I,GAAI,GAAI5I,GAAI,EAAGK,GAAI,EAAGrD,UAAU,6CACjCO,KAAKzF,MAAMgZ,aACb,wBAAI9T,UAAU,QAAd,uBAA0CO,KAAKzF,MAAM+Y,aAArD,MACE,kBAAC,GAAD,CAAUxE,WAAY9O,KAAK8O,aAC3B9O,KAAKyT,eAET,kBAACjR,EAAA,EAAD,CAAKC,GAAI,EAAGK,GAAI,EAAGrD,UAAU,8DAC3B,kBAAC,GAAD,c,GA1IOuE,GAoJRgC,eAAQ9C,EAAiBC,EAAzB6C,CAA6CqN,I,SCzIrD,IAAMc,GAAb,kDAEE,WAAY3U,GAAQ,IAAD,8BACjB,cAAMA,IACDjF,MAAQ,CACX6Z,cAAc,EACdC,wBAAwB,EACxBC,kBAAkB,EAClBC,yBAAyB,GAE3B,EAAKC,UAAY,EAAKA,UAAU5U,KAAf,gBACjB,EAAK6U,eAAiB,EAAKA,eAAe7U,KAApB,gBACtB,EAAK8U,mBAAqB,EAAKA,mBAAmB9U,KAAxB,gBAC1B,EAAK+U,WAAa,EAAKA,WAAW/U,KAAhB,gBAClB,EAAKgV,eAAiB,EAAKA,eAAehV,KAApB,gBACtB,EAAKiV,cAAgB,EAAKA,cAAcjV,KAAnB,gBACrB,EAAKkV,gBAAkB,EAAKA,gBAAgBlV,KAArB,gBACvB,EAAKoS,mBAAqB,EAAKA,mBAAmBpS,KAAxB,gBAC1B,EAAKmV,yBAA2B,EAAKA,yBAAyBnV,KAA9B,gBAChC,EAAKzB,qBAAuB,EAAKA,qBAAqByB,KAA1B,gBAC5B,EAAKoV,wBAA0B,EAAKA,wBAAwBpV,KAA7B,gBAC/B,EAAKqV,yBAA2B,EAAKA,yBAAyBrV,KAA9B,gBAChC,EAAKsV,0BAA4B,EAAKA,0BAA0BtV,KAA/B,gBApBhB,EAFrB,yDA0BI,OAAOI,KAAKR,MAAMlE,SAASvB,WAAaiG,KAAKR,MAAM5E,KAAKb,WA1B5D,sCA8BI,IAAMob,EAAM/F,GAAStS,SAASC,eAAe,gBAAgBkD,OACvDmV,EAAUhG,GAAStS,SAASC,eAAe,oBAAoBkD,OAC/DoV,EAAOjG,GAAStS,SAASC,eAAe,iBAAiBkD,OAO/D,OANc,2BACTD,KAAKzF,MAAMe,UADF,IAEZ6Z,MACAC,UACAC,WArCN,+JA2CU/Z,EAAW0E,KAAK6U,gBA3C1B,SA4CoB3S,EAAehE,eAAe8B,KAAKR,MAAM5E,KAAKb,SAAUuB,GA5C5E,cA6CYI,SACNsE,KAAKR,MAAMtB,eAAe5C,GAC1B0E,KAAKmB,SAAS,CACZiT,cAAc,KAIhBpU,KAAKmB,SAAS,CACZmT,iBAAiB,oHArDzB,iJA4DI,OACEtU,KAAKzF,MAAM+Z,iBACT,kBAACgB,GAAA,EAAKnK,KAAN,KACE,kBAAC9I,EAAA,EAAD,CAAO3B,QAAQ,UACZV,KAAKzF,MAAM+Z,mBAGd,OAnEV,kCAwEI,OACEtU,KAAKR,MAAMlE,SAAS6Z,IAClB,kBAACG,GAAA,EAAKhU,KAAN,CAAW7B,UAAU,uBAClBO,KAAKR,MAAMlE,SAAS6Z,KAErB,OA7EV,uCAkFI,OACEnV,KAAKR,MAAMlE,SAAS8Z,QAClB,kBAACE,GAAA,EAAKhU,KAAN,KACE,kBAAC,IAAD,CAAiBqE,KAAM4P,IAAgB9V,UAAU,yBAA0B,IAC1EO,KAAKR,MAAMlE,SAAS+Z,KACnBrV,KAAKR,MAAMlE,SAAS+Z,KAAO,KAAO,KACnCrV,KAAKR,MAAMlE,SAAS8Z,SAErB,OA1FV,2CA+FI,OAAKpV,KAAK2U,aAaD,KAXL3U,KAAKR,MAAMtF,UACT,kBAACuG,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASX,KAAKR,MAAMgW,cAAe5U,OAAK,GAAlE,YAIA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASX,KAAKR,MAAMiW,YAAa7U,OAAK,GAAhE,YAtGV,uCAgHoB,IAAD,OACfZ,KAAKmB,SAAS,CACZiT,cAAepU,KAAKzF,MAAM6Z,aAC1BE,kBAAkB,IAEftU,KAAKzF,MAAM6Z,cAEdxJ,YAAW,WACT9N,SAASC,eAAe,gBAAgBkD,MAAQ,EAAKT,MAAMlE,SAAS6Z,IACpErY,SAASC,eAAe,oBAAoBkD,MAAQ,EAAKT,MAAMlE,SAAS8Z,QACxEtY,SAASC,eAAe,iBAAiBkD,MAAQ,EAAKT,MAAMlE,SAAS+Z,OACpE,MA3HT,iDAgIIrV,KAAKmB,SAAS,CACZkT,wBAAyBrU,KAAKzF,MAAM8Z,2BAjI1C,uKAsIoBnS,EAAe/D,uBAtInC,cAuIWzC,QACL9C,OAAOC,SAAS6c,SAGhB1V,KAAKmB,SAAS,CACZmT,iBAAiB,uHA5IzB,sJAmJItU,KAAKmB,SAAS,CACZoT,yBAAyB,MApJ/B,iDAyJIvU,KAAKmB,SAAS,CACZoT,yBAAyB,MA1J/B,kDA+JI,OAAO,kBAAC,IAAM5R,SAAP,KACL,kBAAC8N,GAAA,EAAD,CAAOC,KAAM1Q,KAAKzF,MAAMga,wBAAyB5D,OAAQ3Q,KAAKiV,0BAC5D,kBAACxE,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMK,MAAP,KAAc,MAEhB,kBAACL,GAAA,EAAMtF,KAAP,KACE,kBAAC,EAAD,CAAgBpR,SAAUiG,KAAKR,MAAMlE,SAASvB,SAAU8K,UAAQ,EAC9DI,UAAWjF,KAAKR,MAAMlE,SAAStB,eAAgB8K,KAAK,MACpDH,YAAa,aAAQS,QAAM,SAvKvC,iDA8KI,OAAOpF,KAAKzF,MAAM8Z,uBAChB,kBAAC,IAAM1R,SAAP,KACE,2BAAOlI,KAAK,OAAO4C,GAAG,OAAOmB,KAAK,OAAOiB,UAAU,cACnD,kBAAC8C,EAAA,EAAD,CAAK9C,UAAU,qCACb,kBAAC+C,EAAA,EAAD,CAAK6I,GAAI,GACP,kBAAC5K,EAAA,EAAD,CAAQC,QAAQ,YAAYE,OAAK,EAACD,QAASX,KAAK+U,0BAAhD,WAIF,kBAACvS,EAAA,EAAD,CAAK6I,GAAI,GACP,kBAAC5K,EAAA,EAAD,CAAQC,QAAQ,UAAUE,OAAK,EAACD,QAASX,KAAK7B,sBAA9C,aAMJ,OA9LR,uCAkMI,OAAO,kBAAC,IAAMwE,SAAP,KACL,kBAAC2S,GAAA,EAAKnK,KAAN,KACE,kBAAChL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBACpB,kBAACF,EAAA,EAAKwV,MAAN,YACA,kBAACxV,EAAA,EAAKG,QAAN,CAAc0K,GAAG,WAAWC,KAAK,OAEnC,kBAAC9K,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBACpB,kBAACF,EAAA,EAAKwV,MAAN,gBACA,kBAACxV,EAAA,EAAKG,QAAN,CAAc7F,KAAK,OAAO8F,YAAY,aAExC,kBAACJ,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,EAAA,EAAKwV,MAAN,aACA,kBAACxV,EAAA,EAAKG,QAAN,CAAc7F,KAAK,OAAO8F,YAAY,WAG1C,kBAACgC,EAAA,EAAD,CAAK9C,UAAU,2BACb,kBAAC+C,EAAA,EAAD,CAAK6I,GAAI,GACP,kBAAC5K,EAAA,EAAD,CAAQC,QAAQ,YAAYE,OAAK,EAACD,QAASX,KAAK4U,gBAAhD,WAEF,kBAACpS,EAAA,EAAD,CAAK6I,GAAI,GACP,kBAAC5K,EAAA,EAAD,CAAQC,QAAQ,UAAUE,OAAK,EAACD,QAASX,KAAK8U,iBAA9C,cAvNZ,mCA+NI,OAAO,kBAAC,IAAMnS,SAAP,KACL,kBAAC2S,GAAA,EAAKnK,KAAN,KACE,kBAACmK,GAAA,EAAKxE,MAAN,CAAYrR,UAAU,yBACnBO,KAAKR,MAAMlE,SAASvB,UAEtBiG,KAAKwU,YACLxU,KAAKyU,iBACN,kBAACa,GAAA,EAAKhU,KAAN,KACE,kBAAC,IAAD,CAAiBqE,KAAMiQ,IAASnW,UAAU,yBAA0B,IACnEO,KAAKR,MAAMlE,SAASnB,WAAWiI,OAAS,aACI,IAA1CpC,KAAKR,MAAMlE,SAASnB,WAAWiI,OAAe,GAAK,MAEvDpC,KAAK0U,sBAEP1U,KAAK2U,aACJ,kBAAClU,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASX,KAAK4U,gBAArC,QAAqE,QA9O7E,+BAmPI,OAAO,kBAAC,IAAMjS,SAAP,KACL,kBAAC2S,GAAA,EAAD,CAAM7V,UAAU,wBACd,yBAAKA,UAAU,8BACb,kBAAC,EAAD,CAAgB1F,SAAUiG,KAAKR,MAAMlE,SAASvB,SAAU8K,UAAQ,EAC9DI,UAAWjF,KAAKR,MAAMlE,SAAStB,eAAgB8K,KAAK,MACpDH,YAAa3E,KAAKgV,0BACnBhV,KAAK6V,4BAEP7V,KAAKgS,qBACN,yBAAKvS,UAAU,kCACb,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASX,KAAK+U,yBACtCtV,UAAU,6BACV,kBAAC,IAAD,CAAiBkG,KAAMmQ,QAG1B9V,KAAKzF,MAAM6Z,aAAepU,KAAKkK,iBAAmBlK,KAAK+V,cAExD/V,KAAKkV,iCApQb,GAAqCrU,aAyQtBmF,gBA7Qf,SAAyBzL,GACvB,OAAO,eAAKA,KA4Q0B4I,EAAzB6C,CAA6CmO,IChRtD6B,G,kDAEJ,WAAYxW,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXwD,MAAO,GACPzC,SAAU,GACVpB,WAAW,EACX+b,gBAAgB,EAChBC,UAAU,EACVC,iBAAiB,EACjB3C,cAAc,GAEhB,EAAKmB,WAAa,EAAKA,WAAW/U,KAAhB,gBAClB,EAAK0E,aAAe,EAAKA,aAAa1E,KAAlB,gBACpB,EAAK6V,YAAc,EAAKA,YAAY7V,KAAjB,gBACnB,EAAK4V,cAAgB,EAAKA,cAAc5V,KAAnB,gBACrB,EAAK6T,YAAc,EAAKA,YAAY7T,KAAjB,gBACnB,EAAKnC,WAAa,EAAKA,WAAWmC,KAAhB,gBAClB,EAAKhC,WAAa,EAAKA,WAAWgC,KAAhB,gBAClB,EAAKwW,YAAc,EAAKA,YAAYxW,KAAjB,gBACnB,EAAKkP,WAAa,EAAKA,WAAWlP,KAAhB,gBAClB,EAAK1B,eAAiB,EAAKA,eAAe0B,KAApB,gBACtB,EAAK8T,aAAe,EAAKA,aAAa9T,KAAlB,gBArBJ,E,yDAyBhB,OAAOI,KAAKzF,MAAMe,SAASvB,WAAaiG,KAAKR,MAAM5E,KAAKb,W,oCASxD,IAJA,IAAMG,EAAY8F,KAAKR,MAAM5E,KAAKV,UAE5Bmc,EAAYrW,KAAKzF,MAAMe,SAASqC,IAE9B0S,EAAI,EAAGA,EAAInW,EAAUkI,OAAQiO,IAAI,CAEvC,GADenW,EAAUmW,KACTgG,EACd,OAAO,EAGX,OAAO,I,kKAICtc,EAAaiG,KAAKR,MAAMzG,MAAM6a,OAA9B7Z,S,SACcsK,EAAQxG,YAAY9D,G,UAApCuc,E,OACNtW,KAAKmB,SAAS,CACZ7F,SAAUgb,EAAQ5a,QAAU4a,EAAQhb,SAAW,KAC/C4a,UAAWI,EAAQ5a,QACnBya,iBAAiB,KAGhBG,EAAQ5a,Q,wBACH5B,EAASwc,EAAQhb,SAASqC,I,SACX0G,EAAQvG,aAAahE,G,QAAtCyc,E,QACQ7a,QACVsE,KAAKmB,SAAS,CACZpD,MAAOwY,EAASxY,MAChByV,cAAc,EACdtZ,UAAW8F,KAAKoW,gBAKlBpW,KAAKmB,SAAS,CACZqS,cAAc,EACdyC,gBAAgB,I,iRAON5R,EAAQrG,WAAWgC,KAAKzF,MAAMe,SAASqC,K,cAChDjC,UACDxB,EAAY8F,KAAKR,MAAM5E,KAAKV,UAC5BC,EAAa6F,KAAKzF,MAAMe,SAASnB,WAC/Bkc,EAAYrW,KAAKzF,MAAMe,SAASqC,IAChC7D,EAASkG,KAAKR,MAAMlF,QAAQ+C,GAClCnD,EAAUgO,KAAKmO,GACflc,EAAW+N,KAAKpO,GAChBkG,KAAKR,MAAMmE,iBAAiBzJ,GAC5B8F,KAAKmB,SAAS,CACZjH,UAAW8F,KAAKoW,cAChB9a,SAAS,2BAAK0E,KAAKzF,MAAMe,UAAjB,IAA2BnB,kB,sRAMvBkK,EAAQpG,aAAa+B,KAAKzF,MAAMe,SAASqC,K,cAClDjC,UACDxB,EAAY8F,KAAKR,MAAM5E,KAAKV,UAC5BC,EAAa6F,KAAKzF,MAAMe,SAASnB,WAC/Bkc,EAAYrW,KAAKzF,MAAMe,SAASqC,IAChC7D,EAASkG,KAAKR,MAAMlF,QAAQ+C,GAC9BmZ,EAAetc,EAAUwR,QAAQ2K,GACjCI,EAAYtc,EAAWuR,QAAQ5R,GAChC0c,GAAgB,GACjBtc,EAAU+U,OAAOuH,EAAc,GAE9BC,GAAa,GACdtc,EAAW8U,OAAOwH,EAAW,GAE/BzW,KAAKR,MAAMmE,iBAAiBzJ,GAC5B8F,KAAKmB,SAAS,CACZjH,UAAW8F,KAAKoW,cAChB9a,SAAS,2BAAK0E,KAAKzF,MAAMe,UAAjB,IAA2BnB,kB,2IAK1BmB,GACb0E,KAAKmB,SAAS,CACZ7F,SAAS,2BACJ0E,KAAKzF,MAAMe,UACXA,O,iCASEmB,EAAMwX,GAGf,IAFA,IAAIlW,EAAK,YAAOiC,KAAKzF,MAAMwD,OAEnBmW,EAAI,EAAGA,EAAInW,EAAMqE,OAAQ8R,IAAI,CAEnC,GADmBnW,EAAMmW,GACTvW,MAAQlB,EAAKkB,IAAI,CAC/BI,EAAMkR,OAAOiF,EAAG,EAAGzX,GACnB,OAIJuD,KAAKmB,SAAS,CAAEpD,UACO,oBAAbkW,GACRA,M,iCAIO1W,GAGT,IAFA,IAAIQ,EAAK,YAAOiC,KAAKzF,MAAMwD,OAEnBmW,EAAI,EAAGA,EAAInW,EAAMqE,OAAQ8R,IAAI,CAEnC,GADmBnW,EAAMmW,GACTvW,MAAQJ,EAAO,CAC7BQ,EAAMkR,OAAOiF,EAAG,GAChB,OAIJlU,KAAKmB,SAAS,CAAEpD,Y,iCAGPtB,GACT,IAAIsB,EAAQiC,KAAKzF,MAAMwD,MACvBA,EAAMiW,QAAQvX,GACduD,KAAKmB,SAAS,CACZpD,Y,oCAIU,IAAD,OACX,GAAGiC,KAAKzF,MAAMiZ,aACZ,OACE,kBAACjR,EAAA,EAAD,CAAK9C,UAAU,0BACb,kBAAC+C,EAAA,EAAD,CAAK6I,GAAG,QACN,kBAACjD,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAM7I,UAAU,WAAhB,iBAML,GAAGO,KAAKzF,MAAM0b,eACjB,OAAO,kBAAC5T,EAAA,EAAD,CAAO5C,UAAU,yBAAyBiB,QAAQ,UAAlD,6EAKP,IAAI3C,EAAQ,GAWd,OAVKiC,KAAKzF,MAAMwD,OACZiC,KAAKzF,MAAMwD,MAAMiK,SAAQ,SAAAvL,GACvBsB,EAAMmK,KACJ,kBAAC,GAAD,CAAMiG,SAAU1R,EAChBgB,WAAY,EAAKA,WACjBG,WAAY,EAAKA,WACjBuK,IAAK1L,EAAKkB,UAIXI,EAAMqE,OAASrE,EACtB,wBAAI0B,UAAU,aAAd,qB,uCAKA,OAAOO,KAAK2U,aAAe,kBAAC,GAAD,CAAU7F,WAAY9O,KAAK8O,aAAiB,O,+BAKvE,OAAG9O,KAAKzF,MAAMiK,eACL,kBAAC,IAAD,CAAU9B,GAAG,MAGd1C,KAAKzF,MAAM4b,gBACV,+BAGDnW,KAAKzF,MAAM2b,SACV,kBAAC,EAAD,MAIA,kBAACtT,EAAA,EAAD,CAAWmN,OAAK,EAACtQ,UAAW,gBAAkBO,KAAK0T,gBAC1D,kBAAC,GAAD,CAAQzP,OAAQjE,KAAKiE,OAAQE,gBAAiBnE,KAAKmE,kBACnD,kBAACvB,EAAA,EAAD,CAAWnD,UAAWO,KAAKoE,kBACzB,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGK,GAAI,GACd,kBAAC,GAAD,CACAxH,SAAU0E,KAAKzF,MAAMe,SACrBpB,UAAW8F,KAAKzF,MAAML,UACtBwc,QAAS1W,KAAKzF,MAAM4b,gBACpBV,YAAazV,KAAKyV,YAClBD,cAAexV,KAAKwV,cACpBtX,eAAgB8B,KAAK9B,kBAEvB,kBAACsE,EAAA,EAAD,CAAK6I,GAAI,GAAI5I,GAAI,EAAGK,GAAI,EAAGrD,UAAU,gCACjCO,KAAK2W,iBACL3W,KAAKyT,eAET,kBAACjR,EAAA,EAAD,CAAKM,GAAI,EAAGrD,UAAU,yBACpB,yBAAKA,UAAU,eAAf,e,GA7OcuE,GAsPXgC,eAAQ9C,EAAiBC,EAAzB6C,CAA6CgQ,IC3PtDY,G,kDAEJ,WAAYpX,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXkC,KAAM,KACNoa,aAAa,EACbrS,gBAAgB,GAElB,EAAKF,aAAe,EAAKA,aAAa1E,KAAlB,gBACpB,EAAKnC,WAAa,EAAKA,WAAWmC,KAAhB,gBAClB,EAAKhC,WAAa,EAAKA,WAAWgC,KAAhB,gBATF,E,oLAaRrC,EAAWyC,KAAKR,MAAMzG,MAAM6a,OAA5BrW,O,SACU8G,EAAQhF,aAAa9B,G,QAAjCuK,E,QACCpM,SACLsE,KAAKmB,SAAS,CACZgN,SAAUrG,EAAIvM,KACdsb,aAAa,I,uIAYRpa,EAAMwX,GAGf,IAFA,IAAIlW,EAAK,YAAOiC,KAAKzF,MAAMwD,OAEnBmW,EAAI,EAAGA,EAAInW,EAAMqE,OAAQ8R,IAAI,CAEnC,GADmBnW,EAAMmW,GACTvW,MAAQlB,EAAKkB,IAAI,CAC/BI,EAAMkR,OAAOiF,EAAG,EAAGzX,GACnB,OAIJuD,KAAKmB,SAAS,CAAEpD,UACO,oBAAbkW,GACRA,M,iCAIO1W,GAGT,IAFA,IAAIQ,EAAK,YAAOiC,KAAKzF,MAAMwD,OAEnBmW,EAAI,EAAGA,EAAInW,EAAMqE,OAAQ8R,IAAI,CAEnC,GADmBnW,EAAMmW,GACTvW,MAAQJ,EAAO,CAC7BQ,EAAMkR,OAAOiF,EAAG,GAChB,OAIJlU,KAAKmB,SAAS,CAAEpD,Y,+BAKhB,OAAGiC,KAAKzF,MAAMiK,eACL,kBAAC,IAAD,CAAU9B,GAAG,MAGd1C,KAAKzF,MAAMsc,YACV,+BAKL,kBAACjU,EAAA,EAAD,CAAWmN,OAAK,EAACtQ,UAAW,gBAAkBO,KAAK0T,gBACjD,kBAAC,GAAD,CAAQzP,OAAQjE,KAAKiE,OAAQE,gBAAiBnE,KAAKmE,kBACnD,kBAACvB,EAAA,EAAD,CAAWnD,UAAWO,KAAKoE,kBACzB,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKM,GAAI,EAAGrD,UAAU,8BACpB,yBAAKA,UAAU,eAAf,QAEF,kBAAC+C,EAAA,EAAD,CAAK6I,GAAI,GAAI5I,GAAI,EAAGK,GAAI,EAAGrD,UAAU,6CACnC,kBAAC,GAAD,CAAM0O,SAAUnO,KAAKzF,MAAM4T,SAC3B1Q,WAAYuC,KAAKvC,WACjBG,WAAYoC,KAAKpC,cAEnB,kBAAC4E,EAAA,EAAD,CAAKC,GAAI,EAAGK,GAAI,EAAGrD,UAAU,8DAC3B,kBAAC,GAAD,c,GAxFOuE,GAkGRgC,eAAQ9C,EAAiBC,EAAzB6C,CAA6C4Q,ICnGtDE,G,kDAEJ,WAAYtX,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACXiN,cAAe,GACfuP,eAAe,EACfvS,gBAAgB,GAElB,EAAKF,aAAe,EAAKA,aAAa1E,KAAlB,gBACpB,EAAKiI,oBAAsB,EAAKA,oBAAoBjI,KAAzB,gBARX,E,2LAYAyE,EAAQjF,mB,QAApB0I,E,QACGpM,SACLsE,KAAKmB,SAAS,CACZ4V,eAAe,EACfvP,cAAeM,EAAIvM,O,kJAWvB,IAFA,IAAIiM,EAAgB,GAEZwP,EAAI,EAAGA,EAAI,EAAGA,IACpB,GAAGhX,KAAKzF,MAAMiN,cAAcwP,GAAG,CAC7B,IAAI/O,EAAejI,KAAKzF,MAAMiN,cAAcwP,GAC5CxP,EAAcU,KAAK,kBAAC,GAAD,CAAc3M,KAAM0M,EAAcE,IAAKF,EAAatK,OAG3E,OAAO6J,EAAcpF,OAASoF,EAAgB,8B,+BAK9C,OAAGxH,KAAKzF,MAAMiK,eACL,kBAAC,IAAD,CAAU9B,GAAG,MAGd1C,KAAKzF,MAAMwc,cACV,+BAIA,kBAAC,IAAMpU,SAAP,KACL,kBAACC,EAAA,EAAD,CAAWmN,OAAK,EAACtQ,UAAW,gBAAkBO,KAAK0T,gBACjD,kBAAC,GAAD,CAAQzP,OAAQjE,KAAKiE,OAAQE,gBAAiBnE,KAAKmE,kBACnD,kBAACvB,EAAA,EAAD,CAAWnD,UAAWO,KAAKoE,kBACzB,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKM,GAAI,EAAGrD,UAAU,8BACpB,yBAAKA,UAAU,eAAf,QAEF,kBAAC+C,EAAA,EAAD,CAAK6I,GAAI,GAAI5I,GAAI,EAAGK,GAAI,EAAGrD,UAAU,wCACjCO,KAAK6H,uBAET,kBAACrF,EAAA,EAAD,CAAKC,GAAI,EAAGK,GAAI,EAAGrD,UAAU,8DAC3B,kBAAC,GAAD,e,GA7DeuE,GAuEhBgC,eAAQ9C,EAAiBC,EAAzB6C,CAA6C8Q,I,SC7DtDG,G,kDAEJ,WAAYzX,GAAO,IAAD,8BAChB,cAAMA,IACDjF,MAAQ,CACX2c,iBAAiB,EACjBC,kBAAkB,EAClB3S,gBAAgB,GAElB,EAAK4S,eAAiB,EAAKA,eAAexX,KAApB,gBACtB,EAAKyX,gBAAkB,EAAKA,gBAAgBzX,KAArB,gBACvB,EAAK0X,mBAAqB,EAAKA,mBAAmB1X,KAAxB,gBAC1B,EAAK2X,oBAAsB,EAAKA,oBAAoB3X,KAAzB,gBAC3B,EAAK4X,mBAAqB,EAAKA,mBAAmB5X,KAAxB,gBAC1B,EAAK6X,oBAAsB,EAAKA,oBAAoB7X,KAAzB,gBAZX,E,qGAkBhB,OAAOI,KAAKR,MAAM5E,KAAKT,WAAWiI,S,wCAIlC,OAAOpC,KAAKR,MAAM5E,KAAKV,UAAUkI,S,4CAIjCpC,KAAKmB,SAAS,CACZgW,kBAAmBnX,KAAKzF,MAAM4c,iBAC9BD,iBAAiB,M,2CAKnBlX,KAAKmB,SAAS,CACZ+V,iBAAkBlX,KAAKzF,MAAM2c,gBAC7BC,kBAAkB,M,8CAKpB,OAAOnX,KAAKzF,MAAM4c,iBAClB,kBAAC,IAAD,CAAiBxR,KAAM+R,MACrB,kBAAC,IAAD,CAAiB/R,KAAMgS,Q,6CAIzB,OAAO3X,KAAKzF,MAAM2c,gBAClB,kBAAC,IAAD,CAAiBvR,KAAM+R,MACrB,kBAAC,IAAD,CAAiB/R,KAAMgS,Q,4CAIzB,IAAIzd,EAAY,GAahB,OAZA8F,KAAKR,MAAM5E,KAAKV,UAAU8N,SAAQ,SAAAkL,GAChChZ,EAAUgO,KACR,kBAACiL,GAAA,EAAUhM,KAAX,CAAgBgB,IAAK+K,EAAaE,SAAU3T,UAAU,6BACpD,kBAAC,EAAD,CAAgB1F,SAAUmZ,EAAanZ,SACrCkL,UAAWiO,EAAalZ,eACxB8K,KAAK,UACP,uBAAGU,KAAM,YAAc0N,EAAanZ,SAAU0F,UAAU,uBACtD,gCAASyT,EAAanZ,gBAKvBG,I,2CAIP,IAAI0d,EAAW,GAaf,OAZA5X,KAAKR,MAAM5E,KAAKT,WAAW6N,SAAQ,SAAA6P,GACjCD,EAAS1P,KACP,kBAACiL,GAAA,EAAUhM,KAAX,CAAgBgB,IAAK0P,EAAczE,SAAU3T,UAAU,6BACrD,kBAAC,EAAD,CAAgB1F,SAAU8d,EAAc9d,SACtCkL,UAAW4S,EAAc7d,eACzB8K,KAAK,UACP,uBAAGU,KAAM,YAAcqS,EAAc9d,SAAU0F,UAAU,uBACvD,gCAASoY,EAAc9d,gBAKxB6d,I,+BAKP,OAAG5X,KAAKzF,MAAMiK,eACL,kBAAC,IAAD,CAAU9B,GAAG,MAGd1C,KAAKzF,MAAMwc,cACV,+BAIA,kBAAC,IAAMpU,SAAP,KACL,kBAACC,EAAA,EAAD,CAAWmN,OAAK,EAACtQ,UAAW,gBAAkBO,KAAK0T,gBACjD,kBAAC,GAAD,CAAQzP,OAAQjE,KAAKiE,OAAQE,gBAAiBnE,KAAKmE,kBACnD,kBAACvB,EAAA,EAAD,CAAWnD,UAAWO,KAAKoE,kBACzB,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKM,GAAI,EAAGrD,UAAU,8BACpB,yBAAKA,UAAU,eAAf,QAEF,kBAAC+C,EAAA,EAAD,CAAK6I,GAAI,GAAI5I,GAAI,EAAGK,GAAI,EAAGrD,UAAU,wCACnC,wBAAIA,UAAU,QAAd,qBACA,kBAACqY,GAAA,EAAD,KACE,kBAACxC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK1E,OAAN,CAAanR,UAAU,sEAErB,8DACiCO,KAAKoX,iBADtC,YAGA,kBAACU,GAAA,EAAUxM,OAAX,CAAkBN,GAAIvK,IAAQE,QAASX,KAAKsX,mBAC3C5W,QAAQ,QAAQqX,SAAS,KACtB/X,KAAKgY,yBAGX,kBAACF,GAAA,EAAUG,SAAX,CAAoBF,SAAS,KAC3B,kBAACzC,GAAA,EAAKnK,KAAN,KACE,kBAACgI,GAAA,EAAD,CAAWzS,QAAQ,SACfV,KAAKyX,0BAKf,kBAACnC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK1E,OAAN,CAAanR,UAAU,qEAErB,6DACgCO,KAAKqX,kBADrC,YAGA,kBAACS,GAAA,EAAUxM,OAAX,CAAkBN,GAAIvK,IAAQE,QAASX,KAAKuX,oBAC3C7W,QAAQ,QAAQqX,SAAS,KACtB/X,KAAKkY,0BAGX,kBAACJ,GAAA,EAAUG,SAAX,CAAoBF,SAAS,KAC3B,kBAACzC,GAAA,EAAKnK,KAAN,KACE,kBAACgI,GAAA,EAAD,CAAWzS,QAAQ,SACfV,KAAKwX,mC,GA9IPxT,GA6JXgC,eAAQ9C,EAAiBC,EAAzB6C,CAA6CiR,IC9K7C,IACbkB,QACAlV,WACAmV,WACAC,QACAC,WACAvM,QACAwM,kBCDIC,GAAQC,YAAYre,GAE1Bse,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KAIA,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWC,GAAMZ,QACvC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,qBAAqBC,UAAWC,GAAMT,UACxD,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,gBAAgBC,UAAWC,GAAMhN,OACnD,kBAAC,IAAD,CAAO6M,OAAK,EAACC,KAAK,QAAQC,UAAWC,GAAMV,OAC3C,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,GAAMR,gBACpD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWC,GAAMX,UAC9C,kBAAC,IAAD,CAAOS,KAAK,IAAIC,UAAWC,GAAM9V,cAKrCnG,SAASC,eAAe,S9BiGpB,kBAAmBic,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnc,GACL2N,QAAQ3N,MAAMA,EAAMvB,c","file":"static/js/main.ec56f093.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const types = {\n    SET_USER_NICKNAME: 'SET_USER_NICKNAME',\n    SET_USER_EMAIL: 'SET_USER_EMAIL',\n    SET_USER_PROFILE_PICTURE: 'SET_USER_PROFILE_PICTURE',\n    SET_USER_FOLLOWING: 'SET_USER_FOLLOWING',\n    SET_USER_FOLLOWEDBY: 'SET_USER_FOLLOWEDBY',\n    UNSET_USER: 'UNSET_USER',\n    SET_SESSION_TOKEN: 'SET_SESSION_TOKEN',\n    SET_SESSION_USERID: 'SET_SESSION_USERID',\n    SET_SESSION_ACTIVE: 'SET_SESSION_ACTIVE',\n    SET_DARK_THEME: 'SET_DARK_THEME'\n}\n\nexport function setUserEmail(email) {\n    return {\n        type: types.SET_USER_EMAIL,\n        email\n    }\n}\n\nexport function setUserNickname(nickname) {\n    return {\n        type: types.SET_USER_NICKNAME,\n        nickname\n    }\n}\n\nexport function setUserProfilePicture(profilePicture) {\n    return {\n        type: types.SET_USER_PROFILE_PICTURE,\n        profilePicture\n    }\n}\n\nexport function setUserFollowing(following) {\n    return {\n        type: types.SET_USER_FOLLOWING,\n        following\n    }\n}\n\nexport function setUserFollowedBy(followedBy) {\n    return {\n        type: types.SET_USER_FOLLOWEDBY,\n        followedBy\n    }\n}\n\nexport function unsetUser() {\n    return {\n        type: types.UNSET_USER\n    }\n}\n\nexport function setSessionToken(token) {\n    return {\n        type: types.SET_SESSION_TOKEN,\n        token\n    }\n}\n\nexport function setSessionUserId(userId) {\n    return {\n        type: types.SET_SESSION_USERID,\n        userId\n    }\n}\n\nexport function setSessionActive(active = false) {\n    return {\n        type: types.SET_SESSION_ACTIVE,\n        active\n    }\n}\n\nexport function setDarkTheme(active = false) {\n    return {\n        type: types.SET_DARK_THEME,\n        active\n    }\n}\n\nexport default types;","import actionTypes from '../actions';\n\nconst initialState = {\n  active: false,\n  token: null,\n  userId: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case actionTypes.SET_SESSION_TOKEN:\n      return {\n        ...state,\n        token: action.token,\n      }\n    case actionTypes.SET_SESSION_USERID:\n      return {\n        ...state,\n        userId: action.userId\n      }\n    case actionTypes.SET_SESSION_ACTIVE:\n      if(action.active){\n        return {\n          ...state,\n          active: true\n        }\n      }\n      else{\n        return initialState;\n      }\n    case actionTypes.SET_DARK_THEME:\n      return {\n        ...state,\n        darkTheme: action.active\n      }\n    default:\n      return state;\n  }\n}","import actionTypes from '../actions';\n\nconst initialState = {\n  nickname: null,\n  profilePicture: null,\n  email: null,\n  following: [],\n  followedBy: []\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type){\n    case actionTypes.SET_USER_EMAIL:\n      return {\n        ...state,\n        email: action.email\n      }\n    case actionTypes.SET_USER_NICKNAME:\n      return {\n        ...state,\n        nickname: action.nickname\n      }\n    case actionTypes.SET_USER_PROFILE_PICTURE:\n      return {\n        ...state,\n        profilePicture: action.profilePicture\n      }\n    case actionTypes.SET_USER_FOLLOWING:\n      return {\n        ...state,\n        following: action.following\n      }\n    case actionTypes.SET_USER_FOLLOWEDBY:\n      return {\n        ...state,\n        followedBy: action.followedBy\n      }\n    case actionTypes.UNSET_USER:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\n\nimport session from '../reducers/session.js';\nimport user from '../reducers/user.js';\n\nconst mydriaApp = combineReducers({\n  session,\n  user,\n})\n\nexport default mydriaApp;","import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst baseUrl = 'https://mydria-api.herokuapp.com';\n\n/**\n * Verifica se a sessão está ativa.\n * @param {String} token Token de acesso\n * @return { active: Boolean, userData: Object }\n */\nconst validateSession = async function (token) {\n  if (!token) {\n    return {\n      active: false\n    }\n  }\n  let response = {};\n  try {\n    const res = await axios({\n      url: baseUrl + '/session',\n      method: 'get',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      active: true,\n      userData: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      active: false\n    }\n  }\n  return response;\n}\n\n/**\n * @desc Faz uma request ao servidor para realizar login com o email e password inseridos.\n * @param {String} email \n * @param {String} password \n * @return {success: Boolen, token: String, userId: String}\n */\nconst login = async function (email, password) {\n  if (!email || !password) {\n    return { success: false };\n  }\n  let loginForm = { email, password };\n  let response = {};\n  try {\n    const res = await axios({\n      method: 'post',\n      url: baseUrl + '/login',\n      data: loginForm\n    })\n    response = {\n      success: true,\n      token: res.data.token,\n      userId: res.data.userId\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      message: e.response ? e.response.data :\n        'An internal error ocurred at our server. Please try again later.'\n    }\n  }\n  return response;\n}\n\nconst signup = async function (signupForm) {\n  let response = {};\n  try {\n    const res = await axios({\n      method: 'post',\n      url: baseUrl + '/users',\n      data: signupForm\n    })\n    response = {\n      success: true\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      message: e.response.data\n    }\n  }\n  return response;\n}\n\nconst loadSomePosts = async function () {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      method: 'get',\n      url: baseUrl + '/posts/users',\n      headers: {\n        'x-access-token': token\n      }\n    })\n    response = res.data;\n    response.sort((a, b) => {\n      let dateA = new Date(a.date);\n      let dateB = new Date(b.date);\n      return dateB.getTime() - dateA.getTime();\n    })\n  }\n  catch (e) {\n    response = {\n      success: false,\n      message: e.response.data\n    }\n  }\n  return response;\n}\n\nconst publishPost = async function (post, hasPicture) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    let headers = {\n      'x-access-token': token,\n    }\n    if(hasPicture){\n      //Cria o form com o file input\n      let formData = new FormData();\n      let imageFile = document.getElementById('post-file');\n      formData.append(\"file\", imageFile.files[0]);\n      //Faz a request de upload da foto pro servidor\n      try {\n        const res = await axios({\n          url: baseUrl + `/images`,\n          method: 'post',\n          headers: {\n            'x-access-token': token,\n            'Content-Type': `multipart/form-data; ${formData._boundary}`\n          },\n          data: formData\n        });\n        response = {\n          success: true,\n          data: res.data\n        }\n      }\n      catch (e) {\n        response = {\n          success: false,\n          error: e.response\n        }\n      }\n      //Coleta o id da imagem instanciada\n      post.img = response.data.id;\n    }\n    //Faz a requisição pra instanciar o post\n    const res = await axios({\n      url: baseUrl + '/posts',\n      method: 'post',\n      headers,\n      data: post\n    });\n    response = {\n      success: true,\n      post: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst likePost = async function (postId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}/like`,\n      method: 'post',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      success: true,\n      post: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst unlikePost = async function (postId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}/unlike`,\n      method: 'post',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      success: true,\n      post: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst updatePost = async function (updatedPost) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${updatedPost._id}`,\n      method: 'put',\n      headers: {\n        'x-access-token': token\n      },\n      data: updatedPost\n    });\n    response = {\n      success: true,\n      post: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst deletePost = async function (postId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}`,\n      method: 'delete',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      success: true,\n      post: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst getUserData = async function (nickname) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/user/${nickname}`,\n      method: 'get',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      success: true,\n      userData: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst getUserPosts = async function (userId) {\n  let response = {};\n  try {\n    const res = await axios({\n      url: baseUrl + `/posts/${userId}`,\n      method: 'get'\n    });\n    response = {\n      success: true,\n      posts: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst followUser = async function (userId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/follow/${userId}`,\n      method: 'post',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      success: true\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst unfollowUser = async function (userId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/follow/${userId}`,\n      method: 'delete',\n      headers: {\n        'x-access-token': token\n      }\n    });\n    response = {\n      success: true\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst updateUserData = async function (nickname, userData) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/user/${nickname}`,\n      method: 'put',\n      headers: {\n        'x-access-token': token\n      },\n      data: userData\n    });\n    response = {\n      success: true,\n      userData: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst uploadProfilePicture = async function () {\n  let response = {};\n  let formData = new FormData();\n  let imageFile = document.getElementById('file');\n  formData.append(\"file\", imageFile.files[0])\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/profile-pic`,\n      method: 'post',\n      headers: {\n        'x-access-token': token,\n        'Content-Type': `multipart/form-data; ${formData._boundary}`\n      },\n      data: formData\n    });\n    response = {\n      success: true\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst setTmpImage = async function() {\n  let response = {};\n  let formData = new FormData();\n  formData.append(\"tmp\", true);\n  let imageFile = document.getElementById('post-file');\n  formData.append(\"file\", imageFile.files[0])\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/tmp`,\n      method: 'post',\n      headers: {\n        'x-access-token': token,\n        'Content-Type': `multipart/form-data; ${formData._boundary}`\n      },\n      data: formData\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst getPostComments = async function(postId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}/comments`,\n      method: 'get',\n      headers: {\n        'x-access-token': token,\n      }\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst publishComment = async function(comment, postId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}/comments`,\n      method: 'post',\n      headers: {\n        'x-access-token': token,\n      },\n      data: comment\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n} \n\nconst deleteComment = async function(commentId) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/comment/${commentId}`,\n      method: 'delete',\n      headers: {\n        'x-access-token': token,\n      }\n    });\n    response = {\n      success: true\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst updateComment = async function(updatedComment) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/comment/${updatedComment._id}`,\n      method: 'put',\n      headers: {\n        'x-access-token': token,\n      },\n      data: updatedComment\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst sharePost = async function(postId, text = '', tags = []) {\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}/share`,\n      method: 'post',\n      headers: {\n        'x-access-token': token,\n      },\n      data: {\n        text,\n        tags\n      }\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst getNotifications = async function(){\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/notifications`,\n      method: 'get',\n      headers: {\n        'x-access-token': token,\n      },\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst loadPostData = async function(postId){\n  let response = {};\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/post/${postId}`,\n      method: 'get',\n      headers: {\n        'x-access-token': token,\n      },\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst search = async function(query){\n  let response = {}\n  try {\n    const token = Cookies.get('token');\n    const res = await axios({\n      url: baseUrl + `/posts${query}`,\n      method: 'get',\n      headers: {\n        'x-access-token': token,\n      },\n    });\n    response = {\n      success: true,\n      data: res.data\n    }\n  }\n  catch (e) {\n    response = {\n      success: false,\n      error: e.response\n    }\n  }\n  return response;\n}\n\nconst resolveImageUrl = function(imageId) {\n  return imageId ? baseUrl + `/image/${imageId}` : '/assets/user.svg';\n}\n\nconst getTmpImageUrl = function(name, ext) {\n  return baseUrl + `/tmp/${name}?ext=${ext}`;\n}\n\nexport default {\n  validateSession,\n  login,\n  signup,\n  loadSomePosts,\n  publishPost,\n  likePost,\n  unlikePost,\n  updatePost,\n  deletePost,\n  getUserData,\n  getUserPosts,\n  followUser,\n  unfollowUser,\n  updateUserData,\n  uploadProfilePicture,\n  resolveImageUrl,\n  setTmpImage,\n  getTmpImageUrl,\n  getPostComments,\n  publishComment,\n  deleteComment,\n  updateComment,\n  sharePost,\n  getNotifications,\n  loadPostData,\n  search\n}","import React from 'react';\n\nexport default function(props) {\n  return <h1 className=\"my-logo\">Mydria</h1>\n}","import React, { Component } from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default class LoginForm extends Component {\n  constructor(props){\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  handleKeyPress(e) {\n    if(e.charCode === 13){\n      this.handleLogin();\n    }\n  }\n\n  handleLogin() {\n    const email = document.getElementById('email-input').value;\n    const password = document.getElementById('password-input').value;\n    this.props.doLogin({ email, password });\n  }\n\n  render() {\n    return (\n      <Form>\n        <Form.Group controlId=\"email-input\">\n          <Form.Control type=\"email\" \n          name=\"email\"\n          placeholder=\"E-mail\" \n          onKeyPress={this.handleKeyPress}\n        />\n        </Form.Group>\n\n        <Form.Group controlId=\"password-input\">\n          <Form.Control type=\"password\" \n          name=\"password\"\n          placeholder=\"Password\" \n          onKeyPress={this.handleKeyPress}\n        />\n        </Form.Group>\n        <Button variant=\"info\" onClick={this.handleLogin} block>\n          Login\n        </Button>\n      </Form>\n    )\n  }\n}","import React, { Component } from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nexport default class SignupForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      nickname: '',\n      password: '',\n      passwordAgain: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n  }\n\n  handleChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  /**\n   * Emite o evento pro parent: realizar sign up\n   */\n  handleSignup(){\n    this.props.doSignup(this.state);\n  }\n\n  render() {\n    return (\n      <Form>\n        <Form.Group controlId=\"formSignupEmail\">\n          <Form.Control type=\"email\" \n            name=\"email\"\n            placeholder=\"E-mail\" \n            value={this.state.email} \n            onChange={this.handleChange.bind(this)}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formSignupNickname\">\n          <Form.Control type=\"text\" \n            name=\"nickname\"\n            placeholder=\"Nickname\" \n            value={this.state.nickname} \n            onChange={this.handleChange.bind(this)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formSignupPassword\">\n          <Form.Control type=\"password\" \n            name=\"password\"\n            placeholder=\"Password\" \n            value={this.state.password}\n            onChange={this.handleChange.bind(this)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formSignupPasswordAgain\">\n          <Form.Control type=\"password\" \n            name=\"passwordAgain\"\n            placeholder=\"Password again\" \n            value={this.state.passwordAgain}\n            onChange={this.handleChange.bind(this)}\n          />\n          <Form.Text className=\"text-muted\">\n            Warning: this is NOT a secure application! Do not use your passwords \n            from another accounts (email, social networks, etc).\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"I totally agree with the Privacy Policy\" />\n        </Form.Group>\n        \n        <Button variant=\"success\" onClick={this.handleSignup} block>\n          Sign up\n        </Button>\n      </Form>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport requestService from '../services/request';\nimport Cookies from 'js-cookie';\n\nimport Logo from '../components/Logo';\nimport LoginForm from '../components/LoginForm';\nimport SignupForm from '../components/SignupForm';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default class LoginPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      //Usado durante o render para redirecionar pra página de feed ou não:\n      sessionActive: false,\n      //Mensagem a ser exibida, se houver\n      message: '',\n      //Tipo de mensagem a ser exibida, se houver\n      messageType: '',\n      //Renderiza o form de signup ao invés do form de login\n      showSignupForm: false\n    }\n    //Faz o bind das funções do component:\n    this.doLogin = this.doLogin.bind(this);\n    this.doSignup = this.doSignup.bind(this);\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderFormFooter = this.renderFormFooter.bind(this);\n    this.showLogin = this.showLogin.bind(this);\n    this.showSignup = this.showSignup.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  /**\n   * Quando a view for montada, verifica se ja não existe uma session válida e ativa.\n   */\n  async componentDidMount() {\n    let token = Cookies.get('token');\n    const session = await requestService.validateSession(token);\n    if(session.active){\n      //Seta a variável que vai renderizar um <Redirect> pra mudar de página:\n      this.setState({ sessionActive: true });\n    }\n  }\n\n  /**\n   * Faz a request no servidor para realizar o login.\n   * @param {email: String, password: String} loginForm Form com os dados de login\n   */\n  async doLogin(loginForm) {\n    const login = await requestService.login(loginForm.email, loginForm.password);\n    if(login.success){\n      Cookies.set('token', login.token);    //Seta o token nos cookies\n      Cookies.set('userId', login.userId);  //Seta o userId nos cookies\n      //Seta a variável que vai renderizar um <Redirect> pra mudar de página:\n      this.setState({ sessionActive: true })\n    }\n    //Em caso de erro, renderiza a mensagem do servidor:\n    else{   \n      this.setState({ message: login.message, messageType: \"warning\" });\n    }\n  }\n\n  /**\n   * Faz a request no servidor para criar uma nova conta.\n   * @param {\n   *  email: String,\n   *  nickname: String,\n   *  password: String,\n   *  passwordAgain: String\n   * } signupForm Form com os dados do usuário\n   */\n  async doSignup(signupForm) {\n    const signup = await requestService.signup(signupForm);\n    if(signup.success){\n      this.showLogin();   //Exibe o form de login novamente\n      //Exibe uma mensagem de conta criada com sucesso:\n      this.setState({ \n        message: \"Account successfuly created. You may now login.\", \n        messageType: \"success\" \n      });\n    }\n    //Em caso de erro, renderiza a mensagem do servidor:\n    else{ \n      this.setState({ message: signup.message, messageType: \"warning\" });\n    }\n  }\n\n  /**\n   * Renderiza a mensagem de alerta em caso de erro ou sucesso em uma request\n   * de acordo com o que está setado no state.\n   */\n  renderMessage() {\n    if(this.state.message.length){\n      return (\n        <Alert variant={this.state.messageType} className=\"mb-0\">\n          {this.state.message}\n        </Alert>\n      )\n    }\n    else{\n      return <Alert variant=\"link\" className=\"mb-0 color-transparent\">.</Alert>;\n    }\n  }\n\n  /**\n   * [comando] Faz exibir o form de Sign up.\n   */\n  showSignup() {\n    this.setState({ showSignupForm: true, message: '' });\n  }\n\n  /**\n   * [comando] Faz exibir o form de Login.\n   */\n  showLogin() {\n    this.setState({ showSignupForm: false, message: '' });\n  }\n\n  renderForm() {\n    return this.state.showSignupForm ? \n      <SignupForm doSignup={this.doSignup} /> \n      : \n      <LoginForm doLogin={this.doLogin} />\n  }\n\n  /**\n   * Renderiza o footer do form.\n   */\n  renderFormFooter() {\n    {/* Botão que alterna entre 'Login' e 'Signup' */}\n    const actionButton = this.state.showSignupForm ?\n      <Button variant=\"link\" block onClick={this.showLogin}>\n        Login\n      </Button>\n      :\n      <Button variant=\"link\" block onClick={this.showSignup}>\n        Sign up\n      </Button>\n      \n    return (\n      <Row className=\"justify-content-md-between\">\n        <Col sm=\"auto\" className=\"justify-content-center\">\n          <Button variant=\"link\" block>Privacy Policy</Button>\n        </Col>\n        <Col sm=\"auto\" className=\"justify-content-center\">\n          { actionButton }\n        </Col>\n      </Row>\n    )\n  }\n\n  render(){\n    return this.state.sessionActive ?\n      <Redirect to=\"/feed\" />\n      :\n      <React.Fragment>\n        <div className=\"my-login-background\"></div>\n        <Container className=\"my-login-container\">\n            <Row className=\"align-items-center my-full-height\">\n            <Col md=\"6\" lg=\"7\" className=\"my-login-phrase d-none d-lg-block\">\n              Get in touch with your interests, while sharing your thoughts with the world.\n            </Col>\n            <Col md=\"6\" lg=\"4\" xl=\"3\" className=\"my-login-box pt-4 pb-3\">\n              <Logo />\n              { this.renderForm() }\n              { this.renderFormFooter() }\n              { this.renderMessage() }\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n  }\n}","import React, { Component } from 'react';\nimport Logo from '../components/Logo';\nimport Container from 'react-bootstrap/Container';\n\nexport default class NotFound extends Component {\n  render(){\n    return <div className=\"my-login-background my-not-found-page\">\n      <Logo />\n      <p>\n        404 - Ops... nothing found here. 🤷‍♂️\n      </p>\n    </div>\n  }\n}","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport request from '../services/request.js';\nimport \n{ \n  setDarkTheme,\n  setSessionActive, \n  setSessionUserId, \n  setSessionToken,\n  setUserNickname,\n  setUserFollowing,\n  setUserFollowedBy,\n  setUserProfilePicture,\n  setUserEmail,\n  unsetUser\n} from '../actions';\n\nexport function mapStateToProps(state){\n  return {...state}\n}\n\nexport function mapDispatchToProps(dispatch){\n  return {\n    setDarkTheme: active => dispatch(setDarkTheme(active)),\n    setSessionActive: active => dispatch(setSessionActive(active)),\n    setSessionUserId: userId => dispatch(setSessionUserId(userId)),\n    setSessionToken: token => dispatch(setSessionToken(token)),\n    setUserEmail: email => dispatch(setUserEmail(email)),\n    setUserNickname: nickname => dispatch(setUserNickname(nickname)),\n    setUserFollowing: following => dispatch(setUserFollowing(following)),\n    setUserFollowedBy: followedBy => dispatch(setUserFollowedBy(followedBy)),\n    setUserProfilePicture: profilePic => dispatch(setUserProfilePicture(profilePic)),\n    unsetUser: () => dispatch(unsetUser())\n  }\n}\n\nexport class MydriaPage extends Component {\n\n  constructor(props){\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.sessionInit = this.sessionInit.bind(this);\n    this.toggleDarkTheme = this.toggleDarkTheme.bind(this);\n    this.getPageClasses = this.getPageClasses.bind(this);\n  }\n\n  /**\n   * Quando a view for montada, pega o token dos cookies e verifica se\n   * a session é válida e ainda está ativa.\n   */\n  async componentDidMount() {\n    let token = Cookies.get('token');\n    const session = await request.validateSession(token);\n    //Se a session é válida e está ativa:\n    if(session.active){\n      //Grava os dados da session no store:\n      const token = Cookies.get('token');\n      const email = session.userData.email;\n      const nickname = session.userData.nickname;\n      const profilePicture = session.userData.profilePicture;\n      const following = session.userData.following;\n      const followedBy = session.userData.followedBy;\n      const userId = session.userData._id;\n      const darkTheme = Cookies.get('darkTheme') === 'true' ? true : false;\n      this.sessionInit(token, userId, email, nickname, \n        following, followedBy, profilePicture, darkTheme);\n      this.loadPageData();\n    }\n    //Se a session não é válida ou expirou:\n    else{\n      this.logout();    //Faz logout:\n    }\n  }\n\n  /**\n   * @desc Recebe o token, o ID e os dados do usuário pra realizar os dispatches \n   * no store pra setar a session.\n   * @param {String} token \n   * @param {String} userId \n   */\n  sessionInit(token, userId, email, nickname, following, followedBy, profilePicture, darkTheme){\n    this.props.setSessionActive(true);\n    this.props.setSessionUserId(userId);\n    this.props.setSessionToken(token);\n    this.props.setUserEmail(email);\n    this.props.setUserNickname(nickname);\n    this.props.setUserFollowing(following);\n    this.props.setUserFollowedBy(followedBy);\n    this.props.setUserProfilePicture(profilePicture);\n    this.props.setDarkTheme(darkTheme);\n  }\n\n  /**\n   * Limpa os cookies e a store pra realizar logout.\n   */\n  logout(){\n    Cookies.remove('token');\n    Cookies.remove('userId');\n    this.props.setSessionActive(false);\n    this.props.unsetUser();\n    this.setState({ sessionExpired: true });\n  }\n  \n  getDarkTheme(){\n    return this.props.session.darkTheme ? \" my-dark-theme\" : \"\";\n  }\n\n  getPageClasses(){\n    return \"my-page-container\" + (this.props.session.darkTheme ? \" dark-theme\" : \"\");\n  }\n\n  toggleDarkTheme(){\n    let darkTheme = this.props.session.darkTheme;\n    Cookies.set('darkTheme', !darkTheme);\n    this.props.setDarkTheme(!darkTheme);\n    this.setState({});\n  }\n}","import React, { Component } from 'react';\nimport request from '../services/request.js';\n\nimport ListGroup from 'react-bootstrap/esm/ListGroup';\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/esm/Row';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nexport default class ProfilePicture extends Component {\n\n  /**\n   * Props:\n   *  nickname - Nickname de quem a foto vai ser exibida (usado pra gerar o link pro perfil)\n   *  pictureId - Id da picture que vai ser exibida\n   *  size: String - tiny || small || medium || max\n   *  noMargin: Boolean - Aplica ou remove a classe mr-3 do bootstrap\n   *  mobileOnly: Boolean - Oculta a foto em tablet/desktop\n   *  tabletDesktopOnly: Boolean - Oculta a foto no celular\n   *  handleClick: Function - Função de handle de clique\n   *  square: Boolean - Diz se a foto é pra ser qudrada (redondo é o default)\n   */\n  constructor(props){\n    super(props);\n    this.getHref = this.getHref.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  getClasses(){\n    let classes = \"my-profile-picture-wrapper\";\n    classes += this.props.noMargin ? '' : ' mr-3';\n    classes += ` ${this.props.size}`;   // tiny || small || medium || max\n    if(this.props.mobileOnly){\n      classes += \" d-inline-block d-sm-none\";\n    }\n    else if(this.props.tabletDesktopOnly){\n      classes += \" d-none d-sm-inline-block\";\n    }\n    if(this.props.block){\n      classes += \" block\";\n    }\n    return classes;\n  }\n\n  pictureUrl(){\n    return request.resolveImageUrl(this.props.pictureId);\n  }\n\n  getHref(){\n    return this.props.size === 'max' ? '#' : \"/profile/\" + this.props.nickname;\n  }\n\n  handleClick(e){\n    e.preventDefault();\n    if(typeof this.props.handleClick === 'function'){\n      this.props.handleClick();\n    }\n  }\n\n  render(){\n    return <div className={this.getClasses()}>\n      {\n        this.props.size === 'max' ? \n        <a className={\"my-profile-picture\" + (this.props.square ? \" square\" : \"\")} \n        style={{backgroundImage: `url(${this.pictureUrl()})`}}\n        href=\"\" onClick={e => this.handleClick(e)}\n        ></a>\n        :\n        <a className={\"my-profile-picture\" + (this.props.square ? \" square\" : \"\")} \n        href={this.getHref()} style={{backgroundImage: `url(${this.pictureUrl()})`}}\n        ></a>\n      }\n    </div>\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { mapStateToProps } from '../pages/base.js';\n\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSun,\n  faMoon\n} from '@fortawesome/free-solid-svg-icons';\n\nclass ThemeSwitch extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.toggleDarkTheme = this.toggleDarkTheme.bind(this);\n    this.renderMobileIcon = this.renderMobileIcon.bind(this);\n  }\n\n  isDarkTheme(){\n    return this.Cookies.get('darkTheme');\n  }\n\n  toggleDarkTheme(){\n    this.props.toggleDarkTheme();\n  }\n\n  renderMobileIcon(){\n    return <div className=\"mr-3 h-100 d-flex align-items-center\" onClick={this.toggleDarkTheme}>\n      {\n        this.props.session.darkTheme ?\n        <FontAwesomeIcon icon={faMoon} className=\"my-moon-icon\" />\n        :\n        <FontAwesomeIcon icon={faSun} className=\"my-sun-icon\" />\n      }\n    </div>\n  }\n\n  render(){\n    return <React.Fragment>\n      <div className=\"my-theme-switch d-none d-lg-flex row align-items-center ml-0 mr-3\">\n        <FontAwesomeIcon icon={faSun} className=\"my-sun-icon\" />\n        <Form.Check \n          type=\"switch\"\n          id=\"my-theme-switch-desktop\"\n          label=\"\"\n          className=\"mr-2 ml-2\"\n          checked={this.props.session.darkTheme}\n          onChange={this.toggleDarkTheme}\n        />\n        <FontAwesomeIcon icon={faMoon} className=\"my-moon-icon\" />\n      </div>\n      <div className=\"my-theme-switch-mobile d-xs-flex d-lg-none align-items-center\">\n        { this.renderMobileIcon() }\n      </div>\n    </React.Fragment>\n  }\n}\n\nexport default connect(mapStateToProps)(ThemeSwitch);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {  mapStateToProps } from '../pages/base';\n\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport ProfilePicture from './ProfilePicture.js';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass Notification extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.getLabel = this.getLabel.bind(this);\n    this.state = {\n      months: [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n      ]\n    }\n  }\n\n  getLabel(){\n    let label = 'unknown type';\n    switch(this.props.data.type){\n      case 'POST_LIKED':\n        label = ' liked your post.';\n        break;\n      case 'POST_UNLIKED':\n        label = ' unliked your post.';\n        break;\n      case 'POST_COMMENTED':\n        label = ' commented on your post.';\n        break;\n      case 'POST_SHARED':\n        label = ' shared your post.';\n        break;\n      case 'FOLLOW':\n        label = ' started following you.';\n        break;\n    }\n    return <React.Fragment>\n      <strong>{this.props.data.from.nickname}</strong>\n      { label }\n    </React.Fragment>;\n  }\n  \n  getDateLabel(){\n    let now = new Date();\n    let event = new Date(this.props.data.date);\n    //Se o evento ocorreu hoje\n    if(now.getDate() === event.getDate() && now.getMonth() === event.getMonth() &&\n    now.getFullYear() === event.getFullYear()){\n      let mins = (now.getTime() - event.getTime()) / 1000 / 60;\n      mins = Math.floor(mins);\n      return mins + ' min';\n    }\n    else {\n      let day = event.getDate();\n      let month = this.state.months[event.getMonth()];\n      let hours = event.getHours();\n      let mins = event.getMinutes();\n      return `${month} ${day} - ${hours > 9 ? hours : '0'+hours}:${mins > 9 ? mins : '0'+mins}`;\n    }\n  }\n\n  getHref(){\n    return this.props.data.type === 'FOLLOW' ? \n    `/profile/${this.props.data.from.nickname}` \n    : `/post/${this.props.data.post._id}`;\n  }\n\n  render(){\n    return <NavDropdown.Item href={this.getHref()} \n    className=\"my-notification d-flex align-center w-100\">\n      <ProfilePicture \n        nickname={this.props.data.from.nickname} \n        pictureId={this.props.data.from.profilePicture}\n        size=\"tiny\"\n      />\n      <div className=\"d-flex flex-column\">\n        <div className=\"my-notification-label\">{ this.getLabel() }</div>\n        <div className=\"my-notification-date\">{ this.getDateLabel() }</div>\n      </div>\n    </NavDropdown.Item>\n  }\n}\n\nexport default connect(mapStateToProps)(Notification);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { mapDispatchToProps, mapStateToProps } from '../pages/base';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ProfilePicture from './ProfilePicture.js';\nimport ThemeSwitch from './ThemeSwitch.js';\nimport Notification from './Notification.js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n  faArrowLeft,\n  faBell\n} from '@fortawesome/free-solid-svg-icons';\n\nimport request from '../services/request.js';\n\nclass Topbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      userPictureUrl: request.resolveImageUrl(props.user.profilePicture),\n      showMobileSearch: false,\n      notifications: [],\n      notificationsLoaded: false\n    }\n    this.toggleMobileSearch = this.toggleMobileSearch.bind(this);\n    this.renderMobileSearchReturnButton = this.renderMobileSearchReturnButton.bind(this);\n    this.toggleDarkTheme = this.toggleDarkTheme.bind(this);\n    this.loadNotifications = this.loadNotifications.bind(this);\n    this.renderNotifications = this.renderNotifications.bind(this);\n  }\n\n  logout() {\n    this.props.logout();\n  }\n\n  toggleMobileSearch() {\n    this.setState({ showMobileSearch: !this.state.showMobileSearch });\n  }\n\n  toggleDarkTheme(){\n    this.props.toggleDarkTheme();\n  }\n\n  async loadNotifications(){\n    if(!this.state.notificationsLoaded){\n      const req = await request.getNotifications();\n      let notifications = [];\n      if(req.success){\n        notifications = req.data;\n        this.setState({\n          notifications,\n          notificationsLoaded: true\n        })\n      }\n      else{\n        //TODO - Tratamento de erro ao carregar as notificações\n      }\n    }\n  }\n\n  renderMobileSearchReturnButton() {\n    return this.state.showMobileSearch ?\n      <Form.Group controlId=\"formBasicReturn\" className=\"my-return-button\">\n        <Button variant=\"dark\" onClick={this.toggleMobileSearch}>\n          <FontAwesomeIcon icon={faArrowLeft} className=\"my-profile-data-icon\" />\n        </Button>\n      </Form.Group>\n      : null\n  }\n\n  renderNotifications(){\n    if(this.state.notificationsLoaded){\n      if(this.state.notifications.length){\n        let notifications = [];\n        this.state.notifications.forEach(notification => {\n          notifications.push(\n            <Notification data={notification} key={notification._id} />\n          )\n        })\n        notifications.push(\n          <NavDropdown.Item href='/notifications' \n          className=\"d-flex align-center w-100 text-primary my-see-all\">\n            <span>See all</span>\n          </NavDropdown.Item>\n        )\n        return notifications;\n      }\n      else{\n        return <p className=\"my-notification-label text-center mb-0\">\n          No notifications to show.\n        </p>\n      }\n    }\n    else{\n      return <div className=\"my-notification-label d-flex justify-content-center align-middle\">\n        <Spinner animation=\"border\" role=\"status\"></Spinner>\n        <span className=\"ml-2\">Loading...</span>\n      </div>\n    }\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\" className=\"my-navbar-container\">\n        <Container>\n          {\n            this.state.showMobileSearch ? null :\n              <Navbar.Brand href=\"/feed\">Mydria</Navbar.Brand>\n          }\n          <Form inline className={this.state.showMobileSearch ?\n            \"my-mobile-search\" : \"d-none d-sm-flex\"} action=\"/feed\">\n            {this.renderMobileSearchReturnButton()}\n            <Form.Group controlId=\"formBasicInput\" className=\"my-search-input\">\n              <Form.Control type=\"text\"\n                name=\"search\"\n                placeholder=\"Search\"\n                onKeyDown={this.handleKeyDown}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicSearch\" className=\"d-none d-sm-inline\">\n              <Button variant=\"dark\" type=\"submit\">\n                <FontAwesomeIcon icon={faSearch} className=\"my-profile-data-icon\" />\n              </Button>\n            </Form.Group>\n          </Form>\n          <Nav className={\n            this.state.showMobileSearch ? \"d-none\" : \"flex-row ml-auto my-navbar\"\n          }>\n            <Nav.Link href=\"\" onClick={this.toggleMobileSearch} \n            className=\"d-block d-sm-none mr-3\">\n              <FontAwesomeIcon icon={faSearch} className=\"my-profile-data-icon\" />\n            </Nav.Link>\n            <ThemeSwitch toggleDarkTheme={this.toggleDarkTheme} />\n            <NavDropdown className=\"d-none d-sm-flex align-itens-middle my-notifications mr-2\" alignRight\n            title={ <FontAwesomeIcon icon={faBell} /> } onClick={this.loadNotifications}>\n              { this.renderNotifications() }\n            </NavDropdown>\n            <ProfilePicture nickname={this.props.user.nickname} noMargin\n              pictureId={this.props.user.profilePicture} size=\"tiny\" tabletDesktopOnly/>\n            <NavDropdown title={this.props.user.nickname}\n              alignRight id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"/notifications\" className=\"d-sm-none\">Notifications</NavDropdown.Item>\n              <NavDropdown.Item href=\"/follows\">People you follow</NavDropdown.Item>\n              <NavDropdown.Item href={\"/profile/\" + this.props.user.nickname}>Profile</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Settings</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={this.logout}>Logout</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topbar);","import React, { Component } from 'react';\n\nimport Badge from 'react-bootstrap/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Tag extends Component {\n\n  constructor(props){\n    super(props);\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n  }\n\n  handleCloseClick(e){\n    e.preventDefault();\n    this.props.removeTag(this.props.text)\n  }\n\n  render() {\n    return <Badge variant={ this.props.variant } className=\"my-tag\">\n      { '#' + this.props.text }{' '}\n      <a href=\"\" \n      onClick={this.handleCloseClick}>\n        <FontAwesomeIcon icon={faTimesCircle} />\n      </a>\n    </Badge>\n  }\n}","import React, { Component } from 'react';\nimport request from '../services/request.js';\n\nimport Media from 'react-bootstrap/Media';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsisH, faMinusSquare, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport ProfilePicture from './ProfilePicture.js';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass PostComment extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      editing: false\n    }\n    this.getProfilePageUrl = this.getProfilePageUrl.bind(this);\n    this.isAuthor = this.isAuthor.bind(this);\n    this.editComment = this.editComment.bind(this);\n    this.uneditComment = this.uneditComment.bind(this);\n    this.saveChanges = this.saveChanges.bind(this);\n    this.renderEditForm = this.renderEditForm.bind(this);\n    this.getId = this.getId.bind(this);\n  }\n\n\n  getProfilePageUrl(){\n    return '/profile/' + this.props.commentData.author.nickname;\n  }\n\n  renderCommentDate(){\n    let date = new Date(this.props.commentData.date);\n    return date.toDateString();\n  }\n\n  renderActions(){\n    return this.isAuthor() ?\n    <React.Fragment>\n      <Dropdown.Item href=\"#\" onClick={ this.editComment }>\n        <FontAwesomeIcon icon={faEdit} /> Edit\n      </Dropdown.Item>\n      <Dropdown.Item href=\"#\" onClick={ this.props.deleteComment }>\n        <FontAwesomeIcon icon={faTrashAlt} /> Delete\n      </Dropdown.Item>\n    </React.Fragment>\n    :\n    <Dropdown.Item href=\"#\">\n      <FontAwesomeIcon icon={faMinusSquare} /> Hide this\n    </Dropdown.Item>\n  }\n\n  editComment(){\n    let commentText = this.props.commentData.text;\n    this.setState({\n      editing: true\n    })\n    setTimeout(() => {\n      let commentTextarea = document.getElementById('edit-comment-form-' + this.getId());\n      commentTextarea.value = commentText;\n    }, 10)\n  }\n\n  uneditComment(){\n    this.setState({\n      editing: false\n    })\n  }\n\n  async saveChanges(){\n    let updatedComment = {...this.props.commentData};\n    const updatedText = document.getElementById('edit-comment-form-' + this.getId()).value;\n    updatedComment.text = updatedText;\n    let res = await request.updateComment(updatedComment);\n    if(res.success){\n      this.props.updateComment(res.data, () => {\n        this.uneditComment();\n      });\n    }\n    else{\n      console.log(res.error)\n      //TODO - Tratamento adequado de erro ao atualizar comentário\n    }\n  }\n\n  getId(){\n    return this.props.commentData._id;\n  }\n\n  renderEditForm(){\n    return <Form>\n      <Form.Group>\n        <Form.Control as=\"textarea\" rows=\"3\" id={'edit-comment-form-'+this.getId()}\n        placeholder=\"Leave a comment\"/>\n      </Form.Group>\n      <Row className=\"mb-3 justify-content-end\">\n        <Col sm=\"auto\">\n          <Button variant=\"secondary\" onClick={this.uneditComment}>\n            Cancel\n          </Button>\n          {' '}\n          <Button variant=\"info\" onClick={this.saveChanges}>\n            Save\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  }\n\n  isAuthor(){\n    return this.props.commentData.author._id === this.props.session.userId;\n  }\n\n  render() {\n    return this.state.editing ?\n      this.renderEditForm()\n      :\n      <Media>\n        <ProfilePicture nickname={this.props.commentData.author.nickname}\n          pictureId={this.props.commentData.author.profilePicture} \n          size=\"small\" />\n        <Media.Body>\n          <Row className=\"justify-content-end mb-2\">\n            <Col>\n              <div>\n                <a href={ this.getProfilePageUrl() } className=\"my-post-author-name\">\n                  <strong>{ this.props.commentData.author.nickname }</strong>\n                </a>\n                <div className=\"my-post-date\">\n                  { this.renderCommentDate() }\n                </div>\n              </div>\n            </Col>\n            <Col xs=\"auto\">\n              <Dropdown className=\"my-post-options\" alignRight>\n                {' '}\n                <Dropdown.Toggle variant=\"outline-dark\" \n                className=\"my-post-options-button\"\n                id={\"my-post-options-button-\" + this.props.commentData._id}>\n                  <FontAwesomeIcon icon={faEllipsisH} />\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  { this.renderActions() }\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row className=\"my-post-content\">\n            <Col>\n              <p className=\"my-post-text\">\n                { this.props.commentData.text }\n              </p>\n            </Col>\n          </Row>\n        </Media.Body>\n      </Media>\n  }\n}\n\nexport default connect(mapStateToProps)(PostComment);","export default function(text){\n  if(typeof text === 'string'){\n    while(text.indexOf('  ') > -1){\n      text = text.replace('  ', ' ');\n    }\n    if(text.substring(0, 1) === ' '){\n      text = text.substring(1, text.length);\n    }\n    if(text.substring(text.length - 1) === ' '){\n      text = text.substring(0, text.length - 1);\n    }\n  }\n  return text + '';\n}","import React, { Component } from 'react';\nimport request from '../services/request.js';\n\nimport Media from 'react-bootstrap/Media';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass CommentForm extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      postId: props.postId\n    }\n  }\n\n  getId(){\n    return 'comment-form-' + this.state.postId;\n  }\n\n  render() {\n    return <Form>\n      <Form.Group>\n        <Form.Control as=\"textarea\" rows=\"3\" \n        placeholder=\"Leave a comment\" id={this.getId()} />\n      </Form.Group>\n      <Row className=\"justify-content-between\">\n        <Col md={5} lg={4}>\n          <Button variant=\"secondary\" block \n          onClick={this.props.hideComments} className=\"mb-3\">Cancel</Button>\n        </Col>\n        <Col md={5} lg={4}>\n          <Button variant=\"info\" block \n          onClick={this.props.publishComment} className=\"mb-3\">Comment</Button>\n        </Col>\n      </Row>\n    </Form>\n  }\n}\n\nexport default connect(mapStateToProps)(CommentForm);","import React, { Component } from 'react';\nimport request from '../services/request.js';\n\nimport Media from 'react-bootstrap/Media';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Alert from 'react-bootstrap/Alert';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faComment, \n  faThumbsDown, \n  faThumbsUp, \n  faTrashAlt,\n  faMinusSquare,\n  faEdit,\n  faEllipsisH,\n  faShare\n} from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport Tag from './Tag.js';\nimport PostComment from './Comment.js';\nimport sanitize from '../helpers/stringSanitizer.js';\nimport CommentForm from './CommentForm.js';\nimport ProfilePicture from './ProfilePicture.js';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass Post extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      tempLike: false,\n      tempUnlike: false,\n      showComments: false,\n      showShareModal: false,\n      showConfirmModal: false,\n      confirmModalData: {},\n      error: false,\n      editing: false,\n      editTags: [],\n      postComments: []\n    }\n    this.renderPostDate = this.renderPostDate.bind(this);\n    this.liked = this.liked.bind(this);\n    this.unliked = this.unliked.bind(this);\n    this.likeClick = this.likeClick.bind(this);\n    this.unlikeClick = this.unlikeClick.bind(this);\n    this.renderLikesQty = this.renderLikesQty.bind(this);\n    this.renderUnlikesQty = this.renderUnlikesQty.bind(this);\n    this.clickCallback = this.clickCallback.bind(this);\n    this.renderPostTags = this.renderPostTags.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n    this.renderError = this.renderError.bind(this);\n    this.userIsAuthor = this.userIsAuthor.bind(this);\n    this.hidePost = this.hidePost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.editPost = this.editPost.bind(this);\n    this.uneditPost = this.uneditPost.bind(this);\n    this.renderEditForm = this.renderEditForm.bind(this);\n    this.removeEditTag = this.removeEditTag.bind(this);\n    this.renderEditTags = this.renderEditTags.bind(this);\n    this.onTagPush = this.onTagPush.bind(this);\n    this.saveChanges = this.saveChanges.bind(this);\n    this.getProfilePageUrl = this.getProfilePageUrl.bind(this);\n    this.renderPostPhoto = this.renderPostPhoto.bind(this);\n    this.toggleComments = this.toggleComments.bind(this);\n    this.renderComments = this.renderComments.bind(this);\n    this.publishComment = this.publishComment.bind(this);\n    this.deleteComment = this.deleteComment.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.sharePost = this.sharePost.bind(this);\n    this.renderMiniPost = this.renderMiniPost.bind(this);\n    this.toggleShareModal = this.toggleShareModal.bind(this);\n    this.renderShareModal = this.renderShareModal.bind(this);\n    this.closeConfirmModal = this.closeConfirmModal.bind(this);\n    this.showConfirmModal = this.showConfirmModal.bind(this);\n    this.renderConfirmModal = this.renderConfirmModal.bind(this);\n    this.renderLikeds = this.renderLikeds.bind(this);\n    this.renderUnlikeds = this.renderUnlikeds.bind(this);\n  }\n\n  userIsAuthor(){\n    const userId = this.props.session.userId;\n    const authorId = this.props.postData.author._id;\n    return userId === authorId;\n  }\n\n  /**\n   * Retorna a string da data de criação do post.\n   */\n  renderPostDate(){\n    let date = new Date(this.props.postData.date);\n    return date.toDateString();\n  }\n\n  /**\n   * Retorna se o usuário deu like neste post.\n   */\n  liked(){\n    return this.props.postData.likedBy\n    .filter(userLiked => userLiked._id === this.props.session.userId).length;\n  }\n\n  /**\n   * Retorna se o usuário deu unlike neste post.\n   */\n  unliked(){\n    return this.props.postData.unlikedBy\n    .filter(userUnliked => userUnliked._id === this.props.session.userId).length;\n  }\n\n  /**\n   * Chama o request service para processar o clique no botão de like.\n   */\n  async likeClick(){\n    //Adiciona um like temporariamente\n    this.setState({\n      tempLike: true,\n      tempUnlike: false\n    })\n    //Faz a requisição pro request service:\n    let req = await request.likePost(this.props.postData._id);\n    if(req.success){\n      this.props.updatePost(req.post, this.clickCallback);\n    }\n    else{\n      this.setState({\n        error: req.error\n      })\n    }\n  }\n\n  /**\n   * Chama o request service para processar o clique no botão de unlike.\n   */\n  async unlikeClick(){\n    //Adiciona um unlike temporariamente\n    this.setState({\n      tempLike: false,\n      tempUnlike: true\n    })\n    //Faz a requisição pro request service:\n    let req = await request.unlikePost(this.props.postData._id);\n    if(req.success){\n      this.props.updatePost(req.post, this.clickCallback);\n    }\n    else{\n      this.setState({\n        error: req.error\n      })\n    }\n  }\n\n  /**\n   * Callback da função que atualiza o post na página de feed. Remove os like/unlike\n   * temporários e renderiza o component para aplicar as modificações.\n   */\n  clickCallback(){\n    //Remove o unlike temporário\n    this.setState({\n      tempLike: false,\n      tempUnlike: false\n    })\n  }\n\n  hidePost(){\n    //TODO\n  }\n\n  async deletePost(){\n    const postId = this.props.postData._id;\n    let res = await request.deletePost(postId);\n    if(res.success){\n      //Chama a função do pai pra deletar o post do store:\n      this.setState({ showConfirmModal: false })\n      this.props.deletePost(postId);\n    }\n    else{\n      this.setState({\n        error: 'Something went wrong at our server. Please try again later.'\n      })\n    }\n  }\n\n  editPost(){\n    let postTags = [...this.props.postData.tags];\n    let postText = this.props.postData.text;\n    this.setState({\n      editing: true,\n      editTags: postTags\n    })\n    setTimeout(() => {\n      let postTextarea = document.getElementById('edit-post-form-' + this.props.postData._id)\n      postTextarea.value = postText;\n    }, 10)\n  }\n\n  uneditPost(){\n    this.setState({\n      editing: false\n    })\n  }\n\n  async sharePost(){\n    //Verifica se é pra compartilhar este post ou o original:\n    let postId = this.props.postData.sharedFrom ? \n      this.props.postData.sharedFrom._id : this.props.postData._id;\n    let shareText = document.getElementById('edit-post-form-' + this.props.postData._id).value;\n    let shareTags = this.state.editTags;\n    let res = await request.sharePost(postId, shareText, shareTags);\n    if(res.success){\n      this.props.appendPost(res.data);\n    }\n    else{\n      console.log(res.error);\n      //TODO - Tratamento adequado de erro ao compartilhar o post\n    }\n    this.toggleShareModal();\n  }\n\n  /**\n   * Retorna a quantidade de likes do post.\n   */\n  renderLikesQty(){\n    let tempLike = this.state.tempLike ? 1 : 0;\n    return ' ' + (this.props.postData.likedBy.length + tempLike);\n  }\n\n  /**\n   * Retorna a quantidade de unlikes do post.\n   */\n  renderUnlikesQty(){\n    let tempUnlike = this.state.tempUnlike ? 1 : 0;\n    return ' ' + (this.props.postData.unlikedBy.length + tempUnlike);\n  }\n\n  renderPostTags(postTags){\n    if(postTags.length){\n      let tags = [];\n      postTags.forEach(tagContent => {\n        tags.push(<a href={\"/feed?search=\" + tagContent} key={tagContent}>\n          #{ tagContent } \n        </a>)\n      })\n      return tags;\n    }\n    else{\n      return null;\n    }\n  }\n\n  removeEditTag(tagContent){\n    let tagIndex = this.state.editTags.indexOf(tagContent);\n    let editTags = [...this.state.editTags];\n    editTags.splice(tagIndex, 1);\n    this.setState({\n      editTags\n    })\n  }\n\n  renderEditTags(){\n    let tags = [];\n    this.state.editTags.forEach(tag => {\n      tags.push(<Tag text={tag} key={tag} variant=\"info\" removeTag={ this.removeEditTag }/>)\n    })\n    return tags.length ? \n      <Row>\n        <Col>\n          { tags }\n        </Col>\n      </Row>\n      : null;\n  }\n\n  onTagPush(target){\n    if(target.charCode === 13){\n      let tagInput = document\n      .getElementById(\"edit-postform-tags-input\" + this.props.postData._id);\n      let tagContent = tagInput.value;\n      tagContent = sanitize(tagContent);\n      let tagExists = this.state.editTags.indexOf(tagContent) >= 0;\n      if(tagContent && !tagExists){\n        let tags = this.state.editTags;\n        tags.push(tagContent);\n        this.setState({ \n          editTags: tags \n        });\n        tagInput.value = '';\n      }\n    }\n  }\n\n  async saveChanges(){\n    let updatedPost = {...this.props.postData};\n    const updatedText = document.getElementById('edit-post-form-' + this.props.postData._id).value;\n    const updatedTags = this.state.editTags;\n    updatedPost.text = updatedText;\n    updatedPost.tags = updatedTags;\n    let res = await request.updatePost(updatedPost);\n    if(res.success){\n      this.props.updatePost(res.post, () => {\n        this.setState({\n          editing: false\n        })\n      });\n    }\n    else{\n      this.setState({\n        error: res.error\n      })\n    }\n  }\n\n  async publishComment(){\n    const postId = this.props.postData._id;\n    const commentFormId = 'comment-form-' + postId;\n    const commentText = document.getElementById(commentFormId).value;\n    let comment = {\n      author: this.props.session.userId,\n      text: commentText\n    }\n    let req = await request.publishComment(comment, postId);\n    if(req.success){\n      let comment = req.data;\n      let postComments = this.state.postComments;\n      postComments.push(comment);\n      this.setState({\n        postComments\n      })\n      document.getElementById(commentFormId).value = \"\";\n    }\n    else{\n      //TODO - Tratamento de erro ao publicar comentário\n    }\n  }\n\n  async deleteComment(commentId){\n    let res = await request.deleteComment(commentId);\n    if(res.success){\n      let postComments = this.state.postComments;\n      for(let c = 0; c < postComments.length; c++){\n        if(postComments[c]._id === commentId){\n          postComments.splice(c, 1);\n          break;\n        }\n      }\n      this.setState({ postComments });\n      }\n    else{\n      console.log(res.error);\n      //TODO - Tratamento de erro ao deletar comentário\n    }\n    this.setState({ showConfirmModal: false })\n  }\n\n  updateComment(updatedComment, next){\n    let postComments = this.state.postComments;\n    for(let c = 0; c < postComments.length; c++){\n      if(postComments[c]._id === updatedComment._id){\n        postComments.splice(c, 1, updatedComment);\n        break;\n      }\n    }\n    this.setState({ postComments });\n    next();\n  }\n\n  renderError(){\n    return this.state.error ?\n    <Alert variant=\"danger\"> {this.state.error} </Alert>\n    :\n    null\n  }\n\n  getProfilePageUrl(){\n    return '/profile/' + this.props.postData.author.nickname;\n  }\n\n  renderEditForm(share = false){\n    const buttonsRow = <React.Fragment>\n      <Row className=\"justify-content-end\">\n        <Col xs=\"auto\">\n          <Button variant=\"secondary\" onClick={ this.uneditPost }>Cancel</Button>\n          {' '}\n          <Button variant=\"info\" onClick={ this.saveChanges }>Save</Button>\n        </Col>\n      </Row>\n    </React.Fragment>\n\n    return <React.Fragment>\n      <h4>Edit post</h4>\n      { this.renderEditTags() }\n      <Form.Control type=\"text\" placeholder=\"Tags\" \n      className=\"mb-2\" onKeyPress={ this.onTagPush } \n      id={ \"edit-postform-tags-input\" + this.props.postData._id }/>\n      <Form.Control as=\"textarea\" rows={share ? \"3\" : \"5\"} className=\"mb-2\"\n      id={ 'edit-post-form-' + this.props.postData._id } \n      placeholder={share ? \"Say something about it\" : \"\"}/>\n      { \n        this.renderMiniPost(this.props.postData.sharedFrom ? \n        this.props.postData.sharedFrom : this.props.postData) \n      }\n      { share ? null : buttonsRow }\n    </React.Fragment>\n  }\n\n  renderActions(){\n    return this.userIsAuthor() ?\n    <React.Fragment>\n      <Dropdown.Item href=\"#\" onClick={ this.editPost }>\n        <FontAwesomeIcon icon={faEdit} className=\"mr-2\" /> Edit\n      </Dropdown.Item>\n      <Dropdown.Item href=\"#\" onClick={ () => this.showConfirmModal(\n        'Delete post',\n        'Are you sure you want to delete this post?',\n        'Delete',\n        this.deletePost\n      )}>\n        <FontAwesomeIcon icon={faTrashAlt} className=\"mr-2\" /> Delete\n      </Dropdown.Item>\n    </React.Fragment>\n    :\n    <Dropdown.Item href=\"#\" onclick=\"event.preventDefault()\" onClick={ this.hidePost }>\n      <FontAwesomeIcon icon={faMinusSquare} className=\"mr-2\" /> Hide this\n    </Dropdown.Item>\n  }\n\n  renderPostPhoto(img){\n    return img ?\n    <Image src={request.resolveImageUrl(img)} fluid/>\n    : null;\n  }\n\n  renderComments(){\n    if(this.state.showComments){\n      let comments = [];\n      this.state.postComments.forEach(comment => {\n        comments.push(\n          <PostComment commentData={ comment } \n          deleteComment={ () => this.showConfirmModal(\n            'Delete comment',\n            'Are you sure you want to delete this comment?',\n            'Delete',\n            () => this.deleteComment(comment._id)\n          )}\n          updateComment={this.updateComment}/>\n        );\n      })\n      return <React.Fragment>\n        <Container fluid>\n          { comments.length ? comments : <Alert variant=\"secondary\">No comments yet</Alert> }\n          <CommentForm postId={this.props.postData._id} \n          publishComment={this.publishComment} \n          hideComments={this.toggleComments}/>\n        </Container>\n      </React.Fragment>\n    }\n    else{\n      return null;\n    }\n  }\n\n  async toggleComments(){\n    if(!this.state.postComments.length){\n      let req = await request.getPostComments(this.props.postData._id);\n      if(req.success){\n        this.setState({\n          postComments: req.data\n        });\n      }\n      else{\n        console.log(req.error)\n        //TODO - Exibir erro de carregamento dos comentários\n      }\n    }\n    this.setState({\n      showComments: !this.state.showComments\n    })\n  }\n\n  toggleShareModal(){\n    this.setState({\n      showShareModal: !this.state.showShareModal\n    })\n  }\n\n  renderMiniPost(miniPostData){\n    return <Media className=\"my-minipost\">\n        <ProfilePicture nickname={miniPostData.author.nickname}\n          pictureId={miniPostData.author.profilePicture} \n          size=\"small\" />\n        <Media.Body>\n          { this.renderPostTags(miniPostData.tags) }\n          <p className=\"my-post-text\">\n            { miniPostData.text }\n          </p>\n          { this.renderPostPhoto(miniPostData.img) }\n        </Media.Body>\n      </Media>\n  }\n\n  closeConfirmModal(){\n    this.setState({\n      showConfirmModal: false\n    })\n  }\n\n  showConfirmModal(title, message, action, funct){\n    this.setState({\n      showConfirmModal: true,\n      confirmModalData: {\n        title,\n        message,\n        action,\n        funct\n      }\n    })\n  }\n\n  renderLikeds(props){\n    let likes = [];\n    const likesQty = this.props.postData.likedBy.length;\n    for(let i = 0; i < 20; i++){\n      let user = this.props.postData.likedBy[i];\n      if(i < likesQty){\n        likes.push(\n          <div>{user.nickname}</div>\n        )\n      }\n    }\n    if(likesQty > 20){\n      likes.push(<div>{`...and ${likesQty-20} more`}</div>);\n    }\n    return <Tooltip {...props}>\n      { likes }\n    </Tooltip>\n  }\n\n  renderUnlikeds(props){\n    let unlikes = [];\n    const unlikesQty = this.props.postData.unlikedBy.length;\n    for(let i = 0; i < 20; i++){\n      let user = this.props.postData.unlikedBy[i];\n      if(i < unlikesQty){\n        unlikes.push(\n          <div>{user.nickname}</div>\n        )\n      }\n    }\n    if(unlikesQty > 20){\n      unlikes.push(<div>{`...and ${unlikesQty-20} more`}</div>);\n    }\n    return <Tooltip {...props}>\n      { unlikes }\n    </Tooltip>\n  }\n\n  renderConfirmModal(title, message, action, funct = this.closeConfirmModal){\n    return <React.Fragment>\n      <Modal show={this.state.showConfirmModal} onHide={this.closeConfirmModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { message }\n        </Modal.Body>\n        <Modal.Footer>\n          <Row className=\"justify-content-between\">\n            <Col md={3} className=\"pl-sm-0 mb-3\">\n              <Button variant=\"secondary\" onClick={this.closeConfirmModal} block>\n                Cancel\n              </Button>\n            </Col>\n            <Col md={3} className=\"pr-sm-0\">\n              <Button variant=\"primary\" onClick={funct} block>\n                {action}\n              </Button>\n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  }\n\n  renderShareModal(){\n    return <React.Fragment>\n      <Modal show={this.state.showShareModal} onHide={this.toggleShareModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Share post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { this.renderEditForm(true) }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.toggleShareModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.sharePost}>\n            Share\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  }\n\n  render() {\n    return (\n      <Container fluid className=\"mb-3 my-post\" key={this.props.postData._id}>\n        { this.renderError() }\n        { this.state.editing ?\n        this.renderEditForm()\n        :\n        <React.Fragment>\n          <Media>\n            <ProfilePicture nickname={this.props.postData.author.nickname}\n              pictureId={this.props.postData.author.profilePicture} size=\"medium\" tabletDesktopOnly/>\n            <Media.Body>\n              <Row className=\"justify-content-end mb-2\">\n                <Col className=\"d-flex align-items-start flex-row\">\n                  <ProfilePicture nickname={this.props.postData.author.nickname}\n                    pictureId={this.props.postData.author.profilePicture}\n                    size=\"medium\" mobileOnly/>\n                  <div>\n                    <a href={ this.getProfilePageUrl() } className=\"my-post-author-name\">\n                      <strong>{ this.props.postData.author.nickname }</strong>\n                    </a>\n                    { \n                      this.props.postData.sharedFrom ? \n                      <React.Fragment>\n                        {' '}shared from{' '} \n                        <a href={\"/profile/\" + this.props.postData.author.nickname} \n                        className=\"my-post-author-name\">\n                          <strong>{ this.props.postData.sharedFrom.author.nickname }</strong>\n                        </a>\n                      </React.Fragment>\n                      : null \n                    }\n                    <div className=\"my-post-date\">\n                      { this.renderPostDate() }\n                    </div>\n                  </div>\n                </Col>\n                <Col xs=\"auto\">\n                  <Dropdown className=\"my-post-options\" alignRight>\n                    {' '}\n                    <Dropdown.Toggle variant=\"outline-dark\" \n                    className=\"my-post-options-button\"\n                    id={\"my-post-options-button-\" + this.props.postData._id}>\n                      <FontAwesomeIcon icon={faEllipsisH} />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      { this.renderActions() }\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n              </Row>\n              <Row className=\"my-post-content\">\n              <Col>\n                { this.renderPostTags(this.props.postData.tags) }\n                <p className=\"my-post-text\">\n                  { this.props.postData.text }\n                </p>\n                { \n                  this.props.postData.sharedFrom ? \n                  this.renderMiniPost(this.props.postData.sharedFrom) : \n                  this.renderPostPhoto(this.props.postData.img) \n                }\n              </Col>\n              </Row>\n              { this.renderComments() }\n            </Media.Body>\n          </Media>\n          <Row className=\"justify-content-end my-post-buttons\">\n            <Col xs=\"auto\">\n              <OverlayTrigger\n              placement=\"right\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={this.renderLikeds}>\n                <Button onClick={ this.likeClick }\n                variant={this.liked() ? \"dark\" : \"outline-dark\"} >\n                  <FontAwesomeIcon icon={faThumbsUp} />\n                  { this.renderLikesQty() }\n                </Button>\n              </OverlayTrigger>\n              {' '}\n              <OverlayTrigger\n              placement=\"right\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={this.renderUnlikeds}>\n                <Button onClick={ this.unlikeClick }\n                variant={this.unliked() ? \"dark\" : \"outline-dark\"} >\n                  <FontAwesomeIcon icon={faThumbsDown} />\n                  { this.renderUnlikesQty() }\n                </Button>\n              </OverlayTrigger>\n              {' '}\n              <Button variant=\"outline-dark\" onClick={ this.toggleComments }>\n                <FontAwesomeIcon icon={faComment} />\n                  { ' ' + this.props.postData.commentsTotal }\n              </Button>{' '}\n              <Button variant=\"outline-dark\" onClick={ this.toggleShareModal }>\n                <FontAwesomeIcon icon={faShare} />\n              </Button>\n            </Col>\n          </Row>\n          {\n            this.renderShareModal()\n          }\n          {\n            this.renderConfirmModal(\n              this.state.confirmModalData.title,\n              this.state.confirmModalData.message,\n              this.state.confirmModalData.action,\n              this.state.confirmModalData.funct,\n            )\n          }\n        </React.Fragment>\n        }\n      </Container>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Post);","import React, { Component } from 'react';\nimport request from '../services/request.js';\nimport { connect } from 'react-redux';\n\nimport sanitize from '../helpers/stringSanitizer.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage, faWindowClose, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/esm/Row';\nimport Col from 'react-bootstrap/esm/Col';\nimport Button from 'react-bootstrap/esm/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Image from 'react-bootstrap/Image';\nimport Tag from '../components/Tag';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass PostForm extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      posting: false,   //Exibe um spinner de posting enquanto estiver postando\n      error: false,   //Exibe uma mensagem de erro, caso tenha\n      warning: false, //Exibe uma mensagem de warning, caso tenha\n      message: false,  //Exibe uma mensagem de sucesso, caso tenha\n      showPhotoForm: false,\n      hasPhoto: false,\n      photoSrc: null,\n      tags: []\n    }\n    this.publishPost = this.publishPost.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.renderWarningMessage = this.renderWarningMessage.bind(this);\n    this.renderMessage = this.renderMessage.bind(this);\n    this.onTagPush = this.onTagPush.bind(this);\n    this.renderTags = this.renderTags.bind(this);\n    this.removeTag = this.removeTag.bind(this);\n    this.handlePhotoPut = this.handlePhotoPut.bind(this);\n    this.removePhoto = this.removePhoto.bind(this);\n    this.togglePhotoForm = this.togglePhotoForm.bind(this);\n    this.renderPhotoButton = this.renderPhotoButton.bind(this);\n  }\n\n  /**\n   * Faz uma requisição ao servidor para publicar o post.\n   */\n  async publishPost(){\n    //Ativa o spinner:\n    this.setState({\n      posting: true\n    })\n    //Constrói o objeto do post:\n    let post = this.buildPost();\n    //Faz a requisição pro servidor:\n    let req = await request.publishPost(post, this.state.hasPhoto);\n    if(req.success){\n      this.props.appendPost(req.post);   //Insere o post recém-criado no feed\n      this.setState({\n        message: 'Your post was successfully published.'\n      });\n      if(this.state.showPhotoForm){\n        this.togglePhotoForm();\n      }\n      document.getElementById('postText').value = '';   //Limpa o postForm\n    }\n    //Caso tenha ocorrido algum erro:\n    else{\n      //Exibe o erro como mensagem de warning:\n      this.setState({\n        warning: req.error.data\n      })\n    }\n  }\n\n  /**\n   * Acessa os inputs do form e retorna um objeto de post construído\n   * pronto para ser enviado ao servidor.\n   */\n  buildPost(){\n    const text = document.getElementById('postText').value;\n    const author = this.props.session.userId;\n    const tags = this.state.tags;\n    return {\n      text,\n      author,\n      tags\n    }\n  }\n\n  togglePhotoForm(){\n    if(this.state.hasPhoto){\n      this.setState({\n        hasPhoto: false\n      })\n    }\n    this.setState({\n      showPhotoForm: !this.state.showPhotoForm\n    })\n  }\n\n  async handlePhotoPut(){\n    let req = await request.setTmpImage();\n    if(req.success){\n      let imgData = req.data;\n      let imgSrc = request.getTmpImageUrl(imgData.name, imgData.ext);\n      this.setState({\n        hasPhoto: true,\n        photoSrc: imgSrc\n      })\n    }\n    else{\n      this.setState({\n        error: req.error\n      })\n    }\n  }\n\n  removePhoto(){\n    this.setState({\n      hasPhoto: false\n    })\n    let photoInput = document.getElementById('post-file');\n    photoInput.value = null;\n  }\n\n  /**\n   * Renderiza a mensagem de erro, caso haja.\n   */\n  renderErrorMessage(){\n    return (\n      this.state.error ?\n      <Alert variant=\"danger\" key=\"errorMessage\">\n        {this.state.error}\n      </Alert>\n      :\n      null\n    )\n  }\n\n  /**\n   * Renderiza a mensagem de warning, caso haja.\n   */\n  renderWarningMessage(){\n    return (\n      this.state.warning ?\n      <Alert variant=\"warning\" key=\"warningMessage\">\n        {this.state.warning}\n      </Alert>\n      :\n      null\n    )\n  }\n\n  /**\n   * Renderiza a mensagem de sucesso, caso haja.\n   */\n  renderMessage(){\n    return (\n      this.state.message ?\n      <Alert variant=\"primary\" key=\"message\">\n        {this.state.message}\n      </Alert>\n      :\n      null\n    )\n  }\n\n  onTagPush(target){\n    if(target.charCode === 13){\n      let tagInput = document.getElementById('my-postform-tags-input');\n      let tagContent = tagInput.value;\n      tagContent = sanitize(tagContent);\n      let tagExists = this.state.tags.indexOf(tagContent) >= 0;\n      if(tagContent && !tagExists){\n        let tags = this.state.tags;\n        tags.push(tagContent);\n        this.setState({ tags });\n        tagInput.value = '';\n      }\n    }\n  }\n\n  removeTag(tagContent){\n    let tagIndex = this.state.tags.indexOf(tagContent);\n    this.state.tags.splice(tagIndex, 1);\n  }\n\n  renderTags(){\n    let tags = [];\n    this.state.tags.forEach(tag => {\n      tags.push(<Tag text={tag} key={tag} variant=\"info\" removeTag={this.removeTag}/>)\n    })\n    return tags.length ? \n      <Form.Group className=\"my-postform-tags-container\">\n        { tags }\n      </Form.Group>\n      : null;\n  }\n\n  renderPostPhoto(){\n    return this.state.hasPhoto ?\n    <React.Fragment>\n      <div className=\"my-post-form-photo\">\n        <Image src={this.state.photoSrc} fluid/>\n        <div className=\"my-post-form-photo-wall\">\n          <Button variant=\"light\" onClick={this.removePhoto} className=\"mr-2 mt-2\">\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n        </div>\n      </div>\n    </React.Fragment>\n    : null\n  }\n\n  renderPhotoForm(){\n    return this.state.showPhotoForm ?\n      <Form.Group>\n        <Form.File\n          className=\"position-relative\"\n          name=\"file\"\n          onChange={this.handlePhotoPut}\n          id=\"post-file\"\n          feedbackTooltip\n        />\n      </Form.Group>\n      : null\n  }\n\n  renderPhotoButton(){\n    return this.state.showPhotoForm ?\n      <Button variant=\"secondary\" onClick={this.togglePhotoForm} block>\n        Cancel\n      </Button>\n      :\n      <Button variant=\"success\" onClick={this.togglePhotoForm} block>\n        <FontAwesomeIcon icon={faImage} />{' '}\n        Photo\n      </Button>\n  }\n\n  render() {\n    if(this.posting){\n      return (\n        <Row className=\"justify-content-center\">\n          <Col xs=\"auto\">\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Posting...</span>\n            </Spinner>\n          </Col>\n        </Row>\n      )\n    }\n    else{\n      const message = this.renderMessage();\n      const error = this.renderErrorMessage();\n      const warning = this.renderWarningMessage();\n      return <React.Fragment>\n        {message}\n        {error}\n        {warning}\n        <Form className=\"my-postform\" onSubmit={(e) => e.preventDefault()}>\n          { this.renderTags() }\n          <Form.Group controlId=\"postText\">\n            <Form.Control as=\"textarea\" rows=\"5\"\n            placeholder={`Whats's your take right now, ${this.props.user.nickname}?`} />\n          </Form.Group>\n          { this.renderPostPhoto() }\n          { this.renderPhotoForm() }\n          <Form.Group>\n            <Row className=\"justify-content-end\">\n              <Col md={8} lg={9} className=\"my-tags-input pr-sm-0\">\n                <Form.Control type=\"text\" placeholder=\"Tags\" \n                onKeyPress={this.onTagPush} id=\"my-postform-tags-input\"/>\n              </Col>\n              <Col md={4} lg={3}>\n                  { this.renderPhotoButton() }\n              </Col>\n            </Row>\n          </Form.Group>\n          <Form.Group>\n            <Button variant=\"info\" block onClick={this.publishPost}>\n              Publish\n            </Button>\n          </Form.Group>\n        </Form>\n      </React.Fragment>\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(PostForm);","import React, { Component } from 'react';\nimport request from '../services/request.js';\nimport { connect } from 'react-redux';\n\nimport ListGroup from 'react-bootstrap/esm/ListGroup';\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/esm/Row';\nimport ProfilePicture from './ProfilePicture.js';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass FollowingFeed extends Component {\n  \n  constructor(props){\n    super(props);\n    this.renderFollowedUsers = this.renderFollowedUsers.bind(this);\n  }\n\n  renderFollowedUsers(){\n    let following = [];\n    this.props.user.following.forEach(followedUser => {\n      following.push(\n        <ListGroup.Item key={followedUser.nickName} className=\"pr-1 pr-md-2 pl-r pl-md-2\">\n          <ProfilePicture nickname={followedUser.nickname}\n            pictureId={followedUser.profilePicture} \n            size=\"small\" />\n          <a href={\"/profile/\" + followedUser.nickname} className=\"my-post-author-name\">\n            <strong>{followedUser.nickname}</strong>\n          </a>\n        </ListGroup.Item>\n      )\n    })\n    return following;\n  }\n\n  render() {\n    return (\n      <div className=\"my-following-feed\">\n        <p className=\"text-center mt-2\">\n          { this.props.user.following.length ? \n          'People you follow ' : \"You're not following anybody yet \" }\n        </p>\n        <ListGroup variant=\"flush\">\n          { this.renderFollowedUsers() }\n        </ListGroup>\n        <a href=\"/follows\" className=\"see-all w-100 text-center mb-1\">See all</a>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(FollowingFeed);","import React from 'react';\nimport Cookies from 'js-cookie';\nimport request from '../services/request.js';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MydriaPage, mapStateToProps, mapDispatchToProps } from './base';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport Topbar from '../components/Topbar';\nimport Post from '../components/Post';\nimport PostForm from '../components/PostForm';\nimport FollowingFeed from '../components/FollowingFeed';\n\nclass FeedPage extends MydriaPage {\n  constructor(props){\n    super(props);\n    this.state = {\n      posts: [],\n      searchString: '',\n      searchResult: false,    //Indica se está sendo exibido o resultado de uma busca\n      sessionExpired: false,  //Renderiza um objeto <Redirect> para voltar à página de login\n      loadingPosts: true    //Renderiza um spinner enquanto posts estiverem sendo carregados\n    }\n    this.loadPageData = this.loadPageData.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.appendPost = this.appendPost.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.getDarkTheme = this.getDarkTheme.bind(this);\n  }\n\n  /**\n   * Carrega alguns posts para exibir no feed do usuário.\n   */\n  async loadPageData(){\n    let searchQuery = this.props.location.search;\n    if(searchQuery){\n      let params = (new URL(document.location)).searchParams;\n      let searchText = params.get(\"search\");\n      let req = await request.search(searchQuery);\n      if(req.success){\n        this.setState({\n          searchString: searchText,\n          searchResult: true,\n          loadingPosts: false,\n          posts: req.data\n        })\n      }\n      else {\n        //TODO - Melhor tratamento de erro durante a request de busca\n        this.setState({\n          loadingPosts: false\n        })\n      }\n      \n    }\n    else {\n      const posts = await request.loadSomePosts();\n      this.setState({\n        loadingPosts: false,\n        posts\n      })\n    }\n  }\n\n  appendPost(post){\n    let posts = this.state.posts;\n    posts.unshift(post);\n    this.setState({\n      posts\n    })\n  }\n\n  /**\n   * Atualiza os dados de um post sendo exibido na página.\n   * @param {*} post Post com os dados atualizados\n   */\n  updatePost(post, callback){\n    let posts = [...this.state.posts];\n    //Procura o post na lista de posts do feed:\n    for(let p = 0; p < posts.length; p++){\n      let existingPost = posts[p];\n      if(existingPost._id === post._id){\n        posts.splice(p, 1, post);\n        break;\n      }\n    }\n    //Atualiza a lista de posts do feed:\n    this.setState({ posts });\n    callback();\n  }\n\n  deletePost(postId){\n    let posts = [...this.state.posts];\n    //Procura o post na lista de posts do feed:\n    for(let p = 0; p < posts.length; p++){\n      let existingPost = posts[p];\n      if(existingPost._id === postId){\n        posts.splice(p, 1);\n        break;\n      }\n    }\n    //Atualiza a lista de posts do feed:\n    this.setState({ posts });\n  }\n\n  renderPosts(){\n    let posts = [];\n    if(this.state.posts.length){\n      this.state.posts.forEach(post => {\n        posts.push(\n        <Post postData={post} \n        updatePost={this.updatePost} \n        deletePost={this.deletePost}\n        appendPost={this.appendPost}\n        key={post._id} \n        />)\n      })\n    }\n    else{\n      posts = <h6>No results found.</h6>\n    }\n    return posts;\n  }\n\n  render(){\n    //Caso a session tenha expirado durante o runtime, redireciona:\n    if(this.state.sessionExpired){\n      return <Redirect to=\"/\" />\n    }\n    //Caso ainda esteja carregando os dados do usuário do servidor:\n    else if(this.state.loadingPosts){\n      return <span></span>;\n    }\n    //Caso contrário, renderiza a página normalmente:\n    else{\n      return (\n        <Container fluid className={\"my-no-padding\" + this.getDarkTheme() }>\n          <Topbar logout={this.logout} toggleDarkTheme={this.toggleDarkTheme}/>\n          <Container className={this.getPageClasses()}>\n            <Row>\n              <Col lg={2} className=\"d-none d-lg-flex pr-0 pl-0\">\n                <div className=\"my-ads pl-2\">Ads</div>\n              </Col>\n              <Col xs={12} sm={8} lg={7} className=\"my-content-col order-md-2 order-lg-1 pt-1\">\n                { this.state.searchResult ? \n                <h4 className=\"mb-3\">Search results for '{this.state.searchString}':</h4>\n                : <PostForm appendPost={this.appendPost} />}\n                { this.renderPosts() }\n              </Col>\n              <Col sm={4} lg={3} className=\"d-none d-sm-block pr-0 pr-lg-3 h-100 order-md-1 order-lg-2\">\n                <FollowingFeed />\n              </Col>\n            </Row>\n          </Container>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedPage);","import React, { Component } from 'react';\nimport request from '../services/request.js';\nimport { connect } from 'react-redux';\n\nimport sanitize from '../helpers/stringSanitizer.js';\nimport requestService from '../services/request.js';\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Alert from 'react-bootstrap/Alert';\nimport Modal from 'react-bootstrap/Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMapMarkerAlt,\n  faUsers,\n  faCamera\n} from '@fortawesome/free-solid-svg-icons';\nimport ProfilePicture from './ProfilePicture.js';\n\nimport { mapDispatchToProps } from '../pages/base.js';\n\nfunction mapStateToProps(state) {\n  return { ...state }\n}\n\nexport class UserProfileData extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditForm: false,\n      showProfilePictureForm: false,\n      showErrorMessage: false,\n      showProfilePictureModal: false\n    }\n    this.renderBio = this.renderBio.bind(this);\n    this.renderLocation = this.renderLocation.bind(this);\n    this.renderFollowButton = this.renderFollowButton.bind(this);\n    this.ownProfile = this.ownProfile.bind(this);\n    this.toggleEditForm = this.toggleEditForm.bind(this);\n    this.buildUserData = this.buildUserData.bind(this);\n    this.saveProfileData = this.saveProfileData.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.toggleProfilePictureForm = this.toggleProfilePictureForm.bind(this);\n    this.uploadProfilePicture = this.uploadProfilePicture.bind(this);\n    this.openProfilePictureModal = this.openProfilePictureModal.bind(this);\n    this.closeProfilePictureModal = this.closeProfilePictureModal.bind(this);\n    this.renderProfilePictureModal = this.renderProfilePictureModal.bind(this);\n  }\n\n  ownProfile() {\n    return this.props.userData.nickname === this.props.user.nickname;\n  }\n\n  buildUserData() {\n    const bio = sanitize(document.getElementById('formBasicBio').value);\n    const country = sanitize(document.getElementById('formBasicCountry').value);\n    const city = sanitize(document.getElementById('formBasicCity').value);\n    const userData = {\n      ...this.state.userData,\n      bio,\n      country,\n      city\n    }\n    return userData;\n  }\n\n  async saveProfileData() {\n    const userData = this.buildUserData();\n    let res = await requestService.updateUserData(this.props.user.nickname, userData);\n    if (res.success) {\n      this.props.updateUserData(userData);\n      this.setState({\n        showEditForm: false\n      })\n    }\n    else {\n      this.setState({\n        showErrorMessage: `There was an error while trying to update your profile data. \n        Please wait a few moments and try again.`\n      })\n    }\n  }\n\n  renderErrorMessage() {\n    return (\n      this.state.showErrorMessage ?\n        <Card.Body>\n          <Alert variant=\"danger\">\n            {this.state.showErrorMessage}\n          </Alert>\n        </Card.Body>\n        : null\n    )\n  }\n\n  renderBio() {\n    return (\n      this.props.userData.bio ?\n        <Card.Text className=\"my-profile-data-bio\">\n          {this.props.userData.bio}\n        </Card.Text>\n        : null\n    )\n  }\n\n  renderLocation() {\n    return (\n      this.props.userData.country ?\n        <Card.Text>\n          <FontAwesomeIcon icon={faMapMarkerAlt} className=\"my-profile-data-icon\" />{' '}\n          {this.props.userData.city ?\n            this.props.userData.city + ', ' : null}\n          {this.props.userData.country}\n        </Card.Text>\n        : null\n    )\n  }\n\n  renderFollowButton() {\n    if (!this.ownProfile()) {\n      return (\n        this.props.following ?\n          <Button variant=\"success\" onClick={this.props.unfollowClick} block>\n            Unfollow\n        </Button>\n          :\n          <Button variant=\"primary\" onClick={this.props.followClick} block>\n            Follow\n        </Button>\n      )\n    }\n    else {\n      return null;\n    }\n  }\n\n  toggleEditForm() {\n    this.setState({\n      showEditForm: !this.state.showEditForm,\n      showErrorMessage: false\n    })\n    if (!this.state.showEditForm) {\n      //Gambiarra pra preencher os inputs só após eles terem sido renderizados:\n      setTimeout(() => {\n        document.getElementById('formBasicBio').value = this.props.userData.bio;\n        document.getElementById('formBasicCountry').value = this.props.userData.country;\n        document.getElementById('formBasicCity').value = this.props.userData.city;\n      }, 50)\n    }\n  }\n\n  toggleProfilePictureForm() {\n    this.setState({\n      showProfilePictureForm: !this.state.showProfilePictureForm\n    })\n  }\n\n  async uploadProfilePicture() {\n    let res = await requestService.uploadProfilePicture();\n    if(res.success){\n      window.location.reload();\n    }\n    else{\n      this.setState({\n        showErrorMessage: `There was an error while trying to update your profile picture. \n        Please wait a few moments and try again.`\n      })\n    }\n  }\n\n  openProfilePictureModal(){\n    this.setState({\n      showProfilePictureModal: true\n    })\n  }\n\n  closeProfilePictureModal(){\n    this.setState({\n      showProfilePictureModal: false\n    })\n  }\n\n  renderProfilePictureModal(){\n    return <React.Fragment>\n      <Modal show={this.state.showProfilePictureModal} onHide={this.closeProfilePictureModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{' '}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ProfilePicture nickname={this.props.userData.nickname} noMargin\n            pictureId={this.props.userData.profilePicture} size=\"max\" \n            handleClick={()=>{}} square/>\n        </Modal.Body>\n      </Modal>\n    </React.Fragment>\n  }\n\n  renderProfilePictureForm() {\n    return this.state.showProfilePictureForm ?\n      <React.Fragment>\n        <input type=\"file\" id=\"file\" name=\"file\" className=\"ml-3 mr-3\" />\n        <Row className=\"justify-content-between pl-3 pr-3\">\n          <Col xs={6}>\n            <Button variant=\"secondary\" block onClick={this.toggleProfilePictureForm}>\n              Cancel\n            </Button>\n          </Col>\n          <Col xs={6}>\n            <Button variant=\"primary\" block onClick={this.uploadProfilePicture}>\n              Upload\n            </Button>\n          </Col>\n        </Row>\n      </React.Fragment>\n      : null\n  }\n\n  renderEditForm() {\n    return <React.Fragment>\n      <Card.Body>\n        <Form>\n          <Form.Group controlId=\"formBasicBio\">\n            <Form.Label>Bio</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCountry\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Country\" />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCity\">\n            <Form.Label>City</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"City\" />\n          </Form.Group>\n        </Form>\n        <Row className=\"justify-content-between\">\n          <Col xs={6}>\n            <Button variant=\"secondary\" block onClick={this.toggleEditForm}>Cancel</Button>\n          </Col>\n          <Col xs={6}>\n            <Button variant=\"primary\" block onClick={this.saveProfileData}>Save</Button>\n          </Col>\n        </Row>\n      </Card.Body>\n    </React.Fragment>\n  }\n\n  renderInfo() {\n    return <React.Fragment>\n      <Card.Body>\n        <Card.Title className=\"my-profile-data-title\">\n          {this.props.userData.nickname}\n        </Card.Title>\n        {this.renderBio()}\n        {this.renderLocation()}\n        <Card.Text>\n          <FontAwesomeIcon icon={faUsers} className=\"my-profile-data-icon\" />{' '}\n          {this.props.userData.followedBy.length + ' follower' +\n            (this.props.userData.followedBy.length === 1 ? '' : 's')}\n        </Card.Text>\n        {this.renderFollowButton()}\n      </Card.Body>\n      {this.ownProfile() ?\n        <Button variant=\"link\" onClick={this.toggleEditForm}>Edit</Button> : null}\n    </React.Fragment>\n  }\n\n  render() {\n    return <React.Fragment>\n      <Card className=\"mb-3 my-profile-data\">\n        <div className=\"my-profile-picture-wrapper\">\n          <ProfilePicture nickname={this.props.userData.nickname} noMargin\n            pictureId={this.props.userData.profilePicture} size=\"max\" \n            handleClick={this.openProfilePictureModal}/>\n          {this.renderProfilePictureForm()}\n        </div>\n        {this.renderErrorMessage()}\n        <div className=\"my-profile-picture-button-wall\">\n          <Button variant=\"success\" onClick={this.toggleProfilePictureForm}\n            className=\"my-profile-picture-change\">\n            <FontAwesomeIcon icon={faCamera} />\n          </Button>\n        </div>\n        {this.state.showEditForm ? this.renderEditForm() : this.renderInfo()}\n      </Card>\n      { this.renderProfilePictureModal() }\n    </React.Fragment>\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfileData);","import React from 'react';\nimport Cookies from 'js-cookie';\nimport request from '../services/request.js';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MydriaPage, mapDispatchToProps, mapStateToProps } from './base';\nimport { setUserFollowing } from '../actions';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Alert from 'react-bootstrap/Alert';\n\nimport Topbar from '../components/Topbar';\nimport Post from '../components/Post';\nimport PostForm from '../components/PostForm';\nimport UserProfileData from '../components/UserProfileData';\n\nimport NotFound from './NotFound';\n\nclass ProfilePage extends MydriaPage {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      posts: [],\n      userData: {},\n      following: false,\n      loadPostsError: false,  //Renderiza mensagem de erro em caso de falha ao carregar os posts\n      notFound: true,  //Redireciona pra página de 404 caso o usuário não exista\n      loadingUserData: true,  //Deixa a tela branca enquanto os dados do usuário estiverem sendo carregados\n      loadingPosts: true    //Renderiza um spinner enquanto posts estiverem sendo carregados\n    }\n    this.ownProfile = this.ownProfile.bind(this);\n    this.loadPageData = this.loadPageData.bind(this);\n    this.followClick = this.followClick.bind(this);\n    this.unfollowClick = this.unfollowClick.bind(this);\n    this.renderPosts = this.renderPosts.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.isFollowing = this.isFollowing.bind(this);\n    this.appendPost = this.appendPost.bind(this);\n    this.updateUserData = this.updateUserData.bind(this);\n    this.getDarkTheme = this.getDarkTheme.bind(this);\n  }\n\n  ownProfile(){\n    return this.state.userData.nickname === this.props.user.nickname;\n  }\n\n  isFollowing(){\n    //Pega a lista de pessoas que você segue:\n    const following = this.props.user.following;\n    //Pega o id do perfil:\n    const profileId = this.state.userData._id;\n    //Verifica se o id do perfil está na lista de pessoas que você segue:\n    for(let i = 0; i < following.length; i++){\n      let followed = following[i];\n      if(followed === profileId){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  async loadPageData(){\n    const { nickname } = this.props.match.params;\n    const userReq = await request.getUserData(nickname);\n    this.setState({\n      userData: userReq.success ? userReq.userData : null,\n      notFound: !userReq.success,    //Se acou o usuário, então notFound = false\n      loadingUserData: false\n    })\n    //Se o usuário foi encontrado, carrega os posts:\n    if(userReq.success){\n      const userId = userReq.userData._id;\n      let postsReq = await request.getUserPosts(userId);\n      if(postsReq.success){\n        this.setState({\n          posts: postsReq.posts,\n          loadingPosts: false,\n          following: this.isFollowing()\n        })\n      }\n      else{\n        //Caso haja falha na requisição\n        this.setState({\n          loadingPosts: false,\n          loadPostsError: true\n        })\n      }\n    }\n  }\n\n  async followClick(){\n    let req = await request.followUser(this.state.userData._id);\n    if(req.success){\n      let following = this.props.user.following;\n      let followedBy = this.state.userData.followedBy;\n      const profileId = this.state.userData._id;\n      const userId = this.props.session.id;\n      following.push(profileId);\n      followedBy.push(userId);\n      this.props.setUserFollowing(following);\n      this.setState({\n        following: this.isFollowing(),\n        userData: {...this.state.userData, followedBy}\n      })\n    }\n  }\n\n  async unfollowClick(){\n    let req = await request.unfollowUser(this.state.userData._id);\n    if(req.success){\n      let following = this.props.user.following;\n      let followedBy = this.state.userData.followedBy;\n      const profileId = this.state.userData._id;\n      const userId = this.props.session.id;\n      let profileIndex = following.indexOf(profileId);\n      let userIndex = followedBy.indexOf(userId);\n      if(profileIndex >= 0){\n        following.splice(profileIndex, 1);\n      }\n      if(userIndex >= 0){\n        followedBy.splice(userIndex, 1);\n      }\n      this.props.setUserFollowing(following);\n      this.setState({\n        following: this.isFollowing(),\n        userData: {...this.state.userData, followedBy}\n      })\n    }\n  }\n\n  updateUserData(userData){\n    this.setState({\n      userData: {\n        ...this.state.userData,\n        ...userData\n      }\n    })\n  }\n\n  /**\n   * Atualiza os dados de um post sendo exibido na página.\n   * @param {*} post Post com os dados atualizados\n   */\n  updatePost(post, callback){\n    let posts = [...this.state.posts];\n    //Procura o post na lista de posts do feed:\n    for(let p = 0; p < posts.length; p++){\n      let existingPost = posts[p];\n      if(existingPost._id === post._id){\n        posts.splice(p, 1, post);\n        break;\n      }\n    }\n    //Atualiza a lista de posts do feed:\n    this.setState({ posts });\n    if(typeof callback === 'function'){\n      callback();\n    }\n  }\n\n  deletePost(postId){\n    let posts = [...this.state.posts];\n    //Procura o post na lista de posts do feed:\n    for(let p = 0; p < posts.length; p++){\n      let existingPost = posts[p];\n      if(existingPost._id === postId){\n        posts.splice(p, 1);\n        break;\n      }\n    }\n    //Atualiza a lista de posts do feed:\n    this.setState({ posts });\n  }\n\n  appendPost(post){\n    let posts = this.state.posts;\n    posts.unshift(post);\n    this.setState({\n      posts\n    })\n  }\n\n  renderPosts(){\n    if(this.state.loadingPosts){\n      return (\n        <Row className=\"justify-content-center\">\n          <Col xs=\"auto\">\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          </Col>\n        </Row>\n      )\n    }\n    else if(this.state.loadPostsError){\n      return <Alert className=\"justify-content-center\" variant=\"danger\">\n        There was an error while loading the posts 🤦‍♂️\n      </Alert>\n    }\n    else{\n      let posts = [];\n      if(this.state.posts){\n        this.state.posts.forEach(post => {\n          posts.push(\n            <Post postData={post} \n            updatePost={this.updatePost} \n            deletePost={this.deletePost}\n            key={post._id} />\n          )\n        })\n      }\n    return posts.length ? posts : \n    <h3 className=\"ta-center\">No posts yet...</h3>;\n    }\n  }\n\n  renderPostForm(){\n    return this.ownProfile() ? <PostForm appendPost={this.appendPost} /> : null;\n  }\n\n  render(){\n    //Caso a session tenha expirado durante o runtime, redireciona:\n    if(this.state.sessionExpired){\n      return <Redirect to=\"/\" />\n    }\n    //Caso ainda esteja carregando os dados do usuário do servidor:\n    else if(this.state.loadingUserData){\n      return <span></span>;\n    }\n    //Caso o usuário não exista, renderiza a página 404:\n    else if(this.state.notFound){\n      return <NotFound />\n    }\n    //Caso contrário, renderiza a página normalmente:\n    else{\n      return <Container fluid className={\"my-no-padding\" + this.getDarkTheme()}>\n      <Topbar logout={this.logout} toggleDarkTheme={this.toggleDarkTheme}/>\n      <Container className={this.getPageClasses()}>\n        <Row>\n          <Col sm={4} lg={3}>\n            <UserProfileData \n            userData={this.state.userData} \n            following={this.state.following}\n            loading={this.state.loadingUserData} \n            followClick={this.followClick}\n            unfollowClick={this.unfollowClick} \n            updateUserData={this.updateUserData}/>\n          </Col>\n          <Col xs={12} sm={8} lg={7} className=\"my-content-col pl-sm-0 h-100\">\n            { this.renderPostForm() }\n            { this.renderPosts() }\n          </Col>\n          <Col lg={2} className=\"d-none d-lg-flex pr-0\">\n            <div className=\"my-ads pl-2\">Ads</div>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage)","import React from 'react';\nimport Cookies from 'js-cookie';\nimport request from '../services/request.js';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MydriaPage, mapStateToProps, mapDispatchToProps } from './base';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport Topbar from '../components/Topbar';\nimport Post from '../components/Post';\nimport PostForm from '../components/PostForm';\nimport FollowingFeed from '../components/FollowingFeed';\n\nclass PostPage extends MydriaPage {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      post: null,\n      loadingPost: true,\n      sessionExpired: false,  //Renderiza um objeto <Redirect> para voltar à página de login\n    }\n    this.loadPageData = this.loadPageData.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n  }\n\n  async loadPageData(){\n    const { postId } = this.props.match.params;\n    const req = await request.loadPostData(postId);\n    if(req.success){\n      this.setState({\n        postData: req.data,\n        loadingPost: false\n      })\n    }\n    else{\n      //TODO - Tratamento de erro ao carregar o post\n    }\n  }\n\n  /**\n   * Atualiza os dados de um post sendo exibido na página.\n   * @param {*} post Post com os dados atualizados\n   */\n  updatePost(post, callback){\n    let posts = [...this.state.posts];\n    //Procura o post na lista de posts do feed:\n    for(let p = 0; p < posts.length; p++){\n      let existingPost = posts[p];\n      if(existingPost._id === post._id){\n        posts.splice(p, 1, post);\n        break;\n      }\n    }\n    //Atualiza a lista de posts do feed:\n    this.setState({ posts });\n    if(typeof callback === 'function'){\n      callback();\n    }\n  }\n\n  deletePost(postId){\n    let posts = [...this.state.posts];\n    //Procura o post na lista de posts do feed:\n    for(let p = 0; p < posts.length; p++){\n      let existingPost = posts[p];\n      if(existingPost._id === postId){\n        posts.splice(p, 1);\n        break;\n      }\n    }\n    //Atualiza a lista de posts do feed:\n    this.setState({ posts });\n  }\n\n  render(){\n    //Caso a session tenha expirado durante o runtime, redireciona:\n    if(this.state.sessionExpired){\n      return <Redirect to=\"/\" />\n    }\n    //Caso ainda esteja carregando os dados do post do servidor:\n    else if(this.state.loadingPost){\n      return <span></span>;\n    }\n    //Caso contrário, renderiza a página normalmente:\n    else{\n      return (\n        <Container fluid className={\"my-no-padding\" + this.getDarkTheme() }>\n          <Topbar logout={this.logout} toggleDarkTheme={this.toggleDarkTheme}/>\n          <Container className={this.getPageClasses()}>\n            <Row>\n              <Col lg={2} className=\"d-none d-lg-flex pr-0 pl-0\">\n                <div className=\"my-ads pl-2\">Ads</div>\n              </Col>\n              <Col xs={12} sm={8} lg={7} className=\"my-content-col order-md-2 order-lg-1 pt-1\">\n                <Post postData={this.state.postData}\n                updatePost={this.updatePost} \n                deletePost={this.deletePost} />\n              </Col>\n              <Col sm={4} lg={3} className=\"d-none d-sm-block pr-0 pr-lg-3 h-100 order-md-1 order-lg-2\">\n                <FollowingFeed />\n              </Col>\n            </Row>\n          </Container>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage)","import React from 'react';\nimport Cookies from 'js-cookie';\nimport request from '../services/request.js';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MydriaPage, mapStateToProps, mapDispatchToProps } from './base';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport Topbar from '../components/Topbar';\nimport Notification from '../components/Notification';\nimport FollowingFeed from '../components/FollowingFeed';\n\nclass NotificationPage extends MydriaPage {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      notifications: [],\n      loadingNotifs: true,\n      sessionExpired: false,  //Renderiza um objeto <Redirect> para voltar à página de login\n    }\n    this.loadPageData = this.loadPageData.bind(this);\n    this.renderNotifications = this.renderNotifications.bind(this);\n  }\n\n  async loadPageData(){\n    let req = await request.getNotifications();\n    if(req.success){\n      this.setState({\n        loadingNotifs: false,\n        notifications: req.data\n      })\n    }\n    else{\n      //TODO - Tratamento de erro ao carregar as notificações\n    }\n  }\n\n  renderNotifications(){\n    let notifications = [];\n    //Insere até 8 notificações na lista\n    for(let n = 0; n < 8; n++){\n      if(this.state.notifications[n]){\n        let notification = this.state.notifications[n];\n        notifications.push(<Notification data={notification} key={notification._id} />)\n      }\n    }\n    return notifications.length ? notifications : 'No notifications to show.';\n  }\n\n  render(){\n    //Caso a session tenha expirado durante o runtime, redireciona:\n    if(this.state.sessionExpired){\n      return <Redirect to=\"/\" />\n    }\n    //Caso ainda esteja carregando os dados do servidor:\n    else if(this.state.loadingNotifs){\n      return <span></span>;\n    }\n    //Caso contrário, renderiza a página normalmente:\n    else{\n      return <React.Fragment>\n        <Container fluid className={\"my-no-padding\" + this.getDarkTheme() }>\n          <Topbar logout={this.logout} toggleDarkTheme={this.toggleDarkTheme}/>\n          <Container className={this.getPageClasses()}>\n            <Row>\n              <Col lg={2} className=\"d-none d-lg-flex pr-0 pl-0\">\n                <div className=\"my-ads pl-2\">Ads</div>\n              </Col>\n              <Col xs={12} sm={8} lg={7} className=\"my-content-col order-md-2 order-lg-1\">\n                { this.renderNotifications() }\n              </Col>\n              <Col sm={4} lg={3} className=\"d-none d-sm-block pr-0 pr-lg-3 h-100 order-md-1 order-lg-2\">\n                <FollowingFeed />\n              </Col>\n            </Row>\n          </Container>\n        </Container>\n      </React.Fragment>\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationPage);","import React from 'react';\nimport Cookies from 'js-cookie';\nimport request from '../services/request.js';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MydriaPage, mapStateToProps, mapDispatchToProps } from './base';\n\nimport ProfilePicture from '../components/ProfilePicture.js';\n\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport {\n  faCaretDown,\n  faCaretUp\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Topbar from '../components/Topbar';\n\nclass FollowsPage extends MydriaPage {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      showingFollowed: false,\n      showingFollowing: false,\n      sessionExpired: false,  //Renderiza um objeto <Redirect> para voltar à página de login\n    }\n    this.getFollowedQty = this.getFollowedQty.bind(this);\n    this.getFollowingQty = this.getFollowingQty.bind(this);\n    this.toggleShowFollowed = this.toggleShowFollowed.bind(this);\n    this.toggleShowFollowing = this.toggleShowFollowing.bind(this);\n    this.renderFollowedList = this.renderFollowedList.bind(this);\n    this.renderFollowingList = this.renderFollowingList.bind(this);\n  }\n\n  loadPageData(){}\n\n  getFollowedQty(){\n    return this.props.user.followedBy.length;\n  }\n\n  getFollowingQty(){\n    return this.props.user.following.length;\n  }\n\n  toggleShowFollowing(){\n    this.setState({\n      showingFollowing: !this.state.showingFollowing,\n      showingFollowed: false\n    })\n  }\n\n  toggleShowFollowed(){\n    this.setState({\n      showingFollowed: !this.state.showingFollowed,\n      showingFollowing: false\n    })\n  }\n\n  getFollowingCaretIcon(){\n    return this.state.showingFollowing ? \n    <FontAwesomeIcon icon={faCaretUp} />\n    : <FontAwesomeIcon icon={faCaretDown} />\n  }\n\n  getFollowedCaretIcon(){\n    return this.state.showingFollowed ?\n    <FontAwesomeIcon icon={faCaretUp} />\n    : <FontAwesomeIcon icon={faCaretDown} />\n  }\n\n  renderFollowingList(){\n    let following = [];\n    this.props.user.following.forEach(followedUser => {\n      following.push(\n        <ListGroup.Item key={followedUser.nickName} className=\"pr-1 pr-md-2 pl-r pl-md-2\">\n          <ProfilePicture nickname={followedUser.nickname}\n            pictureId={followedUser.profilePicture} \n            size=\"small\" />\n          <a href={\"/profile/\" + followedUser.nickname} className=\"my-post-author-name\">\n            <strong>{followedUser.nickname}</strong>\n          </a>\n        </ListGroup.Item>\n      )\n    })\n    return following;\n  }\n\n  renderFollowedList(){\n    let followed = [];\n    this.props.user.followedBy.forEach(followingUser => {\n      followed.push(\n        <ListGroup.Item key={followingUser.nickName} className=\"pr-1 pr-md-2 pl-r pl-md-2\">\n          <ProfilePicture nickname={followingUser.nickname}\n            pictureId={followingUser.profilePicture} \n            size=\"small\" />\n          <a href={\"/profile/\" + followingUser.nickname} className=\"my-post-author-name\">\n            <strong>{followingUser.nickname}</strong>\n          </a>\n        </ListGroup.Item>\n      )\n    })\n    return followed;\n  }\n\n  render(){\n    //Caso a session tenha expirado durante o runtime, redireciona:\n    if(this.state.sessionExpired){\n      return <Redirect to=\"/\" />\n    }\n    //Caso ainda esteja carregando os dados do servidor:\n    else if(this.state.loadingNotifs){\n      return <span></span>;\n    }\n    //Caso contrário, renderiza a página normalmente:\n    else{\n      return <React.Fragment>\n        <Container fluid className={\"my-no-padding\" + this.getDarkTheme() }>\n          <Topbar logout={this.logout} toggleDarkTheme={this.toggleDarkTheme}/>\n          <Container className={this.getPageClasses()}>\n            <Row>\n              <Col lg={2} className=\"d-none d-lg-flex pr-0 pl-0\">\n                <div className=\"my-ads pl-2\">Ads</div>\n              </Col>\n              <Col xs={12} sm={8} lg={7} className=\"my-content-col order-md-2 order-lg-1\">\n                <h4 className=\"mb-3\">People you follow</h4>\n                <Accordion>\n                  <Card>\n                    <Card.Header className=\"followed-header d-flex \n                    align-items-center justify-content-between\">\n                      <span>\n                        You're currently followed by { this.getFollowedQty() } people.\n                      </span>\n                      <Accordion.Toggle as={Button} onClick={this.toggleShowFollowed}\n                       variant=\"white\" eventKey=\"0\">\n                        { this.getFollowedCaretIcon() }\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                      <Card.Body>\n                        <ListGroup variant=\"flush\">\n                          { this.renderFollowingList() }\n                        </ListGroup>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                  <Card>\n                    <Card.Header className=\"followed-header d-flex\n                    align-items-center justify-content-between\">\n                      <span>\n                        You are currently following { this.getFollowingQty() } people.\n                      </span>\n                      <Accordion.Toggle as={Button} onClick={this.toggleShowFollowing}\n                       variant=\"white\" eventKey=\"1\">\n                        { this.getFollowingCaretIcon() }\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"1\">\n                      <Card.Body>\n                        <ListGroup variant=\"flush\">\n                          { this.renderFollowedList() }\n                        </ListGroup>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                </Accordion>\n              </Col>\n            </Row>\n          </Container>\n        </Container>\n      </React.Fragment>\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowsPage);","import Login from './Login';\nimport NotFound from './NotFound';\nimport Feed from './Feed';\nimport Profile from './Profile';\nimport Post from './Post';\nimport Notifications from './Notifications';\nimport Follows from './Follows';\n\nexport default {\n  Login,\n  NotFound,\n  Follows,\n  Feed,\n  Profile,\n  Post,\n  Notifications\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './mydria.css';\nimport { Redirect, Switch } from 'react-router-dom';\n\nimport mydriaApp from './reducers';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport pages from './pages';\n\nconst store = createStore(mydriaApp);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n\n      {/* Todas as páginas existentes são inseridas aqui */}\n      \n      <Route exact path=\"/\" component={pages.Login}/>\n      <Route exact path=\"/profile/:nickname\" component={pages.Profile}/>\n      <Route exact path=\"/post/:postId\" component={pages.Post}/>\n      <Route exact path=\"/feed\" component={pages.Feed}/>\n      <Route exact path=\"/notifications\" component={pages.Notifications}/>\n      <Route exact path=\"/follows\" component={pages.Follows}/>\n      <Route path='*' component={pages.NotFound}/>\n      \n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}